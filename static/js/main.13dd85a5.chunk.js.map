{"version":3,"sources":["serviceWorker.js","lib/config.js","reducers/default-state.js","actions/actions-types.js","reducers/app.js","reducers/user.js","reducers/movies.js","reducers/tvseries.js","reducers/index.js","configureStore.js","components/LayoutComponents/Button.js","components/LayoutComponents/Form.js","components/LayoutComponents/Input.js","components/LayoutComponents/Tag.js","components/LayoutComponents/Notification.js","components/LayoutComponents/ProgressBar.js","components/LayoutComponents/ProgressCircle.js","components/LayoutComponents/Checkbox.js","components/LayoutComponents/Tabs.js","components/LayoutComponents/Tab.js","lib/axios-wrapper.js","actions/user.js","actions/movies.js","actions/tvseries.js","actions/app.js","actions/index.js","components/BingerComponents/Avatar.js","components/BingerComponents/SearchBar.js","components/BingerComponents/Navbar.js","routes/PrivateRoute.js","routes/PublicRoute.js","pages/LoginPage/index.js","pages/RegisterPage/index.js","pages/ComponentsPage/index.js","components/BingerComponents/CurrentlyWatching.js","components/BingerComponents/WatchedMovies.js","components/BingerComponents/Wishlist.js","pages/MainPage/index.js","pages/MovieDetailsPage/index.js","pages/TVSeriesDetailsPage/index.js","routes/routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","API_URL","process","FIREBASE_API_KEY","THE_MOVIE_DB_TOKEN","LOCKR_PREFIX","colors","MOVIE_DB_PAYLOAD","api_key","language","lockr","prefix","config","user","authenticated","get","data","rolesConstants","tvSeriesWishlist","moviesWishlist","currentlyWatching","tvseries","searchData","viewTVSeriesDetails","viewTVSeriesCast","movies","viewMovieDetails","viewMovieCast","app","isFetching","USER_LOG_IN_SUCCESS","USER_LOG_OUT_SUCCESS","USER_SET_CURRENT_USER","USER_SET_TV_SERIES_WISHLIST","USER_SET_MOVIES_WISHLIST","USER_SET_CURRENTLY_WATCHING","MOVIES_GET_DETAILS_SUCCESS","MOVIES_GET_CAST_SUCCESS","MOVIES_SEARCH_SUCCESS","MOVIES_SEARCH_CLEAR","MOVIES_DETAILS_CLEAR","TVSERIES_GET_DETAILS_SUCCESS","TVSERIES_GET_CAST_SUCCESS","TVSERIES_SEARCH_SUCCESS","TVSERIES_SEARCH_CLEAR","TVSERIES_DETAILS_CLEAR","APP_MEDIA_SEARCH_SUCCESS","APP_MEDIA_SEARCH_CLEAR","userState","state","defaultState","action","type","Object","assign","set","uid","rm","id","email","firstName","lastName","rootReducer","history","combineReducers","router","connectRouter","createBrowserHistory","basename","Button","this","props","icon","text","className","style","shape","show","undefined","expandTextOnHover","onButtonClick","onClick","event","React","Component","Form","validateForm","Promise","resolve","reject","inputArray","values","isValidForm","keys","map","item","value","isRequired","isValid","setState","handleChange","name","children","Input","required","onSubmit","key","onInputChange","label","onChange","target","Tag","inputText","setTagType","onTagClose","color","handleInputKeyDown","e","onTagSubmit","handleInputChange","closable","backgroundColor","autoFocus","onKeyDown","emitter","require","notification","options","emit","Notification","onShow","timeout","clearTimeout","top","setTimeout","showNotification","duration","title","description","isActive","on","ProgressBar","regular","darken","width","ProgressCircle","size","strokeWidth","percentage","radius","viewBox","dashArray","Math","PI","dashOffset","height","cx","cy","r","transform","strokeDasharray","strokeDashoffset","stroke","fill","x","y","textAnchor","onCheckboxChange","checked","Tabs","activeTab","defaultActiveTab","handleTabChange","index","onTabChange","tab","Tab","post","url","headers","apiUrl","isRoot","SERVER_ROOT","axios","method","then","res","params","put","patch","delete","loginSuccess","logOutSuccess","setCurrentUser","setTVSeriesWishlist","setMoviesWishlist","setCurrentlyWatching","register","payload","dispatch","firebase","auth","createUserWithEmailAndPassword","password","result","database","ref","avatar","push","catch","error","message","login","signInWithEmailAndPassword","logOut","signOut","getCurrentUser","onAuthStateChanged","snapshot","userData","val","addTagToMovie","tag","movie_id","userId","floor","random","length","deleteTagFromMovie","remove","addTagToTVSeries","tv_id","deleteTagFromTVSeries","watchMovie","movie","user_id","unWatchMovie","addMovieToFavorite","removeMovieFromFavorite","addMovieToWishlist","removeMovieFromWishlist","addTVSeriesToWishlist","tv","tvId","removeTVSeriesFromWishlist","watchEpisode","season_id","episode_id","episode_name","episode_number","timestamp","Date","season_number","season_name","poster_path","tv_poster_path","tv_name","last_episode_seen","episode_season","unWatchEpisode","once","tvSnapshot","seasonSnapshot","watchSeason","episodes","episode","unWatchSeason","contentSnapshot","getTVSeriesWishlist","content","tvSeriesArray","getMoviesWishlist","moviesArray","getCurrentlyWatching","a","all","tv_metadata","metadata","lastEpisodeSeen","http","result1","tvResult","seasons","season","result2","results","getMovieDetailsSuccess","getMovieCastSuccess","searchMovieSuccess","moviesSearchClear","movieDetailsClear","getMovieDetails","tagsSnapshot","watchedSnapshot","wishlistSnapshot","favoriteSnapshot","tags","tagsSnap","watchedSnap","wishlistSnap","favoriteSnap","_","watched","wishlist","favorite","movieData","getMovieCast","searchMovies","movieTitle","query","tvseriesDetailsClear","getTVSeriesSeasonDetails","getTVSeriesDetails","getTVSeriesPercentage","number_of_episodes","seasonsResult","totalWatched","tvSeriesData","getTVSeriesCast","searchTVSeries","tvseriesTitle","seen","numberOfEpisodes","toFixed","err","searchMediaSuccess","mediaSearchClear","searchMedia","filter","media_type","userActions","moviesActions","tvseriesActions","appActions","Avatar","data-toggle","src","alt","mapDispatchToProps","connect","SearchBar","search","goToMediaPage","media","goToMoviePage","goToTVSeriesPage","placeholder","original_title","original_name","Navbar","href","data-target","aria-controls","aria-expanded","aria-label","PrivateRoute","component","rest","render","Fragment","to","pathname","from","PublicRoute","LoginPage","handleSubmit","preventDefault","form","c","goToRegister","RegisterPage","pick","console","log","goToLogin","ComponentsPage","scope","CurrentlyWatching","showButton","fadeAnimation","handleEpisodeWatch","prevProps","still_path","position","left","toString","padStart","flexDirection","alignSelf","WatchedMovies","Wishlist","showDeleteButton","hideDeleteButton","slice","onMouseEnter","onMouseLeave","moment","date","format","MainPage","MovieDetailsPage","addToFavorite","removeFromFavorite","addToWishlist","removeFromWishlist","release_date","cast","actor","profile_path","character","TVSeriesDetailsPage","handleEpisodeCheckbox","status","slug","split","handleSeasonCheckbox","getPercentageColor","first_air_date","isFavourite","routes","exact","path","App","setLoadingState","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","provider","GoogleAuthProvider","store","createStore","createRootReducer","applyMiddleware","routerMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"s4EAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YClBS,G,MAAA,CACdC,QAASC,+BACTC,iBAAkBD,0CAClBE,mBAAoBF,mCACpBG,aAAc,OACdC,OAAQ,CAAC,UAAU,UAAU,WAC7BC,iBAAkB,CACjBC,QAASN,mCACPO,SAAU,W,gDCLdC,IAAMC,OAASC,EAAOP,aAEtB,IAEe,GACbQ,KAAM,CACJC,gBAJaJ,IAAMK,IAAI,iBAKvBC,KAAM,GACNC,eAAgB,GAChBC,iBAAkB,GAClBC,eAAgB,GAChBC,kBAAmB,IAErBC,SAAU,CACRC,WAAY,GACZC,oBAAqB,KACrBC,iBAAkB,MAEpBC,OAAQ,CACNH,WAAY,GACZI,iBAAkB,KAClBC,cAAe,MAEjBC,IAAK,CACHC,YAAY,EACZP,WAAY,KC3BHQ,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAwB,wBACxBC,EAA8B,8BAC9BC,EAA2B,2BAC3BC,EAA8B,8BAG9BC,EAA6B,6BAC7BC,EAA0B,0BAC1BC,EAAwB,wBACxBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAA+B,+BAC/BC,EAA4B,4BAC5BC,EAA0B,0BAC1BC,EAAwB,wBACxBC,EAAyB,yBAGzBC,EAA2B,2BAC3BC,EAAyB,yBCdvB,SAASC,IAA6C,IAAnCC,EAAkC,uDAA1BC,EAAatB,IAAKuB,EAAQ,uCAElE,OAAQA,EAAOC,MAEb,KAAKN,EACH,OAAOO,OAAOC,OAAO,GAAIL,EAAO,CAC9B3B,WAAY6B,EAAOnC,OAGvB,KAAK+B,EACH,OAAOM,OAAOC,OAAO,GAAIL,EAAO,CAC9B3B,WAAY,KAGhB,QACE,OAAO2B,GCXE,SAASD,IAA8C,IAApCC,EAAmC,uDAA3BC,EAAarC,KAAMsC,EAAQ,uCAEnE,OAAQA,EAAOC,MAEb,KAAKtB,EAEH,OADApB,IAAM6C,IAAI,gBAAiBJ,EAAOnC,KAAKwC,KAChCH,OAAOC,OAAO,GAAIL,EAAO,CAC9BjC,KAAMmC,EAAOnC,KACbF,eAAe,IAGnB,KAAKiB,EAEH,OADArB,IAAM+C,GAAG,iBACFJ,OAAOC,OAAO,GAAIL,EAAO,CAC9BjC,KAAM,CAAC0C,GAAI,GAAIC,MAAO,GAAIC,UAAW,GAAIC,SAAU,GAAIL,IAAK,IAC5D1C,eAAe,IAGnB,KAAKkB,EACH,OAAOqB,OAAOC,OAAO,GAAIL,EAAO,CAC9BjC,KAAMmC,EAAOnC,KACbF,eAAe,IAGnB,KAAKmB,EACH,OAAOoB,OAAOC,OAAO,GAAIL,EAAO,CAC9B/B,iBAAkBiC,EAAOnC,OAG7B,KAAKkB,EACH,OAAOmB,OAAOC,OAAO,GAAIL,EAAO,CAC9B9B,eAAgBgC,EAAOnC,OAG3B,KAAKmB,EACH,OAAOkB,OAAOC,OAAO,GAAIL,EAAO,CAC9B7B,kBAAmB+B,EAAOnC,OAG9B,QACE,OAAOiC,GCzCE,SAASD,IAAgD,IAAtCC,EAAqC,uDAA7BC,EAAazB,OAAQ0B,EAAQ,uCAErE,OAAQA,EAAOC,MAEb,KAAKhB,EACH,OAAOiB,OAAOC,OAAO,GAAIL,EAAO,CAC9BvB,iBAAkByB,EAAOnC,OAG7B,KAAKqB,EACH,OAAOgB,OAAOC,OAAO,GAAIL,EAAO,CAC9BtB,cAAewB,EAAOnC,OAG1B,KAAKsB,EACH,OAAOe,OAAOC,OAAO,GAAIL,EAAO,CAC9B3B,WAAY6B,EAAOnC,OAGvB,KAAKuB,EACH,OAAOc,OAAOC,OAAO,GAAIL,EAAO,CAC9B3B,WAAY,KAGhB,KAAKkB,EACH,OAAOa,OAAOC,OAAO,GAAIL,EAAO,CAC9BvB,iBAAkB,KAClBC,cAAe,OAGnB,QACE,OAAOsB,GC/BE,SAASD,IAAkD,IAAxCC,EAAuC,uDAA/BC,EAAa7B,SAAU8B,EAAQ,uCAEvE,OAAQA,EAAOC,MAEb,KAAKX,EACH,OAAOY,OAAOC,OAAO,GAAIL,EAAO,CAC9B1B,oBAAqB4B,EAAOnC,OAGhC,KAAK0B,EACH,OAAOW,OAAOC,OAAO,GAAIL,EAAO,CAC9BzB,iBAAkB2B,EAAOnC,OAG7B,KAAK2B,EACH,OAAOU,OAAOC,OAAO,GAAIL,EAAO,CAC9B3B,WAAY6B,EAAOnC,OAGvB,KAAK4B,EACH,OAAOS,OAAOC,OAAO,GAAIL,EAAO,CAC9B3B,WAAY,KAGhB,KAAKuB,EACH,OAAOQ,OAAOC,OAAO,GAAIL,EAAO,CAC9B1B,oBAAqB,KACrBC,iBAAkB,OAGtB,QACE,OAAOyB,GHpCbvC,IAAMC,OAASC,EAAOP,aCItBK,IAAMC,OAASC,EAAOP,aCDtBK,IAAMC,OAASC,EAAOP,aCAtBK,IAAMC,OAASC,EAAOP,a,YCGPyD,EARK,SAACC,GAAD,OAAaC,YAAgB,CAC/CC,OAAQC,YAAcH,GACtBnC,MACAf,OACAY,SACAJ,cCLW0C,EAAUI,YAAqB,CAAEC,SAAUlE,gB,gECLnCmE,E,iLAEV,IAAD,EAE+BC,KAAKC,MAArCC,EAFC,EAEDA,KAAMC,EAFL,EAEKA,KAAMC,EAFX,EAEWA,UAAWC,EAFtB,EAEsBA,MACxBvB,EAAOkB,KAAKC,MAAMnB,MAAQ,SACxBwB,EAAQN,KAAKC,MAAMK,OAAS,SAC5BC,OAA2BC,IAApBR,KAAKC,MAAMM,MAA4BP,KAAKC,MAAMM,KACzDE,EAAoBT,KAAKC,MAAMQ,oBAAqB,EACtDC,EAAgBV,KAAKC,MAAMS,eAAkB,aAEnD,OAASH,GACL,4BACEH,UAAS,UAAKA,EAAL,kCAAwCE,GACjDD,MAAOA,EACPvB,KAAMA,EACN6B,QAAS,SAACC,GAAD,OAAWF,EAAcE,KAChCV,GACA,0BAAME,UAAU,mBACd,uBAAGA,UAAS,iBAAYF,EAAZ,aAGdC,GACA,0BAAMC,UAAWK,EAAoB,6BAA+B,mBACjEN,Q,GAxBuBU,IAAMC,WCCrBC,G,YAInB,WAAYd,GAAQ,IAAD,8BACjB,4CAAMA,KAHRtB,MAAQ,GAEW,EAcnBqC,aAAe,WACb,OAAO,IAAIC,QAAQ,SAACC,EAAQC,GAC1B,IAAIC,EAAa,EAAKzC,MAClB0C,EAAS,GACTC,GAAc,EAClBvC,OAAOwC,KAAKH,GAAYI,IAAI,SAAAC,GACK,KAA3BL,EAAWK,GAAMC,OAAgBN,EAAWK,GAAME,YACpDP,EAAWK,GAAMG,SAAU,EAC3BN,GAAc,IAEdD,EAAOI,GAAQL,EAAWK,GAAMC,MAChCN,EAAWK,GAAMG,SAAU,KAG/B,EAAKC,SAAST,GACdE,EAAcJ,EAAQG,GAAUF,EAAO,4CA7BxB,EAiCnBW,aAAe,SAACC,EAAML,GACpB,IAAIN,EAAa,EAAKzC,MACtByC,EAAWW,GAAML,MAAQA,EACzB,EAAKG,SAAST,IAjCd,EAAKnB,MAAM+B,SAASR,IAAI,SAAAC,GAClBA,EAAK3C,OAASmD,KAChB,EAAKtD,MAAM8C,EAAKxB,MAAM8B,MAAQ,CAC5BL,MAAO,GACPE,SAAS,EACTD,aAAYF,EAAKxB,MAAMiC,aARZ,E,sEAuCV,IAAD,OACCF,EAAYhC,KAAKC,MAAjB+B,SACP,OACE,0BAAMG,SAAUnC,KAAKC,MAAMkC,UACxBH,EAASR,IAAI,SAAAC,GACZ,OAAOA,EAAK3C,OAASmD,GACnB,kBAAC,GAAD,eACEG,IAAKX,EAAKxB,MAAM8B,KAChBL,MAAO,EAAK/C,MAAM8C,EAAKxB,MAAM8B,MAAML,MACnCE,QAAS,EAAKjD,MAAM8C,EAAKxB,MAAM8B,MAAMH,QACrCS,cAAe,EAAKP,cAChBL,EAAKxB,QAAYwB,S,GAtDDZ,IAAMC,WCDnBmB,G,iLAEV,IAAD,EAC4BjC,KAAKC,MAAlCqC,EADC,EACDA,MAAOpC,EADN,EACMA,KAAM6B,EADZ,EACYA,KAAML,EADlB,EACkBA,MACpBE,OAAiCpB,IAAvBR,KAAKC,MAAM2B,SAAwB5B,KAAKC,MAAM2B,QACxD9C,EAAOkB,KAAKC,MAAMnB,MAAQ,OAC1BuD,EAAgBrC,KAAKC,MAAMoC,eAAkB,aAEnD,OACC,yBAAKjC,UAAU,cACX,yBAAKA,UAAU,gBACjB,2BAAOA,UAAU,sBAAsBkC,GACvC,0BAAMlC,UAAU,qBACf,uBAAGA,UAAS,iBAAYF,MAErB,2BACHE,UAAS,4BAAwBwB,EAAsC,GAA5B,2BAC3C9C,KAAMA,EACN4C,MAAOA,EACPa,SAAU,SAAC3B,GAAD,OAAWyB,EAAcN,EAAMnB,EAAM4B,OAAOd,gB,GAnBzBb,IAAMC,WCApB2B,G,2MAEnB9D,MAAQ,CACN4B,MAAM,EACNzB,KAAM,EAAKmB,MAAMnB,MAAQ,SACzB4D,UAAW,I,EAGbC,WAAa,SAAC7D,GACZ,EAAK+C,SAAS,CAAC/C,KAAMA,K,EAGvB8D,WAAa,WACX,IAAMA,EAAa,EAAK3C,MAAM2C,YAAe,aAC7C,EAAKf,SAAS,CAACtB,MAAM,IACrBqC,EAAW,CACTzC,KAAM,EAAKF,MAAME,KACjB0C,MAAO,EAAK5C,MAAM4C,MAClB3D,IAAK,EAAKe,MAAMf,O,EAIpB4D,mBAAqB,SAACC,GACN,UAAVA,EAAEX,OACgB,EAAKnC,MAAM+C,aAAgB,cACnC,EAAKrE,MAAM+D,WACvB,EAAKb,SAAS,CAACa,UAAW,GAAI5D,KAAM,U,EAIxCmE,kBAAoB,SAACF,GACnB,EAAKlB,SAAS,CAACa,UAAWK,EAAEP,OAAOd,S,wEAG5B,IAAD,SAEmC1B,KAAKC,MAAtCC,EAFF,EAEEA,KAAMC,EAFR,EAEQA,KAAM0C,EAFd,EAEcA,MAAOzC,EAFrB,EAEqBA,UAFrB,EAGsBJ,KAAKrB,MAAzBG,EAHF,EAGEA,KAAM4D,EAHR,EAGQA,UACRQ,EAAWlD,KAAKC,MAAMiD,WAAY,EAExC,OACE,6BACW,WAATpE,GACA,yBACEuB,MAAO,CAAC8C,gBAAiBN,GACzBzC,UAAS,UAAKA,EAAL,gBAEPF,GACA,0BAAME,UAAU,mBACd,uBAAGA,UAAS,iBAAYF,EAAZ,aAGdC,GACA,0BAAMC,UAAU,mBACbD,GAGH+C,GACA,0BACE9C,UAAU,wBACVO,QAASX,KAAK4C,YACd,uBAAGxC,UAAU,0BAMV,QAATtB,GACA,yBACEsB,UAAU,aACVO,QAAS,kBAAM,EAAKgC,WAAW,WAC/B,yBAAKvC,UAAU,kBACb,0BAAMA,UAAU,mBACd,uBAAGA,UAAU,iBAEf,0BAAMA,UAAU,mBAAhB,aAOK,UAATtB,GACA,yBAAKsB,UAAU,cACb,2BACEgD,WAAS,EACTC,UAAWrD,KAAK8C,mBAChBP,SAAUvC,KAAKiD,kBACfvB,MAAOgB,EACPtC,UAAU,mBACVtB,KAAK,SACP,0BACEsB,UAAU,yBACVO,QAAS,kBAAM,EAAKgC,WAAW,SAC/B,uBAAGvC,UAAU,0BAKR,WAATtB,GAAqB,U,GAnGI+B,IAAMC,WCCjCwC,GAAU,IAFPC,EAAQ,KAIJC,GAAe,SAACC,GAC3BH,GAAQI,KAAK,eAAgBD,IAGVE,G,YAEnB,WAAY1D,GAAQ,IAAD,8BACjB,4CAAMA,KAeR2D,OAAS,SAACH,GACJ,EAAKI,SACPC,aAAa,EAAKD,SAClB,EAAKhC,SAAS,CAAEkC,KAAM,KAAM,WAC1B,EAAKF,QAAUG,WAAW,WACxB,EAAKC,iBAAiBR,IACrB,QAGL,EAAKQ,iBAAiBR,IAzBP,EA6BnBQ,iBAAmB,SAACR,GAClB,EAAK5B,SAAS,CACZkC,IAAK,IACLN,QAAS,CACP3E,KAAM2E,EAAQ3E,MAAQ,OACtBoF,SAAUT,EAAQS,UAAY,IAC9BC,MAAOV,EAAQU,OAAS,GACxBC,YAAaX,EAAQW,aAAe,GACpClE,KAAMuD,EAAQvD,MAAQ,KAEvB,WACD,EAAK2D,QAAUG,WAAW,WACxB,EAAKnC,SAAS,CACZkC,KAAM,OAEP,EAAKpF,MAAM8E,QAAQS,aAzCxB,EAAKvF,MAAQ,CACX0F,UAAU,EACVN,KAAM,IACNN,QAAS,IAGX,EAAKI,QAAU,KAEfP,GAAQgB,GAAG,eAAgB,SAACb,GAC1B,EAAKG,OAAOH,KAZG,E,sEAgDT,IAAD,EACgBzD,KAAKrB,MAArB8E,EADA,EACAA,QAASM,EADT,EACSA,IAEhB,OACE,yBAAK1D,MAAO,CAAC0D,IAAKA,GAAM3D,UAAS,8BAAyBqD,EAAQ3E,OAC/D2E,EAAQvD,MACP,yBAAKE,UAAU,4BACb,uBAAGA,UAAS,iBAAYqD,EAAQvD,SAGpC,yBAAKE,UAAU,iCACZqD,EAAQU,OACL,0BAAM/D,UAAU,6BAA6BqD,EAAQU,OAExDV,EAAQW,aACL,0BAAMhE,UAAU,mCAAmCqD,EAAQW,mB,GAjE/BvD,IAAMC,WCP3ByD,G,iLAIjB,IAAM7C,EAAQ1B,KAAKC,MAAMyB,OAAS,EAC5BmB,EAAQ7C,KAAKC,MAAM4C,OAAS,QAC5B7G,EAAS,CACb,MAAS,CACPwI,QAAS,UACTC,OAAQ,WAEV,IAAO,CACLD,QAAS,UACTC,OAAQ,WAEV,KAAQ,CACND,QAAS,UACTC,OAAQ,WAEV,OAAU,CACRD,QAAS,UACTC,OAAQ,WAEV,OAAU,CACRD,QAAS,UACTC,OAAQ,WAEV,KAAQ,CACND,QAAS,UACTC,OAAQ,YAId,OACI,6BACE,yBAAKpE,MAAO,CAAC8C,gBAAiBnH,EAAO6G,GAAO4B,QAASrE,UAAU,uBAC7D,yBAAKA,UAAU,gCAAgCC,MAAO,CAACqE,MAAM,GAAD,OAAKhD,EAAL,KAAeyB,gBAAiBnH,EAAO6G,GAAO2B,iB,GApC3E3D,IAAMC,WCA1B6D,G,YACnB,WAAY1E,GAAQ,IAAD,8BACjB,4CAAMA,KACDtB,MAAQ,GAFI,E,sEAMjB,IAAMiG,EAAO5E,KAAKC,MAAM2E,MAAQ,GAC1B/B,EAAQ7C,KAAKC,MAAM4C,OAAS,QAC5B7G,EAAS,CACb,MAAS,CACPwI,QAAS,UACTC,OAAQ,WAEV,IAAO,CACLD,QAAS,UACTC,OAAQ,WAEV,KAAQ,CACND,QAAS,UACTC,OAAQ,WAEV,OAAU,CACRD,QAAS,UACTC,OAAQ,WAEV,OAAU,CACRD,QAAS,UACTC,OAAQ,WAEV,OAAU,CACRD,QAAS,UACTC,OAAQ,WAEV,KAAQ,CACND,QAAS,UACTC,OAAQ,YAGNI,EAAc7E,KAAKC,MAAM4E,aAAe,EACxCC,OAAwCtE,IAA1BR,KAAKC,MAAM6E,YAAsD,IAA1B9E,KAAKC,MAAM6E,WAAoB,EAAI9E,KAAKC,MAAM6E,WAGnGC,GAAUH,EAAOC,GAAe,EAEhCG,EAAO,cAAUJ,EAAV,YAAkBA,GAEzBK,EAAYF,EAASG,KAAKC,GAAK,EAE/BC,EAAaH,EAAYA,EAAYH,EAAa,IAExD,OACE,yBACIJ,MAAOE,EACPS,OAAQT,EACRI,QAASA,GACT,4BACE5E,UAAU,oBACVkF,GAAIV,EAAO,EACXW,GAAIX,EAAO,EACXY,EAAGT,EACHF,YAAW,UAAKA,EAAL,QACb,4BACEzE,UAAU,kBACVkF,GAAIV,EAAO,EACXW,GAAIX,EAAO,EACXY,EAAGT,EACHF,YAAW,UAAKA,EAAL,MACXY,UAAS,qBAAgBb,EAAO,EAAvB,YAA4BA,EAAO,EAAnC,KACTvE,MAAO,CACLqF,gBAAiBT,EACjBU,iBAAkBP,EAClBQ,OAAQ5J,EAAO6G,GAAO4B,UAE1B,0BACEpE,MAAO,CAACwF,KAAM7J,EAAO6G,GAAO4B,QAC5BrE,UAAU,cACV0F,EAAE,MACFC,EAAE,MACFC,WAAW,UACVlB,EANH,U,GA1EkCjE,IAAMC,WCA7BmB,G,2MACnBgE,iBAAmB,YACQ,EAAKhG,MAAMgG,kBAAqB,cACxC,EAAKhG,MAAM8B,MAAO,EAAK9B,MAAMiG,U,wEAGvC,IACCrD,EAAU7C,KAAKC,MAAf4C,MACFqD,EAAUlG,KAAKC,MAAMiG,UAAW,EAExC,OACC,6BACMA,EACC,0BAAMvF,QAASX,KAAKiG,iBAAkB7F,UAAS,yDAAoDyC,IACjG,uBAAGzC,UAAU,yBAEf,0BAAMO,QAASX,KAAKiG,iBAAkB7F,UAAS,yDAAoDyC,IACjG,uBAAGzC,UAAU,wB,GAjBUS,IAAMC,WCApBqF,G,2MAEnBxH,MAAQ,CACNyH,UAAW,EAAKnG,MAAMoG,iBAAmB,GAAK,G,EAGhDC,gBAAkB,SAACC,GACjB,EAAK1E,SAAS,CAACuE,UAAWG,KACN,EAAKtG,MAAMuG,aAAgB,cACnCD,EAAQ,I,wEAGb,IAAD,OACCvE,EAAYhC,KAAKC,MAAjB+B,SACAoE,EAAapG,KAAKrB,MAAlByH,UAEP,OACE,yBAAKhG,UAAU,eACb,yBAAKA,UAAU,oBACX4B,GAAYA,EAASR,IAAI,SAACiF,EAAKF,GAAN,OACzB,yBACEnE,IAAKmE,EACLnG,UAAS,gCAA2BmG,IAAUH,EAAV,yBAAiD,MACrFzF,QAAS,kBAAM,EAAK2F,gBAAgBC,KAEnCE,GAAOA,EAAIxG,OAASwG,EAAIxG,MAAMqC,UAIrC,yBAAKlC,UAAU,uBACZ4B,EAASoE,S,GA9BcvF,IAAMC,WCAnB4F,G,iLAEV,IAEA1E,EAAYhC,KAAKC,MAAjB+B,SAET,OACI,yBAAK5B,UAAU,cACX4B,O,GARuBnB,IAAMC,W,6BC0CxB,QACb6F,KAjCF,SAAcC,EAAKlK,EAAM+G,GACvB,IAAMoD,EARiB,CACrB,eAAgB,oBAQZC,EAASrD,GAAWA,EAAQsD,OAASzK,EAAO0K,YAAc1K,EAAOX,QACvE,OAAOsL,KAAM,CAACC,OAAQ,OAAQN,IAAI,GAAD,OAAKE,EAAL,YAAeF,GAAOlK,OAAMmK,YAC1DM,KAAK,SAAAC,GAAG,OAAIA,EAAI1K,QA8BnBD,IA3BF,SAAamK,EAAKS,EAAQ5D,GACxB,IAAMoD,EAfiB,CACrB,eAAgB,oBAeZC,EAASrD,GAAWA,EAAQsD,OAASzK,EAAO0K,YAAc1K,EAAOX,QACvE,OAAOsL,KAAM,CAACC,OAAQ,MAAON,IAAI,GAAD,OAAKE,EAAL,YAAeF,GAAOS,SAAQR,YAC3DM,KAAK,SAAAC,GAAG,OAAIA,EAAI1K,QAwBnB4K,IArBF,SAAaV,EAAKlK,GAChB,IAAMmK,EAtBiB,CACrB,eAAgB,oBAsBlB,OAAOI,KAAM,CAACC,OAAQ,MAAON,IAAI,GAAD,OAAKtK,EAAOX,QAAZ,YAAuBiL,GAAOlK,OAAMmK,YACjEM,KAAK,SAAAC,GAAG,OAAIA,EAAI1K,QAmBnB6K,MAhBF,SAAeX,EAAKlK,GAClB,IAAMmK,EA5BiB,CACrB,eAAgB,oBA4BlB,OAAOI,KAAM,CAACC,OAAQ,QAASN,IAAI,GAAD,OAAKtK,EAAOX,QAAZ,YAAuBiL,GAAOlK,OAAMmK,YACnEM,KAAK,SAAAC,GAAG,OAAIA,EAAI1K,QAcnB8K,OAXF,SAAuBZ,EAAKS,GAC1B,IAAMR,EAlCiB,CACrB,eAAgB,oBAkClB,OAAOI,KAAM,CAACC,OAAQ,SAAUN,IAAI,GAAD,OAAKtK,EAAOX,QAAZ,YAAuBiL,GAAOS,SAAQR,YACtEM,KAAK,SAAAC,GAAG,OAAIA,EAAI1K,S,mBC1Bd,SAAS+K,GAAa/K,GAC3B,MAAO,CAACoC,KAAMtB,EAAqBd,QAG9B,SAASgL,KACd,MAAO,CAAC5I,KAAMrB,GAGT,SAASkK,GAAejL,GAC7B,MAAO,CAACoC,KAAMpB,EAAuBhB,QAGhC,SAASkL,GAAoBlL,GAClC,MAAO,CAACoC,KAAMnB,EAA6BjB,QAGtC,SAASmL,GAAkBnL,GAChC,MAAO,CAACoC,KAAMlB,EAA0BlB,QAGnC,SAASoL,GAAqBpL,GACnC,MAAO,CAACoC,KAAMjB,EAA6BnB,QAGtC,IAAMqL,GAAW,SAACC,GAAD,OAAa,SAACC,GACpCC,KAASC,OAAOC,+BAA+BJ,EAAQ3I,MAAO2I,EAAQK,UAAUlB,KAAK,SAAAmB,GACnFJ,KAASK,WAAWC,IAApB,gBAAiCF,EAAO/L,KAAK2C,IAA7C,cAA6DD,IAAI,CAC/D8C,KAAMiG,EAAQjG,KACd1C,MAAO2I,EAAQ3I,MACfoJ,OAAQ,yDAEVjF,GAAa,CACX1E,KAAM,UACNqF,MAAO,mBACPC,YAAa,iDAEf6D,EAASS,gBAAK,aAEfC,MAAM,SAAAC,GACLpF,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,mBACPC,YAAawE,EAAMC,cAKZC,GAAQ,SAACd,GAAD,OAAa,SAACC,GACjCC,KAASC,OAAOY,2BAA2Bf,EAAQ3I,MAAO2I,EAAQK,UAAUlB,KAAK,SAAAmB,GAC/EL,EAASR,GAAaa,EAAO/L,OAC7BiH,GAAa,CACX1E,KAAM,UACNqF,MAAO,mCACPjE,KAAM,iBAER+H,EAASS,gBAAK,YAEfC,MAAM,SAAAC,GACLpF,GAAa,CACXW,MAAO,gBACPC,YAAawE,EAAMC,QACnB/J,KAAM,QACNoB,KAAM,2BAKC8I,GAAS,kBAAM,SAACf,GAC3BC,KAASC,OAAOc,UAAU9B,KAAK,WAC7Bc,EAASP,MACTO,EAASS,gBAAK,aAEfC,MAAM,SAAAC,GACLpF,GAAa,CACXW,MAAO,iBACPrF,KAAM,QACNoB,KAAM,uBAER+H,EAASS,gBAAK,eAILQ,GAAiB,kBAAM,SAACjB,GAEnC,OAAG7L,IAAMK,IAAI,kBACXyL,KAASC,OAAOgB,mBAAmB,SAAA5M,GACjC2L,KAASK,WAAWC,IAApB,iBAAkCjM,EAAK2C,IAAvC,cAAuDoF,GAAG,QAAS,SAAA8E,GACjE,IAAMC,EAAWtK,OAAOC,OAAO,GAAIoK,EAASE,MAAO,CAACpK,IAAK3C,EAAK2C,MAC9D+I,EAASN,GAAe0B,QAGrBpI,QAAQC,SAAQ,IAEhBD,QAAQE,WAINoI,GAAgB,SAACC,EAAKC,EAAUC,GAAhB,OAA2B,SAACzB,GACvDC,KAASK,WAAWC,IAApB,gBAAiCkB,EAAjC,uBAAsDD,IAAYf,KAAK,CACrEvI,KAAMqJ,EACN3G,MAAOvG,EAAON,OAAOkJ,KAAKyE,MAAMzE,KAAK0E,SAAWtN,EAAON,OAAO6N,WAEhErG,GAAa,CACX1E,KAAM,UACNqF,MAAO,iBAIE2F,GAAqB,SAACN,EAAKC,EAAUC,GAAhB,OAA2B,SAACzB,GAC5DC,KAASK,WAAWC,IAApB,gBAAiCkB,EAAjC,uBAAsDD,EAAtD,YAAkED,EAAItK,MAAO6K,SAC7EvG,GAAa,CACX1E,KAAM,UACNqF,MAAO,mBAIE6F,GAAmB,SAACR,EAAKS,EAAOP,GAAb,OAAwB,SAACzB,GACvDC,KAASK,WAAWC,IAApB,gBAAiCkB,EAAjC,yBAAwDO,IAASvB,KAAK,CACpEvI,KAAMqJ,EACN3G,MAAOvG,EAAON,OAAOkJ,KAAKyE,MAAMzE,KAAK0E,SAAWtN,EAAON,OAAO6N,WAEhErG,GAAa,CACX1E,KAAM,UACNqF,MAAO,iBAIE+F,GAAwB,SAACV,EAAKS,EAAOP,GAAb,OAAwB,SAACzB,GAC5DC,KAASK,WAAWC,IAApB,gBAAiCkB,EAAjC,yBAAwDO,EAAxD,YAAiET,EAAItK,MAAO6K,SAC5EvG,GAAa,CACX1E,KAAM,UACNqF,MAAO,mBAIEgG,GAAa,SAACC,EAAOX,EAAUY,GAAlB,OAA8B,SAACpC,GACvDC,KAASK,WAAWC,IAApB,gBAAiC6B,EAAjC,0BAA0DZ,EAA1D,MAAuExK,IAAImL,GAC3E5G,GAAa,CACX1E,KAAM,UACNqF,MAAO,sCAIEmG,GAAe,SAACb,EAAUY,GAAX,OAAuB,SAACpC,GAClDC,KAASK,WAAWC,IAApB,gBAAiC6B,EAAjC,0BAA0DZ,EAA1D,MAAuEM,SACvEvG,GAAa,CACX1E,KAAM,UACNqF,MAAO,0CAIEoG,GAAqB,SAACH,EAAOX,EAAUY,GAAlB,OAA8B,SAACpC,GAC/DC,KAASK,WAAWC,IAApB,gBAAiC6B,EAAjC,2BAA2DZ,EAA3D,MAAwExK,IAAImL,GAC5E5G,GAAa,CACX1E,KAAM,UACNqF,MAAO,yCAIEqG,GAA0B,SAACf,EAAUY,GAAX,OAAuB,SAACpC,GAC7DC,KAASK,WAAWC,IAApB,gBAAiC6B,EAAjC,2BAA2DZ,EAA3D,MAAwEM,SACxEvG,GAAa,CACX1E,KAAM,UACNqF,MAAO,6CAIEsG,GAAqB,SAACL,EAAOX,EAAUY,GAAlB,OAA8B,SAACpC,GAC/DC,KAASK,WAAWC,IAApB,gBAAiC6B,EAAjC,2BAA2DZ,EAA3D,MAAwExK,IAAImL,GAC5E5G,GAAa,CACX1E,KAAM,UACNqF,MAAO,oCAIEuG,GAA0B,SAACjB,EAAUY,GAAX,OAAuB,SAACpC,GAC7DC,KAASK,WAAWC,IAApB,gBAAiC6B,EAAjC,2BAA2DZ,EAA3D,MAAwEM,SACxEvG,GAAa,CACX1E,KAAM,UACNqF,MAAO,wCAIEwG,GAAwB,SAACC,EAAIC,EAAMnB,GAAX,OAAsB,SAACzB,GAC1DC,KAASK,WAAWC,IAApB,gBAAiCkB,EAAjC,6BAA4DmB,EAA5D,MAAqE5L,IAAI2L,GACzEpH,GAAa,CACX1E,KAAM,UACNqF,MAAO,wCAIE2G,GAA6B,SAACD,EAAMnB,GAAP,OAAkB,SAACzB,GAC3DC,KAASK,WAAWC,IAApB,gBAAiCkB,EAAjC,6BAA4DmB,EAA5D,MAAqEd,SACrEvG,GAAa,CACX1E,KAAM,UACNqF,MAAO,4CAIE4G,GAAe,SAAC/C,GAAD,OAAa,SAACC,GACxCC,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,oBAA6FjC,EAAQgD,UAArG,oBAA0HhD,EAAQiD,aAAchM,IAAI,CAClJiM,aAAclD,EAAQkD,aACtBD,WAAYjD,EAAQiD,WACpBE,eAAgBnD,EAAQmD,eACxBC,UAAWC,SAGbnD,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,oBAA6FjC,EAAQgD,UAArG,cAA2H/L,IAAI,CAC7HqM,cAAetD,EAAQsD,cACvBvJ,KAAMiG,EAAQuD,YACdnM,GAAI4I,EAAQgD,YAGd9C,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,cAA8FhL,IAAI,CAChGuM,YAAaxD,EAAQyD,eACrB1J,KAAMiG,EAAQ0D,QACdtM,GAAI4I,EAAQiC,MACZ0B,kBAAmB,CACjBT,aAAclD,EAAQkD,aACtBU,eAAgB5D,EAAQ4D,eACxBX,WAAYjD,EAAQiD,WACpBE,eAAgBnD,EAAQmD,kBAI5B3H,GAAa,CACX1E,KAAM,UACNqF,MAAO,iDAIE0H,GAAiB,SAAC7D,GAAD,OAAa,SAACC,GAC1CC,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,oBAA6FjC,EAAQgD,UAArG,oBAA0HhD,EAAQiD,aAAclB,SAEhJ7B,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,aAA6F6B,KAAK,QAAS,SAAAC,GAE9F,OADFA,EAAWzC,OAElBpB,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,QAASF,WAIzF7B,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,oBAA6FjC,EAAQgD,UAArG,aAA0Hc,KAAK,QAAS,SAAAE,GAEvH,OADFA,EAAe1C,OAE1BpB,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,oBAA6FjC,EAAQgD,YAAajB,WAItHvG,GAAa,CACX1E,KAAM,UACNqF,MAAO,8CAIE8H,GAAc,SAACjE,GAAD,OAAa,SAACC,GAEvC,IAAMzG,EAAM,GACZwG,EAAQkE,SAAS1K,IAAI,SAAA2K,GAEnB3K,EAAI2K,EAAQ/M,IAAK,CACfgM,UAAWC,UAIfnD,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,oBAA6FjC,EAAQgD,UAArG,aAA0H/L,IAAIuC,GAC9H0G,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,oBAA6FjC,EAAQgD,UAArG,cAA2H/L,IAAI,CAC7HqM,cAAetD,EAAQsD,cACvBvJ,KAAMiG,EAAQuD,YACdnM,GAAI4I,EAAQgD,YAEd9C,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,cAA8FhL,IAAI,CAChGuM,YAAaxD,EAAQyD,eACrB1J,KAAMiG,EAAQ0D,QACdtM,GAAI4I,EAAQiC,MACZ0B,kBAAmB,CACjBT,aAAclD,EAAQkD,aACtBU,eAAgB5D,EAAQ4D,eACxBX,WAAYjD,EAAQiD,WACpBE,eAAgBnD,EAAQmD,kBAG5B3H,GAAa,CACX1E,KAAM,UACNqF,MAAO,qDAIEiI,GAAgB,SAACpE,GAAD,OAAa,SAACC,GAEzCC,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,oBAA6FjC,EAAQgD,YAAajB,SAClH7B,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,MAA5E,aAA6F6B,KAAK,QAAS,SAAAO,GAEzF,OADFA,EAAgB/C,OAE5BpB,KAASK,WAAWC,IAApB,gBAAiCR,EAAQqC,QAAzC,4BAAoErC,EAAQiC,QAASF,WAGzFvG,GAAa,CACX1E,KAAM,UACNqF,MAAO,wDAIEmI,GAAsB,SAACjC,GAAD,OAAa,SAACpC,GAC/CC,KAASK,WAAWC,IAApB,gBAAiC6B,EAAjC,sBAA6D/F,GAAG,QAAS,SAAA8E,GACvE,IAAImD,EAAUnD,EAASE,MACvB,GAAIiD,EAAS,CACX,IAAIC,EAAgBzN,OAAOwC,KAAKgL,GAAS/K,IAAI,SAAAC,GAAI,OAAI8K,EAAQ9K,KAC7DwG,EAASL,GAAoB4E,SAKtBC,GAAoB,SAACpC,GAAD,OAAa,SAACpC,GAC7CC,KAASK,WAAWC,IAApB,gBAAiC6B,EAAjC,oBAA2D/F,GAAG,QAAS,SAAA8E,GACrE,IAAImD,EAAUnD,EAASE,MACnBoD,EAAc3N,OAAOwC,KAAKgL,GAAS/K,IAAI,SAAAC,GAAI,OAAI8K,EAAQ9K,KAC3DwG,EAASJ,GAAkB6E,QAIlBC,GAAuB,SAACtC,GAAD,OAAa,SAACpC,GAChD,OAAO,IAAIhH,QAAQ,SAACC,EAASC,GAC3B+G,KAASK,WAAWC,IAApB,gBAAiC6B,EAAjC,qBAA4D/F,GAAG,QAA/D,sCAAwE,WAAM8E,GAAN,iBAAAwD,EAAA,4DAClEL,EAAUnD,EAASE,MAD+C,SAGlDrI,QAAQ4L,IAC1B9N,OAAOwC,KAAKgL,GAAS/K,IAAI,SAAAoJ,GACvB,IAAIkC,EAAcP,EAAQ3B,GAAImC,SAC1BC,EAAkBT,EAAQ3B,GAAImC,SAASpB,kBAE3C,OAAOsB,GAAKxQ,IAAL,aAAeqQ,EAAY1N,GAA3B,mBAAwC4N,EAAgBpB,eAAxD,oBAAkFoB,EAAgB7B,eAAe,GAAK7O,EAAOL,kBACjIkL,KAAK,SAAA+F,GACJ,OAAOD,GAAKxQ,IAAL,aAAeqQ,EAAY1N,IAAM9C,EAAOL,kBAC9CkL,KAAK,SAAAgG,GAUJ,OATAA,EAASC,QAAQ5L,IAAI,SAAA6L,GACfA,EAAO/B,gBAAkB0B,EAAgBpB,iBAC3CsB,EAAQlC,UAAYqC,EAAOjO,GAC3B8N,EAAQ3B,YAAc8B,EAAOtL,QAGjCmL,EAAQxB,QAAUyB,EAASpL,KAC3BmL,EAAQzB,eAAiB0B,EAAS3B,YAClC0B,EAAQjD,MAAQkD,EAAS/N,GAClB8N,MAGVvE,MAAM,SAAAC,GACL,GAAsB,wCAAlBA,EAAMC,QACR,OAAOoE,GAAKxQ,IAAL,aAAeqQ,EAAY1N,GAA3B,mBAAwC4N,EAAgBpB,eAAe,EAAvE,YAAoF,GAAKtP,EAAOL,kBACtGkL,KAAK,SAAAmG,GACJ,OAAOL,GAAKxQ,IAAL,aAAeqQ,EAAY1N,IAAM9C,EAAOL,kBAC9CkL,KAAK,SAAAgG,GAUJ,OATAA,EAASC,QAAQ5L,IAAI,SAAA6L,GACfA,EAAO/B,gBAAkB0B,EAAgBpB,iBAC3C0B,EAAQtC,UAAYqC,EAAOjO,GAC3BkO,EAAQ/B,YAAc8B,EAAOtL,QAGjCuL,EAAQ5B,QAAUyB,EAASpL,KAC3BuL,EAAQ7B,eAAiB0B,EAAS3B,YAClC8B,EAAQrD,MAAQkD,EAAS/N,GAClBkO,MAGV3E,MAAM,SAAAC,GACL,GAAsB,wCAAlBA,EAAMC,QACR,MAAO,CAACD,OAAO,GAEfpF,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,iCAKbX,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,oCAzDmD,OAGlEoJ,EAHkE,OA+DtErM,EAAQqM,GACRtF,EAASH,GAAqByF,IAhEwC,yCAAxE,2D,oBCpUG,SAASC,GAAuB9Q,GACrC,MAAO,CAACoC,KAAMhB,EAA4BpB,QAGrC,SAAS+Q,GAAoB/Q,GAClC,MAAO,CAACoC,KAAMf,EAAyBrB,QAGlC,SAASgR,GAAmBhR,GACjC,MAAO,CAACoC,KAAMd,EAAuBtB,QAGhC,SAASiR,KACd,MAAO,CAAC7O,KAAMb,GAGT,SAAS2P,KACd,MAAO,CAAC9O,KAAMZ,GAGT,IAAM2P,GAAkB,SAACpE,GAAD,OAAc,SAACxB,GAE5C,OAAOgF,GAAKxQ,IAAL,gBAAkBgN,GAAYnN,EAAOL,kBACzCkL,KAAK,SAAAmB,GACJJ,KAASK,WAAWC,IAApB,gBAAiCpM,IAAMK,IAAI,iBAA3C,uBAA0EgN,IAAYnF,GAAG,QAAS,SAAAwJ,GAChG5F,KAASK,WAAWC,IAApB,gBAAiCpM,IAAMK,IAAI,iBAA3C,0BAA6EgN,IAAYnF,GAAG,QAAS,SAAAyJ,GACnG7F,KAASK,WAAWC,IAApB,gBAAiCpM,IAAMK,IAAI,iBAA3C,2BAA8EgN,IAAYnF,GAAG,QAAS,SAAA0J,GACpG9F,KAASK,WAAWC,IAApB,gBAAiCpM,IAAMK,IAAI,iBAA3C,2BAA8EgN,IAAYnF,GAAG,QAAS,SAAA2J,GACpG,IAAIC,EAAO,GACPC,EAAWL,EAAaxE,MACxB8E,EAAcL,EAAgBzE,MAC9B+E,EAAeL,EAAiB1E,MAChCgF,EAAeL,EAAiB3E,MACnB,OAAb6E,GACFI,KAAEhN,KAAK4M,GAAU3M,IAAI,SAAAC,GACnB0M,EAAS1M,GAAMvC,IAAMuC,EACrByM,EAAKxF,KAAKyF,EAAS1M,MAIvB,IAAM4H,EAAW,CACf6E,KAAMA,EACNM,QAASJ,EACTK,SAAUJ,EACVK,SAAUJ,GAGNK,EAAY5P,OAAOC,OAAO,GAAI,CAACqK,YAAWf,GAChDL,EAASuF,GAAuBmB,cAMzChG,MAAM,SAAAC,GACLpF,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,+BAKFyK,GAAe,SAACnF,GAAD,OAAc,SAACxB,GAEzC,OAAOgF,GAAKxQ,IAAL,gBAAkBgN,EAAlB,YAAsCnN,EAAOL,kBACjDkL,KAAK,SAAAmB,GACJL,EAASwF,GAAoBnF,MAE9BK,MAAM,SAAAC,GACLpF,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,+BAKF0K,GAAe,SAACC,GAAD,OAAgB,SAAC7G,GAC3C,IAAMD,EAAU,CACd9L,QAASI,EAAOR,mBAChBK,SAAU,QACV4S,MAAOD,GAGT,OAAO7B,GAAKxQ,IAAL,eAAyBuL,GAC7Bb,KAAK,SAAAmB,GACJL,EAASyF,GAAmBpF,EAAOiF,YAEpC5E,MAAM,SAAAC,GACLpF,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,+BC9FR,SAAS6K,KACd,MAAO,CAAClQ,KAAMP,GAGT,IAAM0Q,GAA2B,SAAChF,EAAOqB,GAC9C,OAAO,IAAIrK,QAAQ,SAACC,EAASC,GAE3B8L,GAAKxQ,IAAL,aAAewN,EAAf,mBAA+BqB,GAAiBhP,EAAOL,kBACpDkL,KAAK,SAAAmB,GACJpH,EAAQoH,KAETK,MAAM,SAAAC,GACLzH,EAAOyH,QAKFsG,GAAqB,SAACjF,GAAD,OAAW,SAAChC,GAE5C,OAAOgF,GAAKxQ,IAAL,aAAewN,GAAS3N,EAAOL,kBACnCkL,KAAK,SAAAmB,GACJJ,KAASK,WAAWC,IAApB,gBAAiCpM,IAAMK,IAAI,iBAA3C,yBAA4EwN,IAAS3F,GAAG,QAAS,SAAAwJ,GAC/F5F,KAASK,WAAWC,IAApB,gBAAiCpM,IAAMK,IAAI,iBAA3C,4BAA+EwN,IAAS3F,GAAG,QAAS,SAAAyJ,GAClG7F,KAASK,WAAWC,IAApB,gBAAiCpM,IAAMK,IAAI,iBAA3C,6BAAgFwN,IAAS3F,GAAG,QAAS,SAAA0J,GACnGmB,GAAsBlF,EAAO7N,IAAMK,IAAI,iBAAkB6L,EAAO8G,oBAAoBjI,KAAK,SAAArC,GACvF,IAAIoJ,EAAO,GACPC,EAAWL,EAAaxE,MACxB8E,EAAcL,EAAgBzE,MAC9B+E,EAAeL,EAAiB1E,MACpB,MAAZ6E,GACFI,KAAEhN,KAAK4M,GAAU3M,IAAI,SAAAC,GACnB0M,EAAS1M,GAAMvC,IAAMuC,EACrByM,EAAKxF,KAAKyF,EAAS1M,MAIvBR,QAAQ4L,IAAIvE,EAAO8E,QAAQ5L,IAAI,SAAA6L,GAAM,OAAI4B,GAAyBhF,EAAOoD,EAAO/B,kBAC/EnE,KAAK,SAAAkI,GACJ/G,EAAO8E,QAAUiC,EAEjB,IAAMhG,EAAW,CACf6E,KAAMA,EACNM,QAASJ,GAAe,GACxBK,SAAUJ,EACViB,aAAcxK,GAGVyK,EAAexQ,OAAOC,OAAO,GAAI,CAACqK,YAAWf,GACnDL,EAAS,CAACnJ,KAAMX,EAA8BzB,KAAM6S,gBAO/D5G,MAAM,SAAAC,GACLpF,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,mCAKFqL,GAAkB,SAACvF,GAAD,OAAW,SAAChC,GAEzC,OAAOgF,GAAKxQ,IAAL,aAAewN,EAAf,YAAgC3N,EAAOL,kBAC3CkL,KAAK,SAAAmB,GACJL,EAAS,CAACnJ,KAAMV,EAA2B1B,KAAM4L,MAElDK,MAAM,SAAAC,GACLpF,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,mCAKFsL,GAAiB,SAACC,GAAD,OAAmB,SAACzH,GAChD,IAAMD,EAAU,CACd9L,QAASI,EAAOR,mBAChBK,SAAU,QACV4S,MAAOW,GAGT,OAAOzC,GAAKxQ,IAAL,YAAsBuL,GAC1Bb,KAAK,SAAAmB,GACJL,EAAS,CAACnJ,KAAMT,EAAyB3B,KAAM4L,EAAOiF,YAEvD5E,MAAM,SAAAC,GACLpF,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,mCAKFgL,GAAwB,SAAClF,EAAOI,GAAwC,IAA/B+E,EAA8B,uDAAT,KACzE,OAAO,IAAInO,QAAQ,SAACC,EAASC,GAC3B,IAAIwO,EAAO,EAEX,GAA2B,OAAvBP,EAA6B,CAC/B,IAAMpH,EAAU,CACd9L,QAASI,EAAOR,mBAChBK,SAAU,SAGZ,OAAO8Q,GAAKxQ,IAAL,aAAewN,GAASjC,GAC5Bb,KAAK,SAAAmB,GACJ,IAAIsH,EAAmBtH,EAAO8G,mBAE9BlH,KAASK,WAAWC,IAApB,gBAAiCpM,IAAMK,IAAI,iBAA3C,4BAA+EwN,IAAS6B,KAAK,QAAS,SAAA1C,GACpG,IAAIwB,EAAKxB,EAASE,MAClBvK,OAAOwC,KAAKqJ,EAAG2B,SAAS/K,IAAI,SAAAC,GACa,IAAnCmJ,EAAG2B,QAAQ9K,GAAM6J,gBACnBqE,GAAQ5Q,OAAOwC,KAAKqJ,EAAG2B,SAAW3B,EAAG2B,QAAQ9K,IAASmJ,EAAG2B,QAAQ9K,GAAM8K,SAAS1C,UAIpF3I,GAASyO,EAAKC,EAAmB,KAAKC,QAAQ,QAGjDlH,MAAM,SAAAmH,GACL3O,EAAO2O,GACPtM,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,iCAIb+D,KAASK,WAAWC,IAApB,gBAAiCpM,IAAMK,IAAI,iBAA3C,4BAA+EwN,IAAS6B,KAAK,QAAS,SAAA1C,GACpG,IAAIwB,EAAKxB,EAASE,MACP,OAAPsB,GACF7L,OAAOwC,KAAKqJ,EAAG2B,SAAS/K,IAAI,SAAAC,GACa,IAAnCmJ,EAAG2B,QAAQ9K,GAAM6J,eACfV,EAAG2B,SAAW3B,EAAG2B,QAAQ9K,IAASmJ,EAAG2B,QAAQ9K,GAAM8K,UACrDoD,GAAQ5Q,OAAOwC,KAAKqJ,EAAG2B,QAAQ9K,GAAM8K,SAAS1C,UAKpD3I,EAAQgE,KAAKyE,MAAMgG,EAAKP,EAAqB,OAE7ClO,EAAQ,QCtJX,SAAS6O,GAAmBrT,GACjC,MAAO,CAACoC,KAAMN,EAA0B9B,QAGnC,SAASsT,KACd,MAAO,CAAClR,KAAML,GAGT,IAAMwR,GAAc,SAAC9L,GAAD,OAAW,SAAC8D,GACrC,IAAMD,EAAU,CACd9L,QAASI,EAAOR,mBAChBK,SAAU,QACV4S,MAAO5K,GAGT,OAAO8I,GAAKxQ,IAAL,eAAyBuL,GAC7Bb,KAAK,SAAAmB,GACJA,EAASA,EAAOiF,QAAQ2C,OAAO,SAACzO,GAAD,MAA8B,UAApBA,EAAK0O,YAA8C,OAApB1O,EAAK0O,aAC7ElI,EAAS8H,GAAmBzH,MAE7BK,MAAM,SAAAC,GACLpF,GAAa,CACX1E,KAAM,QACNoB,KAAM,qBACNiE,MAAO,yBC5BFiM,GAAc7T,EACd8T,GAAgBlT,EAChBmT,GAAkBvT,EAClBwT,GAAajT,E,kBCJpBkT,G,iLAIJ,OACI,6BACC,yBAAKpQ,UAAU,gBAAgBhB,GAAG,aAAaqR,cAAY,YACxD,yBAAKC,IAAK9U,iCAAgD+U,IAAI,iBAEjE,yBAAKvQ,UAAU,qCACd,yBAAKA,UAAU,mBAAf,UAAyCJ,KAAKC,MAAM1D,MAAQyD,KAAKC,MAAM1D,KAAKG,KAAOsD,KAAKC,MAAM1D,KAAKG,KAAK2C,MAAQ,MAEnH,4BACCP,KAAK,SACLsB,UAAU,4BACVO,QAASX,KAAKC,MAAM+I,QACpB,8BACC,uBAAG5I,UAAS,yBACL,IANT,kB,GAZgBS,IAAMC,WA2BrB8P,GAAqB,CAC1B5H,OAAQoH,GAAYpH,QASN6H,mBANf,SAAyBlS,GACvB,MAAO,CACLpC,KAAMoC,EAAMpC,OAIwBqU,GAAzBC,CAA6CL,IClCtDM,G,2MAELnS,MAAQ,CACP3B,WAAY,I,EAGb+T,OAAS,SAAChP,EAAML,GACXA,EAAMmI,QAAU,GACnB,EAAK5J,MAAMgQ,YAAYvO,I,EAIzBsP,cAAgB,SAACC,GACS,UAArBA,EAAMd,WACT,EAAKlQ,MAAMiR,cAAcD,EAAM7R,IACA,OAArB6R,EAAMd,YAChB,EAAKlQ,MAAMkR,iBAAiBF,EAAM7R,IAEnC,EAAKa,MAAM+P,oB,wEAGF,IAAD,OAEDhT,EAAcgD,KAAKC,MAAM3C,IAAzBN,WAEP,OACI,yBAAKoD,UAAU,0BACjB,kBAAC,GAAD,CACCiC,cAAerC,KAAK+Q,OACpBK,YAAY,QACZrP,KAAK,YACL7B,KAAK,SACLpB,KAAK,SAGJ9B,EAAW6M,OAAS,GACrB,wBAAIzJ,UAAU,sBACXpD,EAAWwE,IAAI,SAAAC,GAAI,OACnB,yBACCW,IAAKX,EAAKrC,GACVuB,QAAS,kBAAM,EAAKqQ,cAAcvP,IAClCrB,UAAU,2BACV,yBAAKA,UAAU,OACd,yBAAKA,UAAU,YACd,yBAAKsQ,IAAG,yDAAoDjP,EAAK+J,aAAemF,IAAI,GAAGtL,OAAO,MAAMX,MAAM,QAE3G,yBAAKtE,UAAU,aACd,4BAAI,gCAASqB,EAAK4P,eAAiB5P,EAAK4P,eAAiB5P,EAAK6P,gBAC9D,uBAAGlR,UAAS,uCAAsD,UAApBqB,EAAK0O,WAAL,8BAA8D1O,EAAK0O,uB,GAhDpGtP,IAAMC,WA6DxB8P,GAAqB,CAC1BX,YAAaM,GAAWN,YACxBD,iBAAkBO,GAAWP,iBAC7BkB,cAAe,SAAC9R,GAAD,OAAQ,SAAA6I,GAAQ,OAAIA,EAASS,gBAAK,UAAD,OAAWtJ,OAC3D+R,iBAAkB,SAAC/R,GAAD,OAAQ,SAAA6I,GAAQ,OAAIA,EAASS,gBAAK,OAAD,OAAQtJ,QAU7CyR,mBAPf,SAAyBlS,GACvB,MAAO,CACPrB,IAAKqB,EAAMrB,IACXf,KAAMoC,EAAMpC,OAI0BqU,GAAzBC,CAA6CC,IC9EvCS,G,iLAInB,OACC,yBAAKnR,UAAU,sDACb,uBAAGA,UAAU,eAAeoR,KAAK,SAAjC,UACA,4BAAQpR,UAAU,iBAAiBtB,KAAK,SAAS2R,cAAY,WAAWgB,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpL,0BAAMxR,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BhB,GAAG,0BAC3C,wBAAIgB,UAAU,sBACf,wBAAIA,UAAU,YACT,uBAAGA,UAAU,qBAAb,aAEL,wBAAIA,UAAU,YACT,uBAAGA,UAAU,qBAAb,cAEF,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,qBAAb,WAEL,wBAAIA,UAAU,YACT,uBAAGA,UAAU,qBAAb,cAEL,wBAAIA,UAAU,YACT,uBAAGA,UAAU,WAAWoR,KAAK,eAA7B,oBAIN,kBAAC,GAAD,MACA,kBAAC,GAAD,Y,GA/B+B3Q,IAAMC,WCC1C1E,IAAMC,OAASC,EAAOP,aAEf,IAAM8V,GAAe,SAAC,GAAD,IAAc/Q,EAAd,EAAGgR,UAAyBC,EAA5B,qCAC3B,kBAAC,KAAD,iBACKA,EADL,CAGCC,OAAU,SAAA/R,GAAK,OACd7D,IAAMK,IAAI,iBACT,kBAAC,IAAMwV,SAAP,KACC,kBAAC,GAAD,MACA,kBAACnR,EAAcb,IAGhB,kBAAC,KAAD,CAAUiS,GAAI,CACbC,SAAU,SACVxT,MAAO,CAACyT,KAAMnS,EAAMzE,kBChBzBY,IAAMC,OAASC,EAAOP,aAEf,IAAMsW,GAAc,SAAC,GAAD,IAAcvR,EAAd,EAAGgR,UAAyBC,EAA5B,qCAC1B,kBAAC,KAAD,iBACKA,EADL,CAGCC,OAAU,SAAA/R,GAAK,OACb7D,IAAMK,IAAI,iBAEV,kBAAC,KAAD,CAAUyV,GAAI,CACdC,SAAU,QACVxT,MAAO,CAACyT,KAAMnS,EAAMzE,aAHpB,kBAACsF,EAAcb,QCNbqS,G,2MAELC,aAAe,SAAC3R,GACfA,EAAM4R,iBACN,EAAKC,KAAKzR,eACTmG,KAAK,SAAAa,GACH,EAAK/H,MAAM6I,MAAMd,M,wEAIX,IAAD,OACR,OACC,yBAAK5H,UAAU,aACd,yBAAKA,UAAU,aACd,yBACCsQ,IAAK9U,0CACA+U,IAAI,iBAEX,yBAAKvQ,UAAU,6CACd,yBAAKA,UAAU,8BACd,8CAEA,yBAAKA,UAAU,4BACf,kBAAC,GAAD,CACC+B,SAAUnC,KAAKuS,aACf/J,IAAK,SAAAkK,GAAM,EAAKD,KAAOC,IACvB,kBAAC,GAAD,CACCxQ,UAAQ,EACRI,MAAM,QACNP,KAAK,QACL7B,KAAK,OACLpB,KAAK,SACN,kBAAC,GAAD,CACCoD,UAAQ,EACRI,MAAM,WACNP,KAAK,WACL7B,KAAK,OACLpB,KAAK,aAEN,yBAAKsB,UAAU,cACd,yBAAKA,UAAU,sBACd,kBAAC,EAAD,CACCD,KAAK,UACLrB,KAAK,WACN,yBAAKsB,UAAU,OACd,0BACCA,UAAU,kBACVO,QAASX,KAAKC,MAAM0S,cAFrB,YAKA,0BAAMvS,UAAU,cACP,8C,GAnDKS,IAAMC,WAgExB8P,GAAqB,CACzB9H,MAAOsH,GAAYtH,MACpB6J,aAAc,kBAAM,SAAA1K,GAAQ,OAAIA,EAASS,gBAAK,iBAGhCmI,eAAQ,KAAMD,GAAdC,CAAkCyB,ICpE3CM,G,2MAELL,aAAe,SAAC3R,GACfA,EAAM4R,iBACN,EAAKC,KAAKzR,eACTmG,KAAK,SAAA9F,GACL,IAAM2G,EAAUuG,KAAEsE,KAAKxR,EAAQ,CAAC,QAAS,WAAY,SACnD,EAAKpB,MAAM8H,SAASC,KAEtBW,MAAM,SAAAC,GACNkK,QAAQC,IAAInK,M,wEAIJ,IAAD,OACR,OACC,yBAAKxI,UAAU,aACd,yBAAKA,UAAU,aACd,yBACCsQ,IAAK9U,0CACA+U,IAAI,iBAEX,yBAAKvQ,UAAU,6CACd,yBAAKA,UAAU,8BACd,gDAEA,yBAAKA,UAAU,4BACf,kBAAC,GAAD,CACC+B,SAAUnC,KAAKuS,aACf/J,IAAK,SAAAkK,GAAM,EAAKD,KAAOC,IACvB,kBAAC,GAAD,CACCxQ,UAAQ,EACRI,MAAM,OACNP,KAAK,OACL7B,KAAK,OACLpB,KAAK,SACN,kBAAC,GAAD,CACCoD,UAAQ,EACRI,MAAM,QACNP,KAAK,QACL7B,KAAK,WACLpB,KAAK,UACN,kBAAC,GAAD,CACCoD,UAAQ,EACRI,MAAM,WACNP,KAAK,WACL7B,KAAK,OACLpB,KAAK,aACN,kBAAC,GAAD,CACCoD,UAAQ,EACRI,MAAM,mBACNP,KAAK,kBACL7B,KAAK,OACLpB,KAAK,aAEN,yBAAKsB,UAAU,cACd,yBAAKA,UAAU,sBACd,kBAAC,EAAD,CACCD,KAAK,WACLrB,KAAK,WACN,yBAAKsB,UAAU,OACd,0BACCA,UAAU,kBACVO,QAASX,KAAKC,MAAM+S,WAFrB,UAKA,0BAAM5S,UAAU,cACP,+C,GAnEQS,IAAMC,WAgF3B8P,GAAqB,CACzB7I,SAAUqI,GAAYrI,SACvBiL,UAAW,kBAAM,SAAA/K,GAAQ,OAAIA,EAASS,gBAAK,cAG7BmI,eAAQ,KAAMD,GAAdC,CAAkC+B,ICxF3CK,G,iLAGF,OACD,yBAAK7S,UAAU,aAUV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,sBAAhB,cAEA,2BAAOA,UAAU,kCACf,+BACE,4BACE,wBAAI8S,MAAM,MAAMxO,MAAM,MAAtB,KACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,WACA,wBAAIwO,MAAM,OAAV,iBAGJ,+BAEE,4BACE,wBAAIA,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,sBACjC,wBAAIA,UAAU,oBAAd,QACA,wBAAIA,UAAU,oBAAd,SACA,4FAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,SACjC,wBAAIA,UAAU,oBAAd,UACA,6BACA,mFAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,kBACjC,wBAAIA,UAAU,oBAAd,YACA,wBAAIA,UAAU,oBAAd,YACA,mEAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,UACjC,wBAAIA,UAAU,oBAAd,uBACA,wBAAIA,UAAU,oBAAd,YACA,wGAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,SACjC,wBAAIA,UAAU,oBAAd,QACA,wBAAIA,UAAU,oBAAd,QACA,+DAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,SACjC,wBAAIA,UAAU,oBAAd,UACA,6BACA,mDAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,SACjC,wBAAIA,UAAU,oBAAd,uBACA,wBAAIA,UAAU,oBAAd,YACA,6HAOV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,sBAAhB,aAEA,2BAAOA,UAAU,kCACf,+BACE,4BACE,wBAAI8S,MAAM,MAAMxO,MAAM,MAAtB,KACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,WACA,wBAAIwO,MAAM,OAAV,iBAGJ,+BACE,4BACE,wBAAIA,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,UACjC,wBAAIA,UAAU,oBAAd,UACA,6BACA,sDAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,SACjC,wBAAIA,UAAU,oBAAd,UACA,6BACA,uDAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,SACjC,wBAAIA,UAAU,oBAAd,UACA,wBAAIA,UAAU,qBACd,gFAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,UACjC,wBAAIA,UAAU,oBAAd,UACA,wBAAIA,UAAU,qBACd,gJAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,YACjC,wBAAIA,UAAU,oBAAd,QACA,wBAAIA,UAAU,oBAAd,QACA,mGAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,SACjC,wBAAIA,UAAU,oBAAd,UACA,wBAAIA,UAAU,oBAAd,UACA,kDAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,kBACjC,wBAAIA,UAAU,oBAAd,YACA,wBAAIA,UAAU,oBAAd,uBACA,uEAOV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,sBAAhB,gBAEA,2BAAOA,UAAU,kCACf,+BACE,4BACE,wBAAI8S,MAAM,MAAMxO,MAAM,MAAtB,KACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,WACA,wBAAIwO,MAAM,OAAV,iBAGJ,+BAEE,4BACE,wBAAIA,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,SACjC,wBAAIA,UAAU,oBAAd,UACA,wBAAIA,UAAU,qBACd,mDAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,YACjC,wBAAIA,UAAU,oBAAd,QACA,wBAAIA,UAAU,oBAAd,SACA,wFAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,UACjC,wBAAIA,UAAU,oBAAd,yBACA,wBAAIA,UAAU,qBACd,iFAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,qBACjC,wBAAIA,UAAU,oBAAd,YACA,wBAAIA,UAAU,oBAAd,yBACA,0FAQV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,sBAAhB,oBAEA,2BAAOA,UAAU,kCACf,+BACE,4BACE,wBAAI8S,MAAM,MAAMxO,MAAM,MAAtB,KACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,WACA,wBAAIwO,MAAM,OAAV,iBAGJ,+BAEE,4BACE,wBAAIA,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,UACjC,wBAAIA,UAAU,oBAAd,WACA,wBAAIA,UAAU,oBAAd,KACA,mEAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,UACjC,wBAAIA,UAAU,oBAAd,2DACA,wBAAIA,UAAU,oBAAd,WACA,+DAQV,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,sBAAhB,uBAEA,2BAAOA,UAAU,kCACf,+BACE,4BACE,wBAAI8S,MAAM,MAAMxO,MAAM,MAAtB,KACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,QACA,wBAAIwO,MAAM,MAAMxO,MAAM,OAAtB,WACA,wBAAIwO,MAAM,OAAV,iBAGJ,+BAEE,4BACE,wBAAIA,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,eACjC,wBAAIA,UAAU,oBAAd,WACA,wBAAIA,UAAU,oBAAd,OACA,mEAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,UACjC,wBAAIA,UAAU,oBAAd,2DACA,wBAAIA,UAAU,oBAAd,WACA,2DAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,SACjC,wBAAIA,UAAU,oBAAd,WACA,wBAAIA,UAAU,oBAAd,MACA,oDAGF,4BACE,wBAAI8S,MAAM,OAAV,KACA,wBAAI9S,UAAU,oBAAmB,0BAAMA,UAAU,2BAAhB,gBACjC,wBAAIA,UAAU,oBAAd,WACA,wBAAIA,UAAU,oBAAd,KACA,sE,GA5SWS,IAAMC,WAyT7B8P,GAAqB,CAC1B+B,aAAc,kBAAM,SAAA1K,GAAQ,OAAIA,EAASS,gBAAK,iBAGhCmI,eAAQ,KAAMD,GAAdC,CAAkCoC,IC3T3CE,G,2MAEJxU,MAAQ,CACNyU,WAAY,GACZC,eAAe,G,EAYjBC,mBAAqB,SAAC1I,EAAIrE,GACxB,IAAMyB,EAAU,CACdqC,QAAS,EAAKpK,MAAM1D,KAAKG,KAAKwC,IAC9BuM,eAAgBb,EAAGa,eACnBC,QAASd,EAAGc,QACZzB,MAAOW,EAAGX,MACVe,UAAWJ,EAAGI,UACdM,cAAeV,EAAGU,cAClBC,YAAaX,EAAGW,YAChBN,WAAYL,EAAGxL,GACfwM,eAAgBhB,EAAGU,cACnBH,eAAgBP,EAAGO,eACnBD,aAAcN,EAAG7I,MAEdsR,EAAiB,EAAK1U,MAAtB0U,cACLA,EAAc9M,IAAS,EACvB,EAAK1E,SAAS,CAACwR,iBAAgB,WAC7BrP,WAAW,WACT,EAAK/D,MAAM8K,aAAa/C,GACxBqL,EAAc9M,IAAS,EACvB,EAAK1E,SAAS,CAACwR,mBACd,Q,kFA9BYE,GAAY,IAAD,OACxBvT,KAAKC,MAAM1D,KAAKG,MAAQsD,KAAKC,MAAM1D,KAAKG,KAAKwC,MAAQqU,EAAUhX,KAAKG,KAAKwC,KAC3Ec,KAAKC,MAAM0M,qBAAqB3M,KAAKC,MAAM1D,KAAKG,KAAKwC,KAAKiI,KAAK,WAC7D,IAAMkM,EAAgB,EAAKpT,MAAM1D,KAAKO,kBAAkB0E,IAAI,SAAAC,GAAI,OAAI,IACpE,EAAKI,SAAS,CAACwR,sB,+BA8BX,IAAD,OAEP,OACE,yBAAKjT,UAAU,6BACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,4CAAhB,sBAIA,yBAAKA,UAAU,4BACZJ,KAAKC,MAAM1D,MAAQyD,KAAKC,MAAM1D,KAAKO,kBAAkB0E,IAAI,SAACoJ,EAAIrE,GAAL,OACxD,yBAAKnG,UAAS,mBAAc,EAAKzB,MAAM0U,cAAc9M,GAAS,UAAY,UAAYnE,IAAKmE,GACzF,yBAAKnG,UAAU,kCACb,yBAAKsQ,IAAG,yDAAoD9F,EAAG4I,YAAc7C,IAAI,SAASvQ,UAAU,+BACpG,yBAAKA,UAAU,gCACf,kBAAC,EAAD,CACEA,UAAU,uBACVC,MAAO,CAACoT,SAAU,WAAY1P,IAAK,MAAO2P,KAAM,OAChDhT,cAAe,kBAAM,EAAK4S,mBAAmB1I,EAAIrE,IACjDpG,KAAK,YAGT,0BAAMC,UAAU,kBAAkBwK,EAAGc,SACrC,0BAAMtL,UAAU,uBAAhB,YAA4CwK,EAAGU,cAAcqI,WAAWC,SAAS,EAAG,KAApF,aAA6FhJ,EAAGO,eAAewI,WAAWC,SAAS,EAAG,KAAtI,aAA+IhJ,EAAG7I,UAGtJ,yBAAK3B,UAAU,8BAA8BC,MAAO,CAACwT,cAAe,SAAUC,UAAW,WACvF,kBAAC,EAAD,CACEvT,KAAMP,KAAKC,MAAM1D,KAAKK,iBAAiBiN,OAAS,EAIhD1J,KAAK,WACLC,UAAU,iC,GA1EMS,IAAMC,WAmFhC8P,GAAqB,CACzBjE,qBAAsByD,GAAYzD,qBAClC5B,aAAcqF,GAAYrF,cAeb8F,mBAPf,SAAyBlS,GACvB,MAAO,CACLpC,KAAMoC,EAAMpC,KACZQ,SAAU4B,EAAM5B,WAIoB6T,GAAzBC,CAA6CsC,I,oBCnGtDY,G,2MAEJpV,MAAQ,CACNyU,WAAY,GACZC,eAAe,G,EAYjBC,mBAAqB,SAAC1I,EAAIrE,GACxB,IAAMyB,EAAU,CACdqC,QAAS,EAAKpK,MAAM1D,KAAKG,KAAKwC,IAC9BuM,eAAgBb,EAAGa,eACnBC,QAASd,EAAGc,QACZzB,MAAOW,EAAGX,MACVe,UAAWJ,EAAGI,UACdM,cAAeV,EAAGU,cAClBC,YAAaX,EAAGW,YAChBN,WAAYL,EAAGxL,GACfwM,eAAgBhB,EAAGU,cACnBH,eAAgBP,EAAGO,eACnBD,aAAcN,EAAG7I,MAEdsR,EAAiB,EAAK1U,MAAtB0U,cACLA,EAAc9M,IAAS,EACvB,EAAK1E,SAAS,CAACwR,iBAAgB,WAC7BrP,WAAW,WACT,EAAK/D,MAAM8K,aAAa/C,GACxBqL,EAAc9M,IAAS,EACvB,EAAK1E,SAAS,CAACwR,mBACd,Q,kFA9BYE,GAAY,IAAD,OACxBvT,KAAKC,MAAM1D,KAAKG,MAAQsD,KAAKC,MAAM1D,KAAKG,KAAKwC,MAAQqU,EAAUhX,KAAKG,KAAKwC,KAC3Ec,KAAKC,MAAM0M,qBAAqB3M,KAAKC,MAAM1D,KAAKG,KAAKwC,KAAKiI,KAAK,WAC7D,IAAMkM,EAAgB,EAAKpT,MAAM1D,KAAKO,kBAAkB0E,IAAI,SAAAC,GAAI,OAAI,IACpE,EAAKI,SAAS,CAACwR,sB,+BA8BX,IAAD,OAEP,OACE,yBAAKjT,UAAU,6BACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,4CAAhB,sBAIA,yBAAKA,UAAU,4BACZJ,KAAKC,MAAM1D,MAAQyD,KAAKC,MAAM1D,KAAKO,kBAAkB0E,IAAI,SAACoJ,EAAIrE,GAAL,OACxD,yBAAKnG,UAAS,mBAAc,EAAKzB,MAAM0U,cAAc9M,GAAS,UAAY,UAAYnE,IAAKmE,GACzF,yBAAKnG,UAAU,kCACb,yBAAKsQ,IAAG,yDAAoD9F,EAAG4I,YAAc7C,IAAI,SAASvQ,UAAU,+BACpG,yBAAKA,UAAU,gCACf,kBAAC,EAAD,CACEA,UAAU,uBACVC,MAAO,CAACoT,SAAU,WAAY1P,IAAK,MAAO2P,KAAM,OAChDhT,cAAe,kBAAM,EAAK4S,mBAAmB1I,EAAIrE,IACjDpG,KAAK,YAGT,0BAAMC,UAAU,kBAAkBwK,EAAGc,SACrC,0BAAMtL,UAAU,uBAAhB,YAA4CwK,EAAGU,cAAcqI,WAAWC,SAAS,EAAG,KAApF,aAA6FhJ,EAAGO,eAAewI,WAAWC,SAAS,EAAG,KAAtI,aAA+IhJ,EAAG7I,iB,GAhEtIlB,IAAMC,WA4E5B8P,GAAqB,CACzBjE,qBAAsByD,GAAYzD,qBAClC5B,aAAcqF,GAAYrF,cAeb8F,mBAPf,SAAyBlS,GACvB,MAAO,CACLpC,KAAMoC,EAAMpC,KACZQ,SAAU4B,EAAM5B,WAIoB6T,GAAzBC,CAA6CkD,IC7FtDC,G,2MAEJrV,MAAQ,CACNyU,WAAY,I,EAUda,iBAAmB,SAAC7U,GAAQ,IACrBgU,EAAc,EAAKzU,MAAnByU,WACLA,EAAWhU,IAAM,EACjB,EAAKyC,SAAS,CAACuR,gB,EAGjBc,iBAAmB,SAAC9U,GAAQ,IACrBgU,EAAc,EAAKzU,MAAnByU,kBACEA,EAAWhU,GAClB,EAAKyC,SAAS,CAACuR,gB,kFAhBEG,GACbvT,KAAKC,MAAM1D,KAAKG,MAAQsD,KAAKC,MAAM1D,KAAKG,KAAKwC,MAAQqU,EAAUhX,KAAKG,KAAKwC,MAC3Ec,KAAKC,MAAMqM,oBAAoBtM,KAAKC,MAAM1D,KAAKG,KAAKwC,KACpDc,KAAKC,MAAMwM,kBAAkBzM,KAAKC,MAAM1D,KAAKG,KAAKwC,Q,+BAgB5C,IAAD,OACP,OACE,yBAAKkB,UAAU,6BACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,4CAAhB,YAGA,kBAAC,GAAD,CAAMiG,iBAAkB,GACtB,kBAAC,GAAD,CAAK/D,MAAM,aACRtC,KAAKC,MAAM1D,KAAKK,iBAAiBuX,MAAM,EAAG,GAAG3S,IAAI,SAAAC,GAAI,OACpD,yBACEW,IAAKX,EAAKrC,GACVgB,UAAU,uBACVgU,aAAc,kBAAM,EAAKH,iBAAiBxS,EAAKrC,KAC/CiV,aAAc,kBAAM,EAAKH,iBAAiBzS,EAAKrC,MAC/C,yBAAKgB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKsQ,IAAG,yDAAoDjP,EAAK+J,aAAemF,IAAI,GAAGtL,OAAO,MAAMX,MAAM,QAE5G,yBAAKtE,UAAU,YACb,4BAAI,gCAASqB,EAAK0C,QAClB,uBAAG/D,UAAU,eAAb,YAAqCkU,KAAO7S,EAAK8S,MAAMC,OAAO,sBAEhE,yBAAKpU,UAAU,+BACb,kBAAC,EAAD,CACEG,UAAyCC,IAAnC,EAAK7B,MAAMyU,WAAW3R,EAAKrC,KAAoB,EAAKT,MAAMyU,WAAW3R,EAAKrC,IAChFsB,cAAe,kBAAM,EAAKT,MAAM6K,2BAA2BrJ,EAAKrC,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,MACzFsJ,IAAG,iBAAY/G,EAAKrC,IACpBgB,UAAU,sBACVF,KAAK,eAKf,yBAAKE,UAAU,0CAA0CC,MAAO,CAACwT,cAAe,WAC9E,kBAAC,EAAD,CACEtT,KAAMP,KAAKC,MAAM1D,KAAKK,iBAAiBiN,OAAS,EAIhD1J,KAAK,WACLC,UAAU,2BAGhB,kBAAC,GAAD,CAAKkC,MAAM,UACRtC,KAAKC,MAAM1D,KAAKM,eAAe2E,IAAI,SAAAC,GAAI,OACtC,yBACEW,IAAKX,EAAKrC,GACVgB,UAAU,uBACVgU,aAAc,kBAAM,EAAKH,iBAAiBxS,EAAKrC,KAC/CiV,aAAc,kBAAM,EAAKH,iBAAiBzS,EAAKrC,MAC/C,yBAAKgB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKsQ,IAAG,yDAAoDjP,EAAK+J,aAAemF,IAAI,GAAGtL,OAAO,MAAMX,MAAM,QAE5G,yBAAKtE,UAAU,YACb,4BAAI,gCAASqB,EAAK0C,QAClB,uBAAG/D,UAAU,eAAb,YAAqCkU,KAAO7S,EAAK8S,MAAMC,OAAO,sBAEhE,yBAAKpU,UAAU,+BACb,kBAAC,EAAD,CACEG,UAAyCC,IAAnC,EAAK7B,MAAMyU,WAAW3R,EAAKrC,KAAoB,EAAKT,MAAMyU,WAAW3R,EAAKrC,IAChFsB,cAAe,kBAAM,EAAKT,MAAMyK,wBAAwBjJ,EAAKrC,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,MACtFsJ,IAAG,iBAAY/G,EAAKrC,IACpBgB,UAAU,sBACVF,KAAK,uB,GA1FNW,IAAMC,WAuGvB8P,GAAqB,CACzBtE,oBAAqB8D,GAAY9D,oBACjCG,kBAAmB2D,GAAY3D,kBAC/B/B,wBAAyB0F,GAAY1F,wBACrCI,2BAA4BsF,GAAYtF,2BACxCoG,cAAe,SAAC9R,GAAD,OAAQ,SAAA6I,GAAQ,OAAIA,EAASS,gBAAK,UAAD,OAAWtJ,OAC5D+R,iBAAkB,SAAC/R,GAAD,OAAQ,SAAA6I,GAAQ,OAAIA,EAASS,gBAAK,OAAD,OAAQtJ,QAU7CyR,mBAPf,SAAyBlS,GACvB,MAAO,CACLpC,KAAMoC,EAAMpC,KACZQ,SAAU4B,EAAM5B,WAIoB6T,GAAzBC,CAA6CmD,ICtHtDS,G,iLAGF,OACD,yBAAKrU,UAAU,mCACX,yBAAKA,UAAU,OACjB,yBAAKA,UAAU,YACd,kBAAC,GAAD,OAED,yBAAKA,UAAU,YACd,yBAAKA,UAAU,OACd,kBAAC,GAAD,OAED,yBAAKA,UAAU,OACd,kBAAC,GAAD,SAOH,yBAAKA,UAAU,OACd,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,YACd,0BAAMA,UAAU,sBAAhB,6DAGA,yBAAKA,UAAU,QACd,yBAAKA,UAAU,aACd,yBAAKA,UAAU,OACd,yBAAKA,UAAU,YACd,4BAAI,mDAEL,yBAAKA,UAAU,YACd,4BAAI,yCACJ,kBAAC,GAAD,CAAasB,MAAO,QAItB,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,YACf,4BAAI,gDAEJ,yBAAKA,UAAU,YACd,4BAAI,yCACJ,kBAAC,GAAD,CAAasB,MAAO,QAItB,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,YACf,4BAAI,+CAEJ,yBAAKA,UAAU,YACd,4BAAI,wCACJ,kBAAC,GAAD,CAAayC,MAAM,MAAMnB,MAAO,OAIlC,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,YACd,4BAAI,wDAEL,yBAAKA,UAAU,YACd,4BAAI,wCACJ,kBAAC,GAAD,CAAasB,MAAO,OAItB,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,YACd,4BAAI,4DAEL,yBAAKA,UAAU,YACd,4BAAI,wCACJ,kBAAC,GAAD,CAAayC,MAAM,OAAOnB,MAAO,OAInC,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,YACd,4BAAI,uDAEL,yBAAKA,UAAU,YACd,4BAAI,uCACJ,kBAAC,GAAD,CAAayC,MAAM,MAAMnB,MAAO,MAIlC,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,YACd,4BAAI,4CAEL,yBAAKA,UAAU,YACd,4BAAI,wCACJ,kBAAC,GAAD,CAAayC,MAAM,OAAOnB,MAAO,OAInC,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,YACd,4BAAI,qDAEL,yBAAKA,UAAU,YACd,4BAAI,uCACJ,kBAAC,GAAD,CAAayC,MAAM,OAAOnB,MAAO,MAInC,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,YACd,4BAAI,+DAEL,yBAAKA,UAAU,YACd,4BAAI,uCACJ,kBAAC,GAAD,CAAayC,MAAM,OAAOnB,MAAO,MAInC,yBAAKtB,UAAU,OACd,yBAAKA,UAAU,YACd,4BAAI,oDAEL,yBAAKA,UAAU,YACd,4BAAI,uCACJ,kBAAC,GAAD,CAAayC,MAAM,OAAOnB,MAAO,e,GA9HpBb,IAAMC,WAsJvB8P,GAAqB,CAC1B+B,aAAc,kBAAM,SAAA1K,GAAQ,OAAIA,EAASS,gBAAK,iBAGhCmI,eAAQ,KAAMD,GAAdC,CAAkC4D,IC3J3CC,G,2MAkBJ1R,YAAc,SAACwG,GACb,EAAKvJ,MAAMsJ,cAAcC,EAAK,EAAKvJ,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAGjF0D,WAAa,SAAC4G,GACZ,EAAKvJ,MAAM6J,mBAAmBN,EAAK,EAAKvJ,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAGtFiL,WAAa,WACX,IAAMnC,EAAU,CACdoD,UAAWC,OACXG,YAAa,EAAKvL,MAAM9C,OAAOC,iBAAiBoO,YAChDrH,MAAO,EAAKlE,MAAM9C,OAAOC,iBAAiBiU,gBAE5C,EAAKpR,MAAMkK,WAAWnC,EAAS,EAAK/H,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAGlFoL,aAAe,WACb,EAAKrK,MAAMqK,aAAa,EAAKrK,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAG3EyV,cAAgB,WACd,IAAM3M,EAAU,CACdwD,YAAa,EAAKvL,MAAM9C,OAAOC,iBAAiBoO,YAChDrH,MAAO,EAAKlE,MAAM9C,OAAOC,iBAAiB+G,OAE5C,EAAKlE,MAAMsK,mBAAmBvC,EAAS,EAAK/H,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAG1F0V,mBAAqB,WACnB,EAAK3U,MAAMuK,wBAAwB,EAAKvK,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAGtF2V,cAAgB,WACd,IAAM7M,EAAU,CACdwD,YAAa,EAAKvL,MAAM9C,OAAOC,iBAAiBoO,YAChDpM,GAAI,EAAKa,MAAM9C,OAAOC,iBAAiBgC,GACvC+E,MAAO,EAAKlE,MAAM9C,OAAOC,iBAAiB+G,MAC1CoQ,KAAMlJ,QAER,EAAKpL,MAAMwK,mBAAmBzC,EAAS,EAAK/H,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAG1F4V,mBAAqB,WACnB,EAAK7U,MAAMyK,wBAAwB,EAAKzK,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,mFA3DpFc,KAAKC,MAAM4N,gBAAgB7N,KAAKC,MAAMvE,MAAM2L,OAAOjI,IACnDY,KAAKC,MAAM2O,aAAa5O,KAAKC,MAAMvE,MAAM2L,OAAOjI,M,yCAG/BmU,GACbA,EAAU7X,MAAM2L,OAAOjI,KAAOY,KAAKC,MAAMvE,MAAM2L,OAAOjI,KACxDY,KAAKC,MAAM4N,gBAAgB7N,KAAKC,MAAMvE,MAAM2L,OAAOjI,IACnDY,KAAKC,MAAM2O,aAAa5O,KAAKC,MAAMvE,MAAM2L,OAAOjI,O,6CAKlDY,KAAKC,MAAM2N,sB,+BAkDH,IAAD,SACqC5N,KAAKC,MAAM9C,OAA/CC,EADD,EACCA,iBAAkBC,EADnB,EACmBA,cAC1B,OAASD,GACP,yBAAKgD,UAAU,qBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eAAesQ,IAAG,yDAAoDtT,EAAiBoO,aAAemF,IAAI,OAG7H,yBAAKvQ,UAAU,YACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,eACZhD,EAAiBiU,eAClB,0BAAMjR,UAAU,cACbkU,KAAOlX,EAAiB2X,cAAcP,OAAO,WAIpD,yBAAKpU,UAAU,wBACZhD,EAAiBiM,SAASmF,SACzB,kBAAC,EAAD,CACEpO,UAAU,wBACVM,cAAeV,KAAKsK,aACpB7J,mBAAmB,EACnBP,KAAK,MACLC,KAAK,aACP,kBAAC,EAAD,CACEC,UAAU,uBACVM,cAAeV,KAAKmK,WACpB1J,mBAAmB,EACnBP,KAAK,YACLC,KAAK,gBAER/C,EAAiBiM,SAASqF,UACzB,kBAAC,EAAD,CACEtO,UAAU,wBACVM,cAAeV,KAAK4U,mBACpBnU,mBAAmB,EACnBP,KAAK,QACLC,KAAK,uBACP,kBAAC,EAAD,CACEC,UAAU,uBACVM,cAAeV,KAAK2U,cACpBlU,mBAAmB,EACnBP,KAAK,QACLC,KAAK,oBAER/C,EAAiBiM,SAASoF,UACzB,kBAAC,EAAD,CACErO,UAAU,wBACVM,cAAeV,KAAK8U,mBACpBrU,mBAAmB,EACnBP,KAAK,OACLC,KAAK,iBACP,kBAAC,EAAD,CACEC,UAAU,uBACVM,cAAeV,KAAK6U,cACpBpU,mBAAmB,EACnBP,KAAK,OACLC,KAAK,oBAEP/C,EAAiBiM,SAASmF,SAC1B,yBAAKpO,UAAU,sBACb,0BAAMA,UAAU,eAAhB,mCAA+DkU,KAAOlX,EAAiBiM,SAASmF,QAAQpD,WAAWoJ,OAAO,iBAIhI,yBAAKpU,UAAU,wBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,sBAAhB,QACEhD,EAAiBiM,UAAYjM,EAAiBiM,SAAS6E,MAAQ9Q,EAAiBiM,SAAS6E,KAAK1M,IAAI,SAAAgI,GAAG,OACrG,kBAAC,GAAD,CACErJ,KAAMqJ,EAAIrJ,KACViC,IAAKoH,EAAItK,IACTA,IAAKsK,EAAItK,IACTgE,UAAU,EACVN,WAAY,EAAKA,WACjBC,MAAO2G,EAAI3G,UAGf,kBAAC,GAAD,CACE/D,KAAK,MACLkE,YAAahD,KAAKgD,oBAQhC,yBAAK5C,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,4BAEZ/C,GAAiBA,EAAc2X,KAAKb,MAAM,EAAE,GAAG3S,IAAI,SAACyT,EAAO1O,GAAR,OAClD,yBAAKnE,IAAKmE,EAAOnG,UAAS,wDACtB,yBAAKA,UAAU,sBAAsBsQ,IAAG,uDAAkDuE,EAAMC,cAAgBvE,IAAI,KAEpH,0BAAMvQ,UAAU,sBAAsB6U,EAAMlT,MAC5C,0BAAM3B,UAAU,2BAA2B6U,EAAME,wB,GAzK1CtU,IAAMC,WAsL/B8P,GAAqB,CACzB/C,gBAAiBwC,GAAcxC,gBAC/Be,aAAcyB,GAAczB,aAC5BrF,cAAe6G,GAAY7G,cAC3BO,mBAAoBsG,GAAYtG,mBAChCK,WAAYiG,GAAYjG,WACxBG,aAAc8F,GAAY9F,aAC1BC,mBAAoB6F,GAAY7F,mBAChCC,wBAAyB4F,GAAY5F,wBACrCC,mBAAoB2F,GAAY3F,mBAChCC,wBAAyB0F,GAAY1F,wBACrCkD,kBAAmByC,GAAczC,mBAWpBiD,mBARf,SAAyBlS,GAEvB,OADAmU,QAAQC,IAAIpU,GACL,CACLpC,KAAMoC,EAAMpC,KACZY,OAAQwB,EAAMxB,SAIsByT,GAAzBC,CAA6C6D,IC3MtDU,G,2MAEJzW,MAAQ,CACNuH,SAAS,G,EAmBXlD,YAAc,SAACwG,GACb,EAAKvJ,MAAM+J,iBAAiBR,EAAK,EAAKvJ,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAGpF0D,WAAa,SAAC4G,GACZ,EAAKvJ,MAAMiK,sBAAsBV,EAAK,EAAKvJ,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAGzF2V,cAAgB,WACd,IAAM7M,EAAU,CACdwD,YAAa,EAAKvL,MAAMlD,SAASE,oBAAoBuO,YACrDpM,GAAI,EAAKa,MAAMlD,SAASE,oBAAoBmC,GAC5C+E,MAAO,EAAKlE,MAAMlD,SAASE,oBAAoB8E,KAC/CwS,KAAMlJ,QAER,EAAKpL,MAAM0K,sBAAsB3C,EAAS,EAAK/H,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAG7F4V,mBAAqB,WACnB,EAAK7U,MAAM6K,2BAA2B,EAAK7K,MAAMvE,MAAM2L,OAAOjI,GAAI,EAAKa,MAAM1D,KAAKG,KAAKwC,M,EAGzFmW,sBAAwB,SAACtT,EAAMuT,EAAQjI,EAAQlB,GAC7C,IAAIoJ,EAAOxT,EAAKyT,MAAM,KAChBxN,EAAU,CACdyD,eAAgB,EAAKxL,MAAMlD,SAASE,oBAAoBuO,YACxDE,QAAS,EAAKzL,MAAMlD,SAASE,oBAAoBqU,cACjDjH,QAAS,EAAKpK,MAAM1D,KAAKG,KAAKwC,IAC9B+K,MAAO,EAAKhK,MAAMlD,SAASE,oBAAoBmC,GAC/C4L,UAAWuK,EAAK,GAChBjK,cAAe+B,EAAO/B,cACtBC,YAAa8B,EAAOtL,KACpBkJ,WAAYsK,EAAK,GACjB3J,eAAgByB,EAAO/B,cACvBH,eAAgBgB,EAAQhB,eACxBD,aAAciB,EAAQpK,OAGb,IAAXuT,EAAkB,EAAKrV,MAAM8K,aAAa/C,GAAW,EAAK/H,MAAM4L,eAAe7D,I,EAGjFyN,qBAAuB,SAACrW,EAAIkW,GAC1B,EAAKrV,MAAMlD,SAASE,oBAAoBmQ,QAAQ5L,IAAI,SAAA6L,GAClD,GAAIA,EAAOjO,KAAOA,EAAI,CACpB,IAAM4I,EAAU,CACdyD,eAAgB,EAAKxL,MAAMlD,SAASE,oBAAoBuO,YACxDE,QAAS,EAAKzL,MAAMlD,SAASE,oBAAoBqU,cACjDjH,QAAS,EAAKpK,MAAM1D,KAAKG,KAAKwC,IAC9B+K,MAAO,EAAKhK,MAAMlD,SAASE,oBAAoBmC,GAC/C4L,UAAWqC,EAAOjO,GAClBkM,cAAe+B,EAAO/B,cACtBC,YAAa8B,EAAOtL,KACpBmK,SAAUmB,EAAOnB,SACjBjB,WAAYoC,EAAOnB,SAASmB,EAAOnB,SAASrC,OAAO,GAAGzK,GACtDwM,eAAgByB,EAAO/B,cACvBH,eAAgBkC,EAAOnB,SAASmB,EAAOnB,SAASrC,OAAO,GAAGsB,eAC1DD,aAAcmC,EAAOnB,SAASmB,EAAOnB,SAASrC,OAAO,GAAG9H,OAE/C,IAAXuT,EAAkB,EAAKrV,MAAMgM,YAAYjE,GAAW,EAAK/H,MAAMmM,cAAcpE,O,EAKnF0N,mBAAqB,SAAC5Q,GACpB,OAAIA,GAAc,GACT,MACEA,EAAa,IAAMA,GAAa,GAClC,SACEA,EAAa,IAAMA,GAAa,GAClC,SACK,S,mFArFd9E,KAAKC,MAAMiP,mBAAmBlP,KAAKC,MAAMvE,MAAM2L,OAAOjI,IACtDY,KAAKC,MAAMuP,gBAAgBxP,KAAKC,MAAMvE,MAAM2L,OAAOjI,M,yCAGlCmU,GACbA,EAAU7X,MAAM2L,OAAOjI,KAAOY,KAAKC,MAAMvE,MAAM2L,OAAOjI,KACxDY,KAAKC,MAAMiP,mBAAmBlP,KAAKC,MAAMvE,MAAM2L,OAAOjI,IACtDY,KAAKC,MAAMuP,gBAAgBxP,KAAKC,MAAMvE,MAAM2L,OAAOjI,O,6CAKrDY,KAAKC,MAAM+O,yB,+BA4EH,IAAD,SAC2ChP,KAAKC,MAAMlD,SAArDE,EADD,EACCA,oBAAqBC,EADtB,EACsBA,iBAC7B,OAASD,GACP,yBAAKmD,UAAU,qBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,eAAesQ,IAAG,yDAAoDzT,EAAoBuO,aAAemF,IAAI,OAGhI,yBAAKvQ,UAAU,YACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,eACZnD,EAAoBqU,cACrB,0BAAMlR,UAAU,cACbkU,KAAOrX,EAAoB0Y,gBAAgBnB,OAAO,WAIzD,yBAAKpU,UAAU,2CACZnD,EAAoB2Y,aACnB,kBAAC,EAAD,CACExV,UAAU,wBACVK,mBAAmB,EACnBP,KAAK,QACLC,KAAK,uBACP,kBAAC,EAAD,CACEC,UAAU,uBACVK,mBAAmB,EACnBP,KAAK,QACLC,KAAK,oBAERlD,EAAoBoM,SAASoF,UAC5B,kBAAC,EAAD,CACErO,UAAU,wBACVM,cAAeV,KAAK8U,mBACpBrU,mBAAmB,EACnBP,KAAK,OACLC,KAAK,iBACP,kBAAC,EAAD,CACEC,UAAU,uBACVM,cAAeV,KAAK6U,cACpBpU,mBAAmB,EACnBP,KAAK,OACLC,KAAK,oBAET,kBAAC,GAAD,CACE0E,YAAY,KACZhC,MAAO7C,KAAK0V,mBAAmBzY,EAAoBoM,SAASiG,cAC5DxK,WAAY7H,EAAoBoM,SAASiG,gBAE7C,yBAAKlP,UAAU,wBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,sBAAhB,QACEnD,EAAoBoM,UAAYpM,EAAoBoM,SAAS6E,MAAQjR,EAAoBoM,SAAS6E,KAAK1M,IAAI,SAAAgI,GAAG,OAC9G,kBAAC,GAAD,CACErJ,KAAMqJ,EAAIrJ,KACViC,IAAKoH,EAAItK,IACTA,IAAKsK,EAAItK,IACTgE,UAAU,EACVN,WAAY,EAAKA,WACjBC,MAAO2G,EAAI3G,UAGf,kBAAC,GAAD,CACE/D,KAAK,MACLkE,YAAahD,KAAKgD,oBAQhC,yBAAK5C,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,4BAEZlD,GAAoBA,EAAiB8X,KAAKb,MAAM,EAAE,GAAG3S,IAAI,SAACyT,EAAO1O,GAAR,OACxD,yBAAKnE,IAAKmE,EAAOnG,UAAS,wDACtB,yBAAKA,UAAU,sBAAsBsQ,IAAG,uDAAkDuE,EAAMC,cAAgBvE,IAAI,KAEpH,0BAAMvQ,UAAU,sBAAsB6U,EAAMlT,MAC5C,0BAAM3B,UAAU,2BAA2B6U,EAAME,mBASjE,yBAAK/U,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aACb,kBAAC,GAAD,CACEiG,iBAAkB,GAEjBpJ,GAAuBA,EAAoBmQ,SAAWnQ,EAAoBmQ,QAAQ5L,IAAI,SAAA6L,GAAM,OAC3F,kBAAC,GAAD,CAAK/K,MAAO+K,EAAOtL,KAAMK,IAAKiL,EAAOjO,IACnC,yBAAKgB,UAAU,qBAAqBgC,IAAKiL,EAAOjO,IAC9C,kBAAC,GAAD,CACE6G,iBAAkB,EAAKwP,qBACvB5S,MAAM,QACNd,KAAMsL,EAAOjO,GACb8G,QACEmH,EAAOnB,SAASrC,SAChB0E,KAAEhN,KAAKtE,GACPA,EAAoBoM,UACpBpM,EAAoBoM,SAASmF,SAC7BvR,EAAoBoM,SAASmF,QAAQjC,SACrCtP,EAAoBoM,SAASmF,QAAQjC,QAAQc,EAAOjO,KACpDnC,EAAoBoM,SAASmF,QAAQjC,QAAQc,EAAOjO,IAAImN,SAAS1C,SAErE,0BAAMzJ,UAAU,0CAAhB,kCAEDiN,EAAOnB,SAAS1K,IAAI,SAAA2K,GAAO,OAC1B,yBAAK/L,UAAU,qBAAqBgC,IAAK+J,EAAQ/M,IAC/C,kBAAC,GAAD,CACEyD,MAAM,YACNoD,iBAAkB,SAAClE,EAAMmE,GAAP,OAAmB,EAAKmP,sBAAsBtT,EAAMmE,EAASmH,EAAQlB,IACvFpK,KAAI,UAAKsL,EAAOjO,GAAZ,YAAkB+M,EAAQ/M,IAC9B8G,QACEjJ,GACAA,EAAoBoM,UACpBpM,EAAoBoM,SAASmF,SAC7BvR,EAAoBoM,SAASmF,QAAQjC,SACrCtP,EAAoBoM,SAASmF,QAAQjC,QAAQc,EAAOjO,KACpDnC,EAAoBoM,SAASmF,QAAQjC,QAAQc,EAAOjO,IAAImN,SACxDtP,EAAoBoM,SAASmF,QAAQjC,QAAQc,EAAOjO,IAAImN,QAAQJ,EAAQ/M,MAE5E,0BAAMgB,UAAU,6BAA6B+L,EAAQpK,sB,GAvO7ClB,IAAMC,WAsPlC8P,GAAqB,CACzB1B,mBAAoBoB,GAAgBpB,mBACpCM,gBAAiBc,GAAgBd,gBACjCL,sBAAuBmB,GAAgBnB,sBACvCnF,iBAAkBoG,GAAYpG,iBAC9BE,sBAAuBkG,GAAYlG,sBACnCS,sBAAuByF,GAAYzF,sBACnCG,2BAA4BsF,GAAYtF,2BACxCkE,qBAAsBsB,GAAgBtB,qBACtCjE,aAAcqF,GAAYrF,aAC1Bc,eAAgBuE,GAAYvE,eAC5BI,YAAamE,GAAYnE,YACzBG,cAAegE,GAAYhE,eAUdyE,mBAPf,SAAyBlS,GACvB,MAAO,CACLpC,KAAMoC,EAAMpC,KACZQ,SAAU4B,EAAM5B,WAIoB6T,GAAzBC,CAA6CuE,IC3P7CS,GAbb,6BACE,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAaC,OAAK,EAACC,KAAM,IAAKjE,UAAWQ,KACzC,kBAAC,GAAD,CAAawD,OAAK,EAACC,KAAM,SAAUjE,UAAWQ,KAC9C,kBAAC,GAAD,CAAawD,OAAK,EAACC,KAAM,YAAajE,UAAWc,KACjD,kBAAC,GAAD,CAAckD,OAAK,EAACC,KAAM,cAAejE,UAAWmB,KACpD,kBAAC,GAAD,CAAc6C,OAAK,EAACC,KAAM,QAASjE,UAAW2C,KAC9C,kBAAC,GAAD,CAAcqB,OAAK,EAACC,KAAM,aAAcjE,UAAW4C,KACnD,kBAAC,GAAD,CAAcoB,OAAK,EAACC,KAAM,UAAWjE,UAAWsD,OCdhDY,G,YAEJ,WAAY/V,GAAQ,IAAD,8BACjB,4CAAMA,KAEDA,MAAMiJ,iBACX4J,QAAQC,IAAI,UAJK,E,sEAQjB,OAAU/S,KAAKC,MAAM1C,WAIV,KAHT,6BACE,kBAAC,GAAD,MACEsY,Q,GAbQhV,IAAMC,WAmBlB8P,GAAqB,CACzB1H,eAAgBkH,GAAYlH,eAC5B+M,gBAAiB1F,GAAW0F,iBASfpF,mBANf,SAAyBlS,GACvB,MAAO,CACLpC,KAAMoC,EAAMpC,OAIwBqU,GAAzBC,CAA6CmF,ICpC5D,4EAWA,IAAIE,GAAiB,CACnBC,OAAQ7Z,EAAOT,iBACfua,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,gBAErBtO,KAASuO,cAAcP,IAChB,IAAMQ,GAAW,IAAIxO,KAASC,KAAKwO,mBAC7BxO,GAAOD,KAASC,OAEvByO,GjCbUC,YACZC,EAAkBrX,GAClBsX,YAAiBC,YAAiBvX,GAAUwX,MiCYhDC,IAASlF,OACP,kBAAC,IAAD,CAAU4E,MAAOA,IACf,kBAAC,IAAD,CAAiBnX,QAASA,GACxB,kBAAC,GAAD,QAGJ0X,SAASC,eAAe,S1CmGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpQ,KAAK,SAAAqQ,GACjCA,EAAaC,gB","file":"static/js/main.13dd85a5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {\r\n\tAPI_URL: process.env.REACT_APP_API_URL || '/api',\r\n\tFIREBASE_API_KEY: process.env.REACT_APP_FIREBASE_API_KEY,\r\n\tTHE_MOVIE_DB_TOKEN: process.env.REACT_APP_THEMOVIE_DB_API_KEY,\r\n\tLOCKR_PREFIX: 'app.',\r\n\tcolors: [\"#1B5E20\",\"#0D47A1\",\"#B71C1C\"],\r\n\tMOVIE_DB_PAYLOAD: {\r\n\t\tapi_key: process.env.REACT_APP_THEMOVIE_DB_API_KEY,\r\n    language: 'en-US',\r\n\t}\r\n}\r\n","import lockr from 'lockr';\r\nimport config from 'lib/config';\r\n\r\nlockr.prefix = config.LOCKR_PREFIX;\r\n\r\nconst hasToken = lockr.get('Authorization');\r\n\r\nexport default {\r\n  user: {\r\n    authenticated: !!hasToken,\r\n    data: {},\r\n    rolesConstants: {},\r\n    tvSeriesWishlist: [],\r\n    moviesWishlist: [],\r\n    currentlyWatching: [],\r\n  },\r\n  tvseries: {\r\n    searchData: [],\r\n    viewTVSeriesDetails: null,\r\n    viewTVSeriesCast: null,\r\n  },\r\n  movies: {\r\n    searchData: [],\r\n    viewMovieDetails: null,\r\n    viewMovieCast: null,\r\n  },\r\n  app: {\r\n    isFetching: false,\r\n    searchData: [],\r\n  }\r\n};\r\n","// User action types\r\nexport const USER_LOG_IN_SUCCESS = 'USER_LOG_IN_SUCCESS'\r\nexport const USER_LOG_OUT_SUCCESS = 'USER_LOG_OUT_SUCCESS'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_SET_CURRENT_USER = 'USER_SET_CURRENT_USER'\r\nexport const USER_SET_TV_SERIES_WISHLIST = 'USER_SET_TV_SERIES_WISHLIST'\r\nexport const USER_SET_MOVIES_WISHLIST = 'USER_SET_MOVIES_WISHLIST'\r\nexport const USER_SET_CURRENTLY_WATCHING = 'USER_SET_CURRENTLY_WATCHING'\r\n\r\n// Movie action types\r\nexport const MOVIES_GET_DETAILS_SUCCESS = 'MOVIES_GET_DETAILS_SUCCESS'\r\nexport const MOVIES_GET_CAST_SUCCESS = 'MOVIES_GET_CAST_SUCCESS'\r\nexport const MOVIES_SEARCH_SUCCESS = 'MOVIES_SEARCH_SUCCESS'\r\nexport const MOVIES_SEARCH_CLEAR = 'MOVIES_SEARCH_CLEAR'\r\nexport const MOVIES_DETAILS_CLEAR = 'MOVIES_DETAILS_CLEAR'\r\n\r\n// TV Series action types\r\nexport const TVSERIES_GET_DETAILS_SUCCESS = 'TVSERIES_GET_DETAILS_SUCCESS'\r\nexport const TVSERIES_GET_CAST_SUCCESS = 'TVSERIES_GET_CAST_SUCCESS'\r\nexport const TVSERIES_SEARCH_SUCCESS = 'TVSERIES_SEARCH_SUCCESS'\r\nexport const TVSERIES_SEARCH_CLEAR = 'TVSERIES_SEARCH_CLEAR'\r\nexport const TVSERIES_DETAILS_CLEAR = 'TVSERIES_DETAILS_CLEAR'\r\n\r\n// App action types\r\nexport const APP_MEDIA_SEARCH_SUCCESS = 'APP_MEDIA_SEARCH_SUCCESS'\r\nexport const APP_MEDIA_SEARCH_CLEAR = 'APP_MEDIA_SEARCH_CLEAR'\r\n","import defaultState from './default-state';\r\nimport {\r\n  APP_MEDIA_SEARCH_SUCCESS,\r\n  APP_MEDIA_SEARCH_CLEAR,\r\n} from './../actions/actions-types';\r\n\r\nimport config from './../lib/config';\r\nimport lockr from 'lockr';\r\n\r\nlockr.prefix = config.LOCKR_PREFIX;\r\n\r\nexport default function userState(state = defaultState.app, action) {\r\n\r\n  switch (action.type) {\r\n\r\n    case APP_MEDIA_SEARCH_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        searchData: action.data\r\n      })\r\n\r\n    case APP_MEDIA_SEARCH_CLEAR:\r\n      return Object.assign({}, state, {\r\n        searchData: []\r\n      })\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import defaultState from './default-state';\r\nimport {\r\n  USER_LOG_IN_SUCCESS,\r\n  USER_LOG_OUT_SUCCESS,\r\n  USER_SET_CURRENT_USER,\r\n  USER_SET_TV_SERIES_WISHLIST,\r\n  USER_SET_MOVIES_WISHLIST,\r\n  USER_SET_CURRENTLY_WATCHING\r\n} from './../actions/actions-types';\r\n\r\nimport config from './../lib/config';\r\nimport lockr from 'lockr';\r\n\r\nlockr.prefix = config.LOCKR_PREFIX;\r\n\r\nexport default function userState(state = defaultState.user, action) {\r\n\r\n  switch (action.type) {\r\n\r\n    case USER_LOG_IN_SUCCESS:\r\n      lockr.set('Authorization', action.data.uid);\r\n      return Object.assign({}, state, {\r\n        data: action.data,\r\n        authenticated: true,\r\n      });\r\n\r\n    case USER_LOG_OUT_SUCCESS:\r\n      lockr.rm('Authorization');\r\n      return Object.assign({}, state, {\r\n        data: {id: '', email: '', firstName: '', lastName: '', uid: ''},\r\n        authenticated: false\r\n      });\r\n\r\n    case USER_SET_CURRENT_USER:\r\n      return Object.assign({}, state, {\r\n        data: action.data,\r\n        authenticated: true,\r\n      });\r\n\r\n    case USER_SET_TV_SERIES_WISHLIST:\r\n      return Object.assign({}, state, {\r\n        tvSeriesWishlist: action.data,\r\n      });\r\n\r\n    case USER_SET_MOVIES_WISHLIST:\r\n      return Object.assign({}, state, {\r\n        moviesWishlist: action.data,\r\n      });\r\n\r\n    case USER_SET_CURRENTLY_WATCHING:\r\n      return Object.assign({}, state, {\r\n        currentlyWatching: action.data,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import defaultState from './default-state';\r\nimport {\r\n  MOVIES_GET_DETAILS_SUCCESS,\r\n  MOVIES_GET_CAST_SUCCESS,\r\n  MOVIES_SEARCH_SUCCESS,\r\n  MOVIES_SEARCH_CLEAR,\r\n  MOVIES_DETAILS_CLEAR,\r\n} from './../actions/actions-types';\r\n\r\nimport config from './../lib/config';\r\nimport lockr from 'lockr';\r\n\r\nlockr.prefix = config.LOCKR_PREFIX;\r\n\r\nexport default function userState(state = defaultState.movies, action) {\r\n\r\n  switch (action.type) {\r\n\r\n    case MOVIES_GET_DETAILS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        viewMovieDetails: action.data\r\n      })\r\n\r\n    case MOVIES_GET_CAST_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        viewMovieCast: action.data\r\n      })\r\n\r\n    case MOVIES_SEARCH_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        searchData: action.data\r\n      })\r\n    \r\n    case MOVIES_SEARCH_CLEAR:\r\n      return Object.assign({}, state, {\r\n        searchData: []\r\n      })\r\n    \r\n    case MOVIES_DETAILS_CLEAR: \r\n      return Object.assign({}, state, {\r\n        viewMovieDetails: null,\r\n        viewMovieCast: null,\r\n      })\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import defaultState from './default-state';\r\nimport {\r\n  TVSERIES_GET_DETAILS_SUCCESS,\r\n  TVSERIES_GET_CAST_SUCCESS,\r\n  TVSERIES_SEARCH_SUCCESS,\r\n  TVSERIES_SEARCH_CLEAR,\r\n  TVSERIES_DETAILS_CLEAR\r\n} from './../actions/actions-types';\r\n\r\nimport config from './../lib/config';\r\nimport lockr from 'lockr';\r\n\r\nlockr.prefix = config.LOCKR_PREFIX;\r\n\r\nexport default function userState(state = defaultState.tvseries, action) {\r\n\r\n  switch (action.type) {\r\n\r\n    case TVSERIES_GET_DETAILS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        viewTVSeriesDetails: action.data\r\n      })\r\n\r\n    case TVSERIES_GET_CAST_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        viewTVSeriesCast: action.data\r\n      })\r\n\r\n    case TVSERIES_SEARCH_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        searchData: action.data\r\n      })\r\n    \r\n    case TVSERIES_SEARCH_CLEAR:\r\n      return Object.assign({}, state, {\r\n        searchData: []\r\n      })\r\n    \r\n    case TVSERIES_DETAILS_CLEAR: \r\n      return Object.assign({}, state, {\r\n        viewTVSeriesDetails: null,\r\n        viewTVSeriesCast: null,\r\n      })\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import app from './app'\r\nimport user from './user'\r\nimport movies from './movies'\r\nimport tvseries from './tvseries'\r\nimport { combineReducers } from 'redux'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nconst rootReducer = (history) => combineReducers({\r\n  router: connectRouter(history),\r\n  app,\r\n  user,\r\n  movies,\r\n  tvseries,\r\n})\r\n\r\nexport default rootReducer\r\n","\r\nimport { createBrowserHistory } from 'history'\r\nimport { applyMiddleware, createStore } from 'redux'\r\nimport { routerMiddleware } from 'connected-react-router'\r\nimport thunk from 'redux-thunk';\r\nimport createRootReducer from './reducers'\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL})\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    applyMiddleware( routerMiddleware(history), thunk))\r\n\r\n  return store\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Button extends React.Component{\r\n\r\n\trender() {\r\n\r\n\t\tconst {icon, text, className, style} = this.props;\r\n\t\tconst type = this.props.type || 'button';\r\n    const shape = this.props.shape || 'normal';\r\n    const show = this.props.show === undefined ? true : this.props.show;\r\n    const expandTextOnHover = this.props.expandTextOnHover || false;\r\n\t\tconst onButtonClick = this.props.onButtonClick || (() => {});\r\n\r\n\t\treturn ( show &&\r\n      <button\r\n        className={`${className} binger-btn binger-btn-${shape}`}\r\n        style={style}\r\n        type={type}\r\n        onClick={(event) => onButtonClick(event)}>\r\n        { icon && (\r\n          <span className=\"binger-btn-icon\">\r\n            <i className={`fas fa-${icon} fa-fw`}></i>\r\n          </span>\r\n        )}\r\n        { text && (\r\n          <span className={expandTextOnHover ? \"binger-btn-text-expandable\" : \"binger-btn-text\"}>\r\n            {text}\r\n          </span>\r\n        )}\r\n      </button>\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\r\nimport { Input } from 'components/LayoutComponents';\r\n\r\nexport default class Form extends React.Component {\r\n\r\n  state = {}\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.children.map(item => {\r\n      if (item.type === Input) {\r\n        this.state[item.props.name] = {\r\n          value: '',\r\n          isValid: true,\r\n          isRequired: item.props.required ? true : false,\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  validateForm = () => {\r\n    return new Promise((resolve,reject) => {\r\n      var inputArray = this.state;\r\n      var values = {};\r\n      var isValidForm = true;\r\n      Object.keys(inputArray).map(item => {\r\n        if (inputArray[item].value === '' && inputArray[item].isRequired) {\r\n          inputArray[item].isValid = false;\r\n          isValidForm = false;\r\n        } else {\r\n          values[item] = inputArray[item].value;\r\n          inputArray[item].isValid = true;\r\n        }\r\n      })\r\n      this.setState(inputArray);\r\n      isValidForm ? resolve(values) : reject(\"You need to fill the required fields!\");\r\n    })\r\n  }\r\n\r\n  handleChange = (name, value) => {\r\n    var inputArray = this.state;\r\n    inputArray[name].value = value;\r\n    this.setState(inputArray);\r\n  }\r\n\r\n\trender() {\r\n    const {children} = this.props;\r\n    return (\r\n      <form onSubmit={this.props.onSubmit}>\r\n        {children.map(item => {\r\n          return item.type === Input ?\r\n            <Input\r\n              key={item.props.name}\r\n              value={this.state[item.props.name].value}\r\n              isValid={this.state[item.props.name].isValid}\r\n              onInputChange={this.handleChange}\r\n              {...item.props} /> : item\r\n        })}\r\n      </form>\r\n    )\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Input extends React.Component{\r\n\r\n\trender() {\r\n\t\tconst {label, icon, name, value } = this.props;\r\n\t\tconst isValid = this.props.isValid !== undefined ? this.props.isValid : true;\r\n\t\tconst type = this.props.type || 'text';\r\n\t\tconst onInputChange = this.props.onInputChange || (() => {});\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"form-group\">\r\n\t      <div className=\"binger-input\">\r\n\t\t\t\t\t<label className=\"binger-input-label\">{label}</label>\r\n\t\t\t\t\t<span className=\"binger-input-icon\">\r\n\t\t\t\t\t\t<i className={`fas fa-${icon}`}></i>\r\n\t\t\t\t\t</span>\r\n\t        <input\r\n\t\t\t\t\t\tclassName={`binger-input-field${!isValid ? ' binger-input-not-valid' : ''}`}\r\n\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\tvalue={value}\r\n\t\t\t\t\t\tonChange={(event) => onInputChange(name, event.target.value)} />\r\n\t      </div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Tag extends React.Component{\r\n\r\n  state = {\r\n    show: true,\r\n    type: this.props.type || 'normal',\r\n    inputText: '',\r\n  }\r\n\r\n  setTagType = (type) => {\r\n    this.setState({type: type});\r\n  }\r\n\r\n  onTagClose = () => {\r\n    const onTagClose = this.props.onTagClose || (() => {});\r\n    this.setState({show: false});\r\n    onTagClose({\r\n      text: this.props.text,\r\n      color: this.props.color,\r\n      uid: this.props.uid,\r\n    });\r\n  }\r\n\r\n  handleInputKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      const onTagSubmit = this.props.onTagSubmit || (() => {});\r\n      onTagSubmit(this.state.inputText);\r\n      this.setState({inputText: '', type: 'add'});\r\n    }\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({inputText: e.target.value})\r\n  }\r\n\r\n\trender() {\r\n\r\n    const { icon, text, color, className } = this.props;\r\n    const { type, inputText } = this.state;\r\n    const closable = this.props.closable || false;\r\n\r\n    return (\r\n      <div>\r\n      { type === 'normal' &&\r\n        <div\r\n          style={{backgroundColor: color}}\r\n          className={`${className} binger-tag`}\r\n        >\r\n          { icon && (\r\n            <span className=\"binger-tag-icon\">\r\n              <i className={`fas fa-${icon} fa-fw`}></i>\r\n            </span>\r\n          )}\r\n          { text && (\r\n            <span className=\"binger-tag-text\">\r\n              {text}\r\n            </span>\r\n          )}\r\n          { closable &&\r\n            <span \r\n              className=\"binger-tag-close-icon\"\r\n              onClick={this.onTagClose}>\r\n              <i className=\"far fa-times-circle\"></i>\r\n            </span>\r\n          }\r\n        </div>\r\n      }\r\n\r\n      { type === 'add' &&\r\n        <div \r\n          className=\"binger-tag\"\r\n          onClick={() => this.setTagType('input')}>\r\n          <div className=\"binger-tag-add\">\r\n            <span className=\"binger-tag-icon\">\r\n              <i className=\"fas fa-plus\"></i>\r\n            </span>\r\n            <span className=\"binger-tag-text\">\r\n              New Tag\r\n            </span>\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      { type === 'input' &&\r\n        <div className=\"binger-tag\">\r\n          <input \r\n            autoFocus\r\n            onKeyDown={this.handleInputKeyDown}\r\n            onChange={this.handleInputChange}\r\n            value={inputText}\r\n            className=\"binger-tag-input\" \r\n            type=\"text\"/>\r\n          <span \r\n            className=\"binger-tag-cancel-icon\"\r\n            onClick={() => this.setTagType('add')}>\r\n            <i className=\"far fa-times-circle\"></i>\r\n          </span>\r\n        </div>\r\n      }\r\n      \r\n      { type === 'hidden' && null }\r\n      </div>\r\n    );\r\n\t}\r\n}","import React from 'react';\r\nvar ee = require('event-emitter');\r\n\r\nconst emitter = new ee();\r\n\r\nexport const notification = (options) => {\r\n  emitter.emit('notification', options);\r\n}\r\n\r\nexport default class Notification extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isActive: false,\r\n      top: -120,\r\n      options: {}\r\n    }\r\n\r\n    this.timeout = null;\r\n\r\n    emitter.on('notification', (options) => {\r\n      this.onShow(options);\r\n    })\r\n  }\r\n\r\n  onShow = (options) => {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout);\r\n      this.setState({ top: -120}, () => {\r\n        this.timeout = setTimeout(() => {\r\n          this.showNotification(options);\r\n        }, 500);\r\n      });\r\n    } else {\r\n      this.showNotification(options);\r\n    }\r\n  }\r\n\r\n  showNotification = (options) => {\r\n    this.setState({\r\n      top: 100,\r\n      options: {\r\n        type: options.type || 'info',\r\n        duration: options.duration || 3000,\r\n        title: options.title || '',\r\n        description: options.description || '',\r\n        icon: options.icon || '',\r\n      }\r\n    }, () => {\r\n      this.timeout = setTimeout(() => {\r\n        this.setState({\r\n          top: -120,\r\n        });\r\n      }, this.state.options.duration);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {options, top} = this.state;\r\n\r\n    return (\r\n      <div style={{top: top}} className={`binger-notification ${options.type}`}>\r\n        {options.icon && (\r\n          <div className=\"binger-notification-icon\">\r\n            <i className={`fas fa-${options.icon}`}></i>\r\n          </div>\r\n        )}\r\n        <div className=\"binger-notification-text-area\">\r\n          {options.title && (\r\n              <span className=\"binger-notification-title\">{options.title}</span>\r\n          )}\r\n          {options.description && (\r\n              <span className=\"binger-notification-description\">{options.description}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ProgressBar extends React.Component{\r\n\r\n\trender() {\r\n\r\n    const value = this.props.value || 0;\r\n    const color = this.props.color || 'green';\r\n    const colors = {\r\n      'green': {\r\n        regular: '#28A745',\r\n        darken: '#186429'\r\n      },\r\n      'red': {\r\n        regular: '#DC3545',\r\n        darken: '#6e1a22'\r\n      },\r\n      'blue': {\r\n        regular: '#2196F3',\r\n        darken: '#1976D2'\r\n      },\r\n      'orange': {\r\n        regular: '#f57c00',\r\n        darken: '#e65100'\r\n      },\r\n      'purple': {\r\n        regular: '#c2185b',\r\n        darken: '#880e4f'\r\n      },\r\n      'lime': {\r\n        regular: '#cddc39',\r\n        darken: '#99aa00'\r\n      },\r\n    }\r\n\r\n\t\treturn (\r\n      <div>\r\n        <div style={{backgroundColor: colors[color].darken}} className=\"binger-progress-bar\">\r\n          <div className=\"binger-progress-bar-completed\" style={{width: `${value}%`, backgroundColor: colors[color].regular}}></div>\r\n        </div>\r\n      </div>\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\r\n\r\nexport default class ProgressCircle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const size = this.props.size || 90;\r\n    const color = this.props.color || 'green';\r\n    const colors = {\r\n      'green': {\r\n        regular: '#28A745',\r\n        darken: '#186429'\r\n      },\r\n      'red': {\r\n        regular: '#DC3545',\r\n        darken: '#6e1a22'\r\n      },\r\n      'blue': {\r\n        regular: '#2196F3',\r\n        darken: '#1976D2'\r\n      },\r\n      'orange': {\r\n        regular: '#f57c00',\r\n        darken: '#e65100'\r\n      },\r\n      'yellow': {\r\n        regular: '#FFEB3B',\r\n        darken: '#FBC02D'\r\n      },\r\n      'purple': {\r\n        regular: '#c2185b',\r\n        darken: '#880e4f'\r\n      },\r\n      'lime': {\r\n        regular: '#cddc39',\r\n        darken: '#99aa00'\r\n      },\r\n    }\r\n    const strokeWidth = this.props.strokeWidth || 5;\r\n    const percentage = (this.props.percentage === undefined || this.props.percentage === 0) ? 0 : this.props.percentage\r\n\r\n    // SVG centers the stroke width on the radius, subtract out so circle fits in square\r\n    const radius = (size - strokeWidth) / 2;\r\n    // Enclose cicle in a circumscribing square\r\n    const viewBox = `0 0 ${size} ${size}`;\r\n    // Arc length at 100% coverage is the circle circumference\r\n    const dashArray = radius * Math.PI * 2;\r\n    // Scale 100% coverage overlay with the actual percent\r\n    const dashOffset = dashArray - dashArray * percentage / 100;\r\n\r\n    return (\r\n      <svg\r\n          width={size}\r\n          height={size}\r\n          viewBox={viewBox}>\r\n          <circle\r\n            className=\"circle-background\"\r\n            cx={size / 2}\r\n            cy={size / 2}\r\n            r={radius}\r\n            strokeWidth={`${strokeWidth}px`} />\r\n          <circle\r\n            className=\"circle-progress\"\r\n            cx={size / 2}\r\n            cy={size / 2}\r\n            r={radius}\r\n            strokeWidth={`${strokeWidth}px`}\r\n            transform={`rotate(-90 ${size / 2} ${size / 2})`}\r\n            style={{\r\n              strokeDasharray: dashArray,\r\n              strokeDashoffset: dashOffset,\r\n              stroke: colors[color].darken\r\n            }} />\r\n          <text\r\n            style={{fill: colors[color].darken}}\r\n            className=\"circle-text\"\r\n            x=\"50%\"\r\n            y=\"60%\"\r\n            textAnchor=\"middle\">\r\n            {percentage}%\r\n          </text>\r\n      </svg>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class Input extends React.Component{\r\n  onCheckboxChange = () => {\r\n    const onCheckboxChange = this.props.onCheckboxChange || (() => {});\r\n    onCheckboxChange(this.props.name, !this.props.checked);\r\n  }\r\n\r\n\trender() {\r\n    const { color } = this.props;\r\n    const checked = this.props.checked || false;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n        {checked ? \r\n          <span onClick={this.onCheckboxChange} className={`binger-checkbox-is-not-checked binger-checkbox-${color}`}>\r\n            <i className=\"far fa-check-square\"></i>\r\n          </span> :\r\n          <span onClick={this.onCheckboxChange} className={`binger-checkbox-is-not-checked binger-checkbox-${color}`}>\r\n            <i className=\"far fa-square\"></i>\r\n          </span>\r\n        }\r\n      </div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Tabs extends React.Component {\r\n\r\n  state = {\r\n    activeTab: this.props.defaultActiveTab - 1 || 0,\r\n  }\r\n\r\n  handleTabChange = (index) => {\r\n    this.setState({activeTab: index});\r\n    const onTabChange = this.props.onTabChange || (() => {});\r\n    onTabChange(index + 1);\r\n  }\r\n\r\n\trender() {\r\n    const {children} = this.props;\r\n    const {activeTab} = this.state;\r\n\r\n    return (\r\n      <div className=\"binger-tabs\">\r\n        <div className=\"binger-tabs-list\">\r\n          { children && children.map((tab, index) => (\r\n            <div \r\n              key={index}\r\n              className={`binger-tabs-list-item ${index === activeTab ? `binger-tabs-active-tab` : null}`}\r\n              onClick={() => this.handleTabChange(index)}\r\n            >\r\n              {tab && tab.props && tab.props.label}\r\n            </div>\r\n          )) }\r\n        </div>\r\n        <div className=\"binger-tabs-content\">\r\n          {children[activeTab]}\r\n        </div>\r\n      </div>\r\n    )\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Tab extends React.Component{\r\n\r\n\trender() {\r\n\r\n    const {children} = this.props;\r\n\r\n\t\treturn (\r\n      <div className=\"binger-tab\">\r\n        { children }\r\n      </div>\r\n\t\t)\r\n\t}\r\n}","import axios from 'axios';\r\nimport config from './config';\r\n\r\nfunction requestHeaders() {\r\n  //const movieToken = config.THE_MOVIE_DB_TOKEN;\r\n  const defaultHeaders = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n\r\n  return defaultHeaders\r\n}\r\n\r\nfunction post(url, data, options) {\r\n  const headers = requestHeaders();\r\n  const apiUrl = options && options.isRoot ? config.SERVER_ROOT : config.API_URL;\r\n  return axios({method: 'post', url: `${apiUrl}/${url}`, data, headers})\r\n    .then(res => res.data);\r\n}\r\n\r\nfunction get(url, params, options) {\r\n  const headers = requestHeaders();\r\n  const apiUrl = options && options.isRoot ? config.SERVER_ROOT : config.API_URL;\r\n  return axios({method: 'get', url: `${apiUrl}/${url}`, params, headers})\r\n    .then(res => res.data);\r\n}\r\n\r\nfunction put(url, data) {\r\n  const headers = requestHeaders();\r\n  return axios({method: 'put', url: `${config.API_URL}/${url}`, data, headers})\r\n    .then(res => res.data);\r\n}\r\n\r\nfunction patch(url, data) {\r\n  const headers = requestHeaders();\r\n  return axios({method: 'patch', url: `${config.API_URL}/${url}`, data, headers})\r\n    .then(res => res.data);\r\n}\r\n\r\nfunction deleteRequest(url, params) {\r\n  const headers = requestHeaders();\r\n  return axios({method: 'delete', url: `${config.API_URL}/${url}`, params, headers})\r\n    .then(res => res.data);\r\n}\r\n\r\nexport default {\r\n  post: post,\r\n  get: get,\r\n  put: put,\r\n  patch: patch,\r\n  delete: deleteRequest\r\n};\r\n","import {\r\n  USER_LOG_IN_SUCCESS,\r\n  USER_LOG_OUT_SUCCESS,\r\n  USER_SET_CURRENT_USER,\r\n  USER_SET_TV_SERIES_WISHLIST,\r\n  USER_SET_MOVIES_WISHLIST,\r\n  USER_SET_CURRENTLY_WATCHING\r\n} from './actions-types';\r\nimport {notification} from 'components/LayoutComponents';\r\nimport {push} from 'react-router-redux';\r\nimport lockr from 'lockr';\r\nimport http from './../lib/axios-wrapper';\r\nimport firebase from 'firebase';\r\nimport config from '../lib/config';\r\n\r\nexport function loginSuccess(data) {\r\n  return {type: USER_LOG_IN_SUCCESS, data};\r\n}\r\n\r\nexport function logOutSuccess() {\r\n  return {type: USER_LOG_OUT_SUCCESS};\r\n}\r\n\r\nexport function setCurrentUser(data) {\r\n  return {type: USER_SET_CURRENT_USER, data};\r\n}\r\n\r\nexport function setTVSeriesWishlist(data) {\r\n  return {type: USER_SET_TV_SERIES_WISHLIST, data};\r\n}\r\n\r\nexport function setMoviesWishlist(data) {\r\n  return {type: USER_SET_MOVIES_WISHLIST, data}\r\n}\r\n\r\nexport function setCurrentlyWatching(data) {\r\n  return {type: USER_SET_CURRENTLY_WATCHING, data}\r\n}\r\n\r\nexport const register = (payload) => (dispatch) => {\r\n  firebase.auth().createUserWithEmailAndPassword(payload.email, payload.password).then(result => {\r\n    firebase.database().ref(`users/${result.user.uid}/metadata`).set({\r\n      name: payload.name,\r\n      email: payload.email,\r\n      avatar: 'gs://binger-e4fea.appspot.com/Avengers-Thor-icon.png',\r\n    });\r\n    notification({\r\n      type: 'success',\r\n      title: 'Account created!',\r\n      description: 'You have successfully created a new account!',\r\n    })\r\n    dispatch(push('/login'));\r\n  })\r\n  .catch(error => {\r\n    notification({\r\n      type: 'error',\r\n      icon: 'exclamation-circle',\r\n      title: 'Register failed!',\r\n      description: error.message,\r\n    })\r\n  });\r\n}\r\n\r\nexport const login = (payload) => (dispatch) => {\r\n  firebase.auth().signInWithEmailAndPassword(payload.email, payload.password).then(result => {\r\n    dispatch(loginSuccess(result.user));\r\n    notification({\r\n      type: 'success',\r\n      title: 'You have successfully logged in!',\r\n      icon: 'check-circle',\r\n    })\r\n    dispatch(push('/main'));\r\n  })\r\n  .catch(error => {\r\n    notification({\r\n      title: 'Login failed!',\r\n      description: error.message,\r\n      type: 'error',\r\n      icon: 'exclamation-circle',\r\n    })\r\n  });\r\n}\r\n\r\nexport const logOut = () => (dispatch) => {\r\n  firebase.auth().signOut().then(() => {\r\n    dispatch(logOutSuccess());\r\n    dispatch(push('/login'))\r\n  })\r\n  .catch(error => {\r\n    notification({\r\n      title: 'Logout failed!',\r\n      type: 'error',\r\n      icon: 'exclamation-circle',\r\n    })\r\n    dispatch(push('/login'))\r\n  });\r\n}\r\n\r\nexport const getCurrentUser = () => (dispatch) => {\r\n\r\n  if(lockr.get('Authorization')) {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      firebase.database().ref(`/users/${user.uid}/metadata`).on('value', snapshot => {\r\n        const userData = Object.assign({}, snapshot.val(), {uid: user.uid})\r\n        dispatch(setCurrentUser(userData)) \r\n      });\r\n    });\r\n    return Promise.resolve(true);\r\n  } else {\r\n    return Promise.reject();\r\n  }\r\n};\r\n\r\nexport const addTagToMovie = (tag, movie_id, userId) => (dispatch) => {\r\n  firebase.database().ref(`users/${userId}/moviesTags/${movie_id}`).push({\r\n    text: tag,\r\n    color: config.colors[Math.floor(Math.random() * config.colors.length)],\r\n  });\r\n  notification({\r\n    type: 'success',\r\n    title: 'Tag added!',\r\n  })\r\n}\r\n\r\nexport const deleteTagFromMovie = (tag, movie_id, userId) => (dispatch) => {\r\n  firebase.database().ref(`users/${userId}/moviesTags/${movie_id}/${tag.uid}`).remove();\r\n  notification({\r\n    type: 'success',\r\n    title: 'Tag removed!',\r\n  })\r\n}\r\n\r\nexport const addTagToTVSeries = (tag, tv_id, userId) => (dispatch) => {\r\n  firebase.database().ref(`users/${userId}/tvSeriesTags/${tv_id}`).push({\r\n    text: tag,\r\n    color: config.colors[Math.floor(Math.random() * config.colors.length)],\r\n  });\r\n  notification({\r\n    type: 'success',\r\n    title: 'Tag added!',\r\n  })\r\n}\r\n\r\nexport const deleteTagFromTVSeries = (tag, tv_id, userId) => (dispatch) => {\r\n  firebase.database().ref(`users/${userId}/tvSeriesTags/${tv_id}/${tag.uid}`).remove();\r\n  notification({\r\n    type: 'success',\r\n    title: 'Tag removed!',\r\n  })\r\n}\r\n\r\nexport const watchMovie = (movie, movie_id, user_id) => (dispatch) => {\r\n  firebase.database().ref(`users/${user_id}/moviesWatched/${movie_id}/`).set(movie);\r\n  notification({\r\n    type: 'success',\r\n    title: 'Movie added to your watch list!',\r\n  })\r\n}\r\n\r\nexport const unWatchMovie = (movie_id, user_id) => (dispatch) => {\r\n  firebase.database().ref(`users/${user_id}/moviesWatched/${movie_id}/`).remove();\r\n  notification({\r\n    type: 'success',\r\n    title: 'Movie removed from your watch list!',\r\n  })\r\n}\r\n\r\nexport const addMovieToFavorite = (movie, movie_id, user_id) => (dispatch) => {\r\n  firebase.database().ref(`users/${user_id}/moviesFavorite/${movie_id}/`).set(movie);\r\n  notification({\r\n    type: 'success',\r\n    title: 'Movie added to your favorite list!',\r\n  })\r\n}\r\n\r\nexport const removeMovieFromFavorite = (movie_id, user_id) => (dispatch) => {\r\n  firebase.database().ref(`users/${user_id}/moviesFavorite/${movie_id}/`).remove();\r\n  notification({\r\n    type: 'success',\r\n    title: 'Movie removed from your favorite list!',\r\n  })\r\n}\r\n\r\nexport const addMovieToWishlist = (movie, movie_id, user_id) => (dispatch) => {\r\n  firebase.database().ref(`users/${user_id}/moviesWishlist/${movie_id}/`).set(movie);\r\n  notification({\r\n    type: 'success',\r\n    title: 'Movie added to your wishlist!',\r\n  })\r\n}\r\n\r\nexport const removeMovieFromWishlist = (movie_id, user_id) => (dispatch) => {\r\n  firebase.database().ref(`users/${user_id}/moviesWishlist/${movie_id}/`).remove();\r\n  notification({\r\n    type: 'success',\r\n    title: 'Movie removed from your wishlist!',\r\n  })\r\n}\r\n\r\nexport const addTVSeriesToWishlist = (tv, tvId, userId) => (dispatch) => {\r\n  firebase.database().ref(`users/${userId}/tvSeriesWishlist/${tvId}/`).set(tv);\r\n  notification({\r\n    type: 'success',\r\n    title: 'TV series added to your wishlist!',\r\n  })\r\n}\r\n\r\nexport const removeTVSeriesFromWishlist = (tvId, userId) => (dispatch) => {\r\n  firebase.database().ref(`users/${userId}/tvSeriesWishlist/${tvId}/`).remove();\r\n  notification({\r\n    type: 'success',\r\n    title: 'TV Series removed from your wishlist!',\r\n  })\r\n}\r\n\r\nexport const watchEpisode = (payload) => (dispatch) => {\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content/${payload.season_id}/content/${payload.episode_id}`).set({\r\n    episode_name: payload.episode_name,\r\n    episode_id: payload.episode_id,\r\n    episode_number: payload.episode_number,\r\n    timestamp: Date()\r\n  });\r\n\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content/${payload.season_id}/metadata`).set({\r\n    season_number: payload.season_number,\r\n    name: payload.season_name,\r\n    id: payload.season_id\r\n  });\r\n\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/metadata`).set({\r\n    poster_path: payload.tv_poster_path,\r\n    name: payload.tv_name,\r\n    id: payload.tv_id,\r\n    last_episode_seen: {\r\n      episode_name: payload.episode_name,\r\n      episode_season: payload.episode_season,\r\n      episode_id: payload.episode_id,\r\n      episode_number: payload.episode_number,\r\n    }\r\n  });\r\n\r\n  notification({\r\n    type: 'success',\r\n    title: 'You have succesfully watched this episode!',\r\n  })\r\n}\r\n\r\nexport const unWatchEpisode = (payload) => (dispatch) => {\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content/${payload.season_id}/content/${payload.episode_id}`).remove();\r\n\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content`).once('value', tvSnapshot => {\r\n    let tv = tvSnapshot.val();\r\n    if (tv === null) {\r\n      firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}`).remove();\r\n    }\r\n  })\r\n\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content/${payload.season_id}/content`).once('value', seasonSnapshot => {\r\n    let season = seasonSnapshot.val();\r\n    if (season === null) {\r\n      firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content/${payload.season_id}`).remove();\r\n    }\r\n  })\r\n\r\n  notification({\r\n    type: 'success',\r\n    title: 'Episode removed from your watched list!',\r\n  })\r\n}\r\n\r\nexport const watchSeason = (payload) => (dispatch) => {\r\n\r\n  const map = {}\r\n  payload.episodes.map(episode => {\r\n     \r\n    map[episode.id]= {\r\n      timestamp: Date()\r\n    }\r\n  })\r\n\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content/${payload.season_id}/content`).set(map);\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content/${payload.season_id}/metadata`).set({\r\n    season_number: payload.season_number,\r\n    name: payload.season_name,\r\n    id: payload.season_id,\r\n  });\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/metadata`).set({\r\n    poster_path: payload.tv_poster_path,\r\n    name: payload.tv_name,\r\n    id: payload.tv_id,\r\n    last_episode_seen: {\r\n      episode_name: payload.episode_name,\r\n      episode_season: payload.episode_season,\r\n      episode_id: payload.episode_id,\r\n      episode_number: payload.episode_number,\r\n    }\r\n  });\r\n  notification({\r\n    type: 'success',\r\n    title: 'You have succesfully watched the whole season!',\r\n  })\r\n}\r\n\r\nexport const unWatchSeason = (payload) => (dispatch) => { \r\n\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content/${payload.season_id}`).remove();\r\n  firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}/content`).once('value', contentSnapshot => {\r\n    let content = contentSnapshot.val();\r\n    if (content === null) {\r\n      firebase.database().ref(`users/${payload.user_id}/tvSeriesWatched/${payload.tv_id}`).remove();\r\n    }\r\n  })\r\n  notification({\r\n    type: 'success',\r\n    title: 'You have succesfully un-watched the whole season!',\r\n  })\r\n}\r\n\r\nexport const getTVSeriesWishlist = (user_id) => (dispatch) => {\r\n  firebase.database().ref(`users/${user_id}/tvSeriesWishlist`).on('value', snapshot => {\r\n    let content = snapshot.val();\r\n    if (content) {\r\n      let tvSeriesArray = Object.keys(content).map(item => content[item]);\r\n      dispatch(setTVSeriesWishlist(tvSeriesArray));\r\n    }\r\n  })\r\n}\r\n\r\nexport const getMoviesWishlist = (user_id) => (dispatch) => {\r\n  firebase.database().ref(`users/${user_id}/moviesWishlist`).on('value', snapshot => {\r\n    let content = snapshot.val();\r\n    let moviesArray = Object.keys(content).map(item => content[item]);\r\n    dispatch(setMoviesWishlist(moviesArray));\r\n  })\r\n}\r\n\r\nexport const getCurrentlyWatching = (user_id) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    firebase.database().ref(`users/${user_id}/tvSeriesWatched`).on('value', async snapshot => {\r\n      let content = snapshot.val();\r\n  \r\n      let results = await Promise.all(\r\n        Object.keys(content).map(tv => {\r\n          let tv_metadata = content[tv].metadata;\r\n          let lastEpisodeSeen = content[tv].metadata.last_episode_seen;\r\n          \r\n          return http.get(`tv/${tv_metadata.id}/season/${lastEpisodeSeen.episode_season}/episode/${lastEpisodeSeen.episode_number+1}`, config.MOVIE_DB_PAYLOAD)\r\n            .then(result1 => {\r\n              return http.get(`tv/${tv_metadata.id}`, config.MOVIE_DB_PAYLOAD)\r\n              .then(tvResult => {\r\n                tvResult.seasons.map(season => {\r\n                  if (season.season_number === lastEpisodeSeen.episode_season) {\r\n                    result1.season_id = season.id;\r\n                    result1.season_name = season.name;\r\n                  }\r\n                });\r\n                result1.tv_name = tvResult.name;\r\n                result1.tv_poster_path = tvResult.poster_path;\r\n                result1.tv_id = tvResult.id;\r\n                return result1;\r\n              })\r\n            })\r\n            .catch(error => {\r\n              if (error.message === 'Request failed with status code 404') {\r\n                return http.get(`tv/${tv_metadata.id}/season/${lastEpisodeSeen.episode_season+1}/episode/${1}`, config.MOVIE_DB_PAYLOAD)\r\n                .then(result2 => {\r\n                  return http.get(`tv/${tv_metadata.id}`, config.MOVIE_DB_PAYLOAD)\r\n                  .then(tvResult => {\r\n                    tvResult.seasons.map(season => {\r\n                      if (season.season_number === lastEpisodeSeen.episode_season) {\r\n                        result2.season_id = season.id;\r\n                        result2.season_name = season.name;\r\n                      }\r\n                    });\r\n                    result2.tv_name = tvResult.name;\r\n                    result2.tv_poster_path = tvResult.poster_path;\r\n                    result2.tv_id = tvResult.id;\r\n                    return result2;\r\n                  })\r\n                })\r\n                .catch(error => {\r\n                  if (error.message === 'Request failed with status code 404') {\r\n                    return {error: true}\r\n                  } else {\r\n                    notification({\r\n                      type: 'error',\r\n                      icon: 'exclamation-circle',\r\n                      title: 'Cannot get tv series data!',\r\n                    })\r\n                  }\r\n                });\r\n              } else {\r\n                notification({\r\n                  type: 'error',\r\n                  icon: 'exclamation-circle',\r\n                  title: 'Cannot get tv series data!',\r\n                })\r\n              }\r\n            });\r\n        })\r\n      );\r\n      resolve(results);\r\n      dispatch(setCurrentlyWatching(results));\r\n    })\r\n  })\r\n}\r\n","import {\r\n  MOVIES_GET_DETAILS_SUCCESS,\r\n  MOVIES_GET_CAST_SUCCESS,\r\n  MOVIES_SEARCH_SUCCESS,\r\n  MOVIES_SEARCH_CLEAR,\r\n  MOVIES_DETAILS_CLEAR,\r\n} from './actions-types';\r\nimport http from './../lib/axios-wrapper';\r\nimport {notification} from 'components/LayoutComponents';\r\nimport firebase from 'firebase';\r\nimport lockr from 'lockr';\r\nimport _ from 'lodash';\r\nimport config from '../lib/config';\r\n\r\nexport function getMovieDetailsSuccess(data) {\r\n  return {type: MOVIES_GET_DETAILS_SUCCESS, data};\r\n}\r\n\r\nexport function getMovieCastSuccess(data) {\r\n  return {type: MOVIES_GET_CAST_SUCCESS, data};\r\n}\r\n\r\nexport function searchMovieSuccess(data) {\r\n  return {type: MOVIES_SEARCH_SUCCESS, data};\r\n}\r\n\r\nexport function moviesSearchClear() {\r\n  return {type: MOVIES_SEARCH_CLEAR};\r\n}\r\n\r\nexport function movieDetailsClear() {\r\n  return {type: MOVIES_DETAILS_CLEAR};\r\n}\r\n\r\nexport const getMovieDetails = (movie_id) => (dispatch) => {\r\n\r\n  return http.get(`movie/${movie_id}`, config.MOVIE_DB_PAYLOAD)\r\n    .then(result => {\r\n      firebase.database().ref(`users/${lockr.get('Authorization')}/moviesTags/${movie_id}`).on('value', tagsSnapshot => {\r\n        firebase.database().ref(`users/${lockr.get('Authorization')}/moviesWatched/${movie_id}`).on('value', watchedSnapshot => {\r\n          firebase.database().ref(`users/${lockr.get('Authorization')}/moviesWishlist/${movie_id}`).on('value', wishlistSnapshot => {\r\n            firebase.database().ref(`users/${lockr.get('Authorization')}/moviesFavorite/${movie_id}`).on('value', favoriteSnapshot => {\r\n              let tags = [];\r\n              let tagsSnap = tagsSnapshot.val();\r\n              let watchedSnap = watchedSnapshot.val();\r\n              let wishlistSnap = wishlistSnapshot.val();\r\n              let favoriteSnap = favoriteSnapshot.val();\r\n              if (tagsSnap !== null) {\r\n                _.keys(tagsSnap).map(item => {\r\n                  tagsSnap[item].uid = item;\r\n                  tags.push(tagsSnap[item]);\r\n                });\r\n              }\r\n\r\n              const userData = {\r\n                tags: tags,\r\n                watched: watchedSnap,\r\n                wishlist: wishlistSnap,\r\n                favorite: favoriteSnap,\r\n              }\r\n\r\n              const movieData = Object.assign({}, {userData}, result);\r\n              dispatch(getMovieDetailsSuccess(movieData));\r\n            });\r\n          });\r\n        });\r\n      });\r\n    })\r\n    .catch(error => {\r\n      notification({\r\n        type: 'error',\r\n        icon: 'exclamation-circle',\r\n        title: 'Cannot get movie data!',\r\n      })\r\n    });\r\n}\r\n\r\nexport const getMovieCast = (movie_id) => (dispatch) => {\r\n\r\n  return http.get(`movie/${movie_id}/credits`, config.MOVIE_DB_PAYLOAD)\r\n    .then(result => {\r\n      dispatch(getMovieCastSuccess(result));\r\n    })\r\n    .catch(error => {\r\n      notification({\r\n        type: 'error',\r\n        icon: 'exclamation-circle',\r\n        title: 'Cannot get movie data!',\r\n      })\r\n    });\r\n}\r\n\r\nexport const searchMovies = (movieTitle) => (dispatch) => {\r\n  const payload = {\r\n    api_key: config.THE_MOVIE_DB_TOKEN,\r\n    language: 'en-US',\r\n    query: movieTitle\r\n  }\r\n\r\n  return http.get(`search/movie`, payload)\r\n    .then(result => {\r\n      dispatch(searchMovieSuccess(result.results));\r\n    })\r\n    .catch(error => {\r\n      notification({\r\n        type: 'error',\r\n        icon: 'exclamation-circle',\r\n        title: 'Cannot get movie data!',\r\n      })\r\n    });\r\n}","import {\r\n  TVSERIES_GET_DETAILS_SUCCESS,\r\n  TVSERIES_GET_CAST_SUCCESS,\r\n  TVSERIES_DETAILS_CLEAR,\r\n  TVSERIES_SEARCH_SUCCESS\r\n} from './actions-types';\r\nimport http from './../lib/axios-wrapper';\r\nimport {notification} from 'components/LayoutComponents';\r\nimport firebase from 'firebase';\r\nimport lockr from 'lockr';\r\nimport _ from 'lodash';\r\nimport config from '../lib/config';\r\n\r\nexport function tvseriesDetailsClear() {\r\n  return {type: TVSERIES_DETAILS_CLEAR};\r\n}\r\n\r\nexport const getTVSeriesSeasonDetails = (tv_id, season_number) => {\r\n  return new Promise((resolve, reject) => {\r\n\r\n    http.get(`tv/${tv_id}/season/${season_number}`, config.MOVIE_DB_PAYLOAD)\r\n      .then(result => {\r\n        resolve(result);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      })\r\n  })\r\n}\r\n\r\nexport const getTVSeriesDetails = (tv_id) => (dispatch) => {\r\n\r\n  return http.get(`tv/${tv_id}`, config.MOVIE_DB_PAYLOAD)\r\n    .then(result => {\r\n      firebase.database().ref(`users/${lockr.get('Authorization')}/tvSeriesTags/${tv_id}`).on('value', tagsSnapshot => {\r\n        firebase.database().ref(`users/${lockr.get('Authorization')}/tvSeriesWatched/${tv_id}`).on('value', watchedSnapshot => {\r\n          firebase.database().ref(`users/${lockr.get('Authorization')}/tvSeriesWishlist/${tv_id}`).on('value', wishlistSnapshot => {\r\n            getTVSeriesPercentage(tv_id, lockr.get('Authorization'), result.number_of_episodes).then(percentage => {\r\n              let tags = [];\r\n              let tagsSnap = tagsSnapshot.val();\r\n              let watchedSnap = watchedSnapshot.val();\r\n              let wishlistSnap = wishlistSnapshot.val();\r\n              if (tagsSnap != null) {\r\n                _.keys(tagsSnap).map(item => {\r\n                  tagsSnap[item].uid = item;\r\n                  tags.push(tagsSnap[item]);\r\n                });\r\n              }\r\n\r\n              Promise.all(result.seasons.map(season => getTVSeriesSeasonDetails(tv_id, season.season_number)))\r\n              .then(seasonsResult => {\r\n                result.seasons = seasonsResult;\r\n\r\n                const userData = {\r\n                  tags: tags,\r\n                  watched: watchedSnap || [],\r\n                  wishlist: wishlistSnap,\r\n                  totalWatched: percentage,\r\n                }\r\n    \r\n                const tvSeriesData = Object.assign({}, {userData}, result);\r\n                dispatch({type: TVSERIES_GET_DETAILS_SUCCESS, data: tvSeriesData});\r\n              })\r\n            })\r\n          });\r\n        });\r\n      });\r\n    })\r\n    .catch(error => {\r\n      notification({\r\n        type: 'error',\r\n        icon: 'exclamation-circle',\r\n        title: 'Cannot get tv series data!',\r\n      })\r\n    });\r\n}\r\n\r\nexport const getTVSeriesCast = (tv_id) => (dispatch) => {\r\n\r\n  return http.get(`tv/${tv_id}/credits`, config.MOVIE_DB_PAYLOAD)\r\n    .then(result => {\r\n      dispatch({type: TVSERIES_GET_CAST_SUCCESS, data: result});\r\n    })\r\n    .catch(error => {\r\n      notification({\r\n        type: 'error',\r\n        icon: 'exclamation-circle',\r\n        title: 'Cannot get tv series data!',\r\n      })\r\n    });\r\n}\r\n\r\nexport const searchTVSeries = (tvseriesTitle) => (dispatch) => {\r\n  const payload = {\r\n    api_key: config.THE_MOVIE_DB_TOKEN,\r\n    language: 'en-US',\r\n    query: tvseriesTitle\r\n  }\r\n\r\n  return http.get(`search/tv`, payload)\r\n    .then(result => {\r\n      dispatch({type: TVSERIES_SEARCH_SUCCESS, data: result.results});\r\n    })\r\n    .catch(error => {\r\n      notification({\r\n        type: 'error',\r\n        icon: 'exclamation-circle',\r\n        title: 'Cannot get TV Series data!',\r\n      })\r\n    });\r\n}\r\n\r\nexport const getTVSeriesPercentage = (tv_id, user_id, number_of_episodes = null) => {\r\n  return new Promise((resolve, reject) => {\r\n    let seen = 0;\r\n\r\n    if (number_of_episodes === null) {\r\n      const payload = {\r\n        api_key: config.THE_MOVIE_DB_TOKEN,\r\n        language: 'en-US',\r\n      }\r\n    \r\n      return http.get(`tv/${tv_id}`, payload)\r\n        .then(result => {\r\n          let numberOfEpisodes = result.number_of_episodes;\r\n    \r\n          firebase.database().ref(`users/${lockr.get('Authorization')}/tvSeriesWatched/${tv_id}`).once('value', snapshot => {\r\n            let tv = snapshot.val();\r\n            Object.keys(tv.content).map(item => {\r\n              if (tv.content[item].season_number !== 0) {\r\n                seen += Object.keys(tv.content && tv.content[item] && tv.content[item].content).length;\r\n              }\r\n            })\r\n  \r\n            resolve((seen/numberOfEpisodes * 100).toFixed(2));\r\n          });\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n          notification({\r\n            type: 'error',\r\n            icon: 'exclamation-circle',\r\n            title: 'Cannot get TV Series data!',\r\n          })\r\n        });\r\n    } else {\r\n      firebase.database().ref(`users/${lockr.get('Authorization')}/tvSeriesWatched/${tv_id}`).once('value', snapshot => {\r\n        let tv = snapshot.val();\r\n        if (tv !== null) {\r\n          Object.keys(tv.content).map(item => {\r\n            if (tv.content[item].season_number !== 0) {\r\n              if (tv.content && tv.content[item] && tv.content[item].content) {\r\n                seen += Object.keys(tv.content[item].content).length;\r\n              }\r\n            }\r\n          })\r\n  \r\n          resolve(Math.floor(seen/number_of_episodes * 100));\r\n        } else {\r\n          resolve(0);\r\n        }\r\n      });\r\n    }\r\n  })\r\n}","import {\r\n  APP_MEDIA_SEARCH_SUCCESS,\r\n  APP_MEDIA_SEARCH_CLEAR,\r\n} from './actions-types';\r\nimport http from './../lib/axios-wrapper';\r\nimport {notification} from 'components/LayoutComponents';\r\nimport _ from 'lodash';\r\nimport config from '../lib/config';\r\n\r\nexport function searchMediaSuccess(data) {\r\n  return {type: APP_MEDIA_SEARCH_SUCCESS, data};\r\n}\r\n\r\nexport function mediaSearchClear() {\r\n  return {type: APP_MEDIA_SEARCH_CLEAR};\r\n}\r\n\r\nexport const searchMedia = (title) => (dispatch) => {\r\n  const payload = {\r\n    api_key: config.THE_MOVIE_DB_TOKEN,\r\n    language: 'en-US',\r\n    query: title\r\n  }\r\n\r\n  return http.get(`search/multi`, payload)\r\n    .then(result => {\r\n      result = result.results.filter((item) => item.media_type === 'movie' || item.media_type === 'tv');\r\n      dispatch(searchMediaSuccess(result));\r\n    })\r\n    .catch(error => {\r\n      notification({\r\n        type: 'error',\r\n        icon: 'exclamation-circle',\r\n        title: 'Cannot get data!',\r\n      })\r\n    });\r\n}","import * as user from './user';\r\nimport * as movies from './movies';\r\nimport * as tvseries from './tvseries';\r\nimport * as app from './app';\r\n\r\nexport const userActions = user;\r\nexport const moviesActions = movies;\r\nexport const tvseriesActions = tvseries;\r\nexport const appActions = app;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { userActions } from 'actions';\r\n\r\nclass Avatar extends React.Component{\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n      <div>\r\n\t      <div className=\"binger-avatar\" id=\"navbardrop\" data-toggle=\"dropdown\">\r\n          <img src={process.env.PUBLIC_URL + \"/images/cartman.png\"} alt=\"placeholder\"/>\r\n        </div>\r\n\t      <div className=\"dropdown-menu dropdown-menu-right\">\r\n\t      \t<div className=\"dropdown-header\">Email: {this.props.user && this.props.user.data ? this.props.user.data.email : null}</div>\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"link-button dropdown-item\"\r\n\t\t\t\t\t\tonClick={this.props.logOut}>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<i className={`fas fa-sign-out-alt`}></i>\r\n\t\t\t\t\t\t</span>{' '}Sign Out\r\n\t\t\t\t\t</button>\r\n\r\n\t      </div>\r\n      </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tlogOut: userActions.logOut,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Avatar);\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'react-router-redux';\r\nimport { appActions } from 'actions';\r\nimport { Input } from 'components/LayoutComponents';\r\n\r\nclass SearchBar extends React.Component{\r\n\r\n\tstate = {\r\n\t\tsearchData: []\r\n\t}\r\n\r\n\tsearch = (name, value) => {\r\n\t\tif (value.length >= 3) {\r\n\t\t\tthis.props.searchMedia(value);\r\n\t\t}\r\n\t}\r\n\r\n\tgoToMediaPage = (media) => {\r\n\t\tif (media.media_type === 'movie') {\r\n\t\t\tthis.props.goToMoviePage(media.id);\r\n\t\t} else if (media.media_type === 'tv') {\r\n\t\t\tthis.props.goToTVSeriesPage(media.id);\r\n\t\t}\r\n\t\tthis.props.mediaSearchClear();\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst {searchData} = this.props.app;\r\n\r\n\t\treturn (\r\n      <div className=\"binger-search col-lg-3\">\r\n\t\t\t\t<Input \r\n\t\t\t\t\tonInputChange={this.search}\r\n\t\t\t\t\tplaceholder=\"tudor\"\r\n\t\t\t\t\tname=\"searchBar\"\r\n\t\t\t\t\ticon=\"search\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{ searchData.length > 0 && \r\n\t\t\t\t\t<ul className=\"binger-search-list\">\r\n\t\t\t\t\t\t{ searchData.map(item => (\r\n\t\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\t\tkey={item.id} \r\n\t\t\t\t\t\t\t\t\tonClick={() => this.goToMediaPage(item)}\r\n\t\t\t\t\t\t\t\t\tclassName=\"binger-search-list-item\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${item.poster_path}`} alt=\"\" height=\"100\" width=\"67\"/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-10\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h3><strong>{item.original_title ? item.original_title : item.original_name}</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className={`binger-search-list-item-type ${item.media_type === 'movie'? `binger-blue`: `binger-lime`}`}>{item.media_type}</p>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t}\r\n      </div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsearchMedia: appActions.searchMedia,\r\n\tmediaSearchClear: appActions.mediaSearchClear,\r\n\tgoToMoviePage: (id) => dispatch => dispatch(push(`/movie/${id}`)),\r\n\tgoToTVSeriesPage: (id) => dispatch => dispatch(push(`/tv/${id}`)),\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n\t\tapp: state.app,\r\n\t\tuser: state.user,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\r\n","import React from 'react';\r\nimport Avatar from './Avatar';\r\nimport SearchBar from './SearchBar';\r\n\r\nexport default class Navbar extends React.Component{\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light binger-navbar\">\r\n\t\t\t  <a className=\"navbar-brand\" href=\"/main\">Binger</a>\r\n\t\t\t  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t    <span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t  </button>\r\n\r\n\t\t\t  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t    <ul className=\"navbar-nav mr-auto\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t        <a className=\"nav-link disabled\">Wishlist</a>\r\n\t\t\t      </li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t        <a className=\"nav-link disabled\">Favorites</a>\r\n\t\t\t      </li>\r\n\t\t\t      <li className=\"nav-item\">\r\n\t\t\t        <a className=\"nav-link disabled\">Movies</a>\r\n\t\t\t      </li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t        <a className=\"nav-link disabled\">TV Series</a>\r\n\t\t\t      </li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t        <a className=\"nav-link\" href=\"/components\">Components API</a>\r\n\t\t\t      </li>\r\n\t\t\t    </ul>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<SearchBar />\r\n\t\t\t\t\t<Avatar />\r\n\r\n\t\t\t  </div>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route} from 'react-router-dom';\r\nimport Navbar from 'components/BingerComponents/Navbar';\r\nimport lockr from 'lockr';\r\nimport config from 'lib/config';\r\nlockr.prefix = config.LOCKR_PREFIX;\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest}) => (\r\n\t<Route\r\n\t\t{...rest}\r\n\r\n\t\trender = {props =>\r\n\t\t\tlockr.get('Authorization') ? (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t) : (\r\n\t\t\t\t<Redirect to={{\r\n\t\t\t\t\tpathname: '/login',\r\n\t\t\t\t\tstate: {from: props.location}\r\n\t\t\t\t}} />\r\n\t\t\t)\r\n\t\t}\r\n\t/>\r\n);\r\n","import React from 'react';\r\nimport { Redirect, Route} from 'react-router-dom';\r\nimport lockr from 'lockr';\r\nimport config from 'lib/config';\r\nlockr.prefix = config.LOCKR_PREFIX;\r\n\r\nexport const PublicRoute = ({ component: Component, ...rest}) => (\r\n\t<Route\r\n\t\t{...rest}\r\n\r\n\t\trender = {props =>\r\n\t\t\t!lockr.get('Authorization') ?\r\n\t\t\t(<Component {...props} />) :\r\n\t\t\t(<Redirect to={{\r\n\t\t\t\tpathname: '/main',\r\n\t\t\t\tstate: {from: props.location}\r\n\t\t\t}} />)\r\n\t\t}\r\n\t/>\r\n);\r\n","import React from 'react';\r\nimport { push } from 'react-router-redux'\r\nimport { connect } from 'react-redux'\r\nimport { userActions } from 'actions';\r\nimport { Input, Button, Form} from 'components/LayoutComponents';\r\n\r\nclass LoginPage extends React.Component{\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.form.validateForm()\r\n\t\t.then(payload => {\r\n\t    this.props.login(payload);\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"main-page\">\r\n\t\t\t\t<div className=\"main-logo\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + \"/images/mediatec-inverse.png\"}\r\n\t          alt=\"Binger Logo\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"main-card card col-xl-5 col-lg-6 col-md-8\">\r\n\t\t\t\t\t<div className=\"main-card-title card-title\">\r\n\t\t\t\t\t\t<h3>Please Log In</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  <div className=\"main-card-body card-body\">\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\t\t\tref={c => {this.form = c}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\ticon=\"user\"\r\n\t\t\t\t\t\t\t\ttype=\"text\" />\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\ticon=\"lock\"\r\n\t\t\t\t\t\t\t\ttype=\"password\" />\r\n\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"binger-flex-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttext=\"Sign in\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"m-2\">\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"binger-btn-link\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.goToRegister}>\r\n\t\t\t\t\t\t\t\t\t\t\tRegister\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-white\">\r\n\t\t\t              \t{' if you do not have an account!'}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t          </div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  login: userActions.login,\r\n\tgoToRegister: () => dispatch => dispatch(push('/register'))\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage);\r\n","import React from 'react';\r\nimport _ from  'lodash';\r\nimport { push } from 'react-router-redux'\r\nimport { connect } from 'react-redux'\r\nimport { userActions } from 'actions';\r\nimport { Input, Button, Form} from 'components/LayoutComponents';\r\n\r\nclass RegisterPage extends React.Component{\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.form.validateForm()\r\n\t\t.then(values => {\r\n\t\t\tconst payload = _.pick(values, ['email', 'password', 'name']);\r\n\t    this.props.register(payload);\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error);\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"main-page\">\r\n\t\t\t\t<div className=\"main-logo\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={process.env.PUBLIC_URL + \"/images/mediatec-inverse.png\"}\r\n\t          alt=\"Binger Logo\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"main-card card col-xl-5 col-lg-6 col-md-8\">\r\n\t\t\t\t\t<div className=\"main-card-title card-title\">\r\n\t\t\t\t\t\t<h3>Please Register</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t  <div className=\"main-card-body card-body\">\r\n\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\t\t\tref={c => {this.form = c}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\t\ticon=\"user\"\r\n\t\t\t\t\t\t\t\ttype=\"text\" />\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\ticon=\"envelope\"\r\n\t\t\t\t\t\t\t\ttype=\"email\" />\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\ticon=\"lock\"\r\n\t\t\t\t\t\t\t\ttype=\"password\" />\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\ticon=\"lock\"\r\n\t\t\t\t\t\t\t\ttype=\"password\" />\r\n\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<div className=\"binger-flex-center\">\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttext=\"Register\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"/>\r\n\t\t\t\t\t\t\t\t\t<div className=\"m-2\">\r\n\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"binger-btn-link\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.goToLogin}>\r\n\t\t\t\t\t\t\t\t\t\t\tLog in\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-white\">\r\n\t\t\t              \t{' if you already have an account!'}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t          </div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  register: userActions.register,\r\n\tgoToLogin: () => dispatch => dispatch(push('/login'))\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterPage);\r\n","import React from 'react';\r\nimport { push } from 'react-router-redux'\r\nimport { connect } from 'react-redux'\r\n\r\nclass ComponentsPage extends React.Component{\r\n\r\n  render() {\r\n    return (\r\n\t\t\t<div className=\"container\">\r\n\r\n\t      {/* <div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t\t<span className=\"binger-text-strong binger-flex-center\">\r\n\t\t\t\t\t\t\tBinger Components API\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t      </div> */}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <span className=\"binger-text-strong\">Button API</span>\r\n\r\n            <table className=\"table table-striped table-dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" width=\"5%\">#</th>\r\n                  <th scope=\"col\" width=\"22%\">Name</th>\r\n                  <th scope=\"col\" width=\"15%\">Type</th>\r\n                  <th scope=\"col\" width=\"10%\">Default</th>\r\n                  <th scope=\"col\">Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">1</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">expandTextOnHover</span></td>\r\n                  <td className=\"binger-text-code\">bool</td>\r\n                  <td className=\"binger-text-code\">false</td>\r\n                  <td>Flag for hiding the text, rendering it only on mouse hover.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">2</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">icon</span></td>\r\n                  <td className=\"binger-text-code\">string</td>\r\n                  <td></td>\r\n                  <td>Icon of the button (The icon pack is font-awesome)</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">3</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">onButtonClick</span></td>\r\n                  <td className=\"binger-text-code\">function</td>\r\n                  <td className=\"binger-text-code\">{`() => {}`}</td>\r\n                  <td>Handler function for button click.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">4</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">shape</span></td>\r\n                  <td className=\"binger-text-code\">'normal' | 'circle'</td>\r\n                  <td className=\"binger-text-code\">'normal'</td>\r\n                  <td>Button shape. 'normal' is used for the default button theme set in CSS.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">5</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">show</span></td>\r\n                  <td className=\"binger-text-code\">bool</td>\r\n                  <td className=\"binger-text-code\">true</td>\r\n                  <td>Flag for rendering the button.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">6</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">text</span></td>\r\n                  <td className=\"binger-text-code\">string</td>\r\n                  <td></td>\r\n                  <td>Text of the button</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">7</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">type</span></td>\r\n                  <td className=\"binger-text-code\">'submit' | 'button'</td>\r\n                  <td className=\"binger-text-code\">'button'</td>\r\n                  <td>Button type. Use 'submit' if it is a form submit button and 'button' for everything else</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <span className=\"binger-text-strong\">Input API</span>\r\n\r\n            <table className=\"table table-striped table-dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" width=\"5%\">#</th>\r\n                  <th scope=\"col\" width=\"22%\">Name</th>\r\n                  <th scope=\"col\" width=\"15%\">Type</th>\r\n                  <th scope=\"col\" width=\"10%\">Default</th>\r\n                  <th scope=\"col\">Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\">1</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">label</span></td>\r\n                  <td className=\"binger-text-code\">string</td>\r\n                  <td></td>\r\n                  <td>Label above the input</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">2</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">icon</span></td>\r\n                  <td className=\"binger-text-code\">string</td>\r\n                  <td></td>\r\n                  <td>Icon inside the input.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">3</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">name</span></td>\r\n                  <td className=\"binger-text-code\">string</td>\r\n                  <td className=\"binger-text-code\"></td>\r\n                  <td>Unique identifier (Required if part of a form).</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">4</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">value</span></td>\r\n                  <td className=\"binger-text-code\">string</td>\r\n                  <td className=\"binger-text-code\"></td>\r\n                  <td>The value of the input (Required if input is not part of a form, to be able to retrieve the value of the input.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">5</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">isValid</span></td>\r\n                  <td className=\"binger-text-code\">bool</td>\r\n                  <td className=\"binger-text-code\">true</td>\r\n                  <td>Flag for controlling the display of the input border if not valid.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">6</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">type</span></td>\r\n                  <td className=\"binger-text-code\">'text'</td>\r\n                  <td className=\"binger-text-code\">'text'</td>\r\n                  <td>Type of the input</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">7</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">onInputChange</span></td>\r\n                  <td className=\"binger-text-code\">function</td>\r\n                  <td className=\"binger-text-code\">{`(name, value) => {}`}</td>\r\n                  <td>Handler for the input change event</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <span className=\"binger-text-strong\">Checkbox API</span>\r\n\r\n            <table className=\"table table-striped table-dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" width=\"5%\">#</th>\r\n                  <th scope=\"col\" width=\"22%\">Name</th>\r\n                  <th scope=\"col\" width=\"15%\">Type</th>\r\n                  <th scope=\"col\" width=\"10%\">Default</th>\r\n                  <th scope=\"col\">Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">3</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">name</span></td>\r\n                  <td className=\"binger-text-code\">string</td>\r\n                  <td className=\"binger-text-code\"></td>\r\n                  <td>Unique identifier.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">4</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">checked</span></td>\r\n                  <td className=\"binger-text-code\">bool</td>\r\n                  <td className=\"binger-text-code\">false</td>\r\n                  <td>Flag for controlling if the checkbox is checked or not.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">5</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">color</span></td>\r\n                  <td className=\"binger-text-code\">'secondary' | 'green'</td>\r\n                  <td className=\"binger-text-code\"></td>\r\n                  <td>Name of the color to be painted on the checkbox.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">6</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">onCheckboxChange</span></td>\r\n                  <td className=\"binger-text-code\">function</td>\r\n                  <td className=\"binger-text-code\">{`(name, checked) => {}`}</td>\r\n                  <td>Handler function when the 'checked' value is changed.</td>\r\n                </tr>\r\n\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <span className=\"binger-text-strong\">Progress Bar API</span>\r\n\r\n            <table className=\"table table-striped table-dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" width=\"5%\">#</th>\r\n                  <th scope=\"col\" width=\"22%\">Name</th>\r\n                  <th scope=\"col\" width=\"25%\">Type</th>\r\n                  <th scope=\"col\" width=\"10%\">Default</th>\r\n                  <th scope=\"col\">Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">3</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">value</span></td>\r\n                  <td className=\"binger-text-code\">integer</td>\r\n                  <td className=\"binger-text-code\">0</td>\r\n                  <td>Percentage to be shown on the bar.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">4</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">color</span></td>\r\n                  <td className=\"binger-text-code\">'green' | 'red' | 'blue' | 'orange' | 'purple' | 'lime'</td>\r\n                  <td className=\"binger-text-code\">'green'</td>\r\n                  <td>Color of the progress bar.</td>\r\n                </tr>\r\n\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <span className=\"binger-text-strong\">Progress Circle API</span>\r\n\r\n            <table className=\"table table-striped table-dark\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" width=\"5%\">#</th>\r\n                  <th scope=\"col\" width=\"22%\">Name</th>\r\n                  <th scope=\"col\" width=\"25%\">Type</th>\r\n                  <th scope=\"col\" width=\"10%\">Default</th>\r\n                  <th scope=\"col\">Description</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">3</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">percentage</span></td>\r\n                  <td className=\"binger-text-code\">integer</td>\r\n                  <td className=\"binger-text-code\">100</td>\r\n                  <td>Percentage to be shown on the bar.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">4</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">color</span></td>\r\n                  <td className=\"binger-text-code\">'green' | 'red' | 'blue' | 'orange' | 'purple' | 'lime'</td>\r\n                  <td className=\"binger-text-code\">'green'</td>\r\n                  <td>Color of the progress bar.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">4</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">size</span></td>\r\n                  <td className=\"binger-text-code\">integer</td>\r\n                  <td className=\"binger-text-code\">90</td>\r\n                  <td>Size of the circle.</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th scope=\"row\">4</th>\r\n                  <td className=\"binger-text-code\"><span className=\"binger-yelow-background\">strokeWidth</span></td>\r\n                  <td className=\"binger-text-code\">integer</td>\r\n                  <td className=\"binger-text-code\">5</td>\r\n                  <td>Width of the colored circle.</td>\r\n                </tr>\r\n\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n\t\t\t</div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tgoToRegister: () => dispatch => dispatch(push('/register'))\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ComponentsPage);\r\n","import React from 'react'\r\nimport { push } from 'react-router-redux'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'components/LayoutComponents';\r\nimport { userActions } from 'actions'\r\n\r\nclass CurrentlyWatching extends React.Component {\r\n\r\n  state = {\r\n    showButton: {},\r\n    fadeAnimation: false,\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.user.data && this.props.user.data.uid && !prevProps.user.data.uid) {\r\n      this.props.getCurrentlyWatching(this.props.user.data.uid).then(() => {\r\n        const fadeAnimation = this.props.user.currentlyWatching.map(item => false);\r\n        this.setState({fadeAnimation});\r\n      });\r\n    }\r\n  }\r\n\r\n  handleEpisodeWatch = (tv, index) => {\r\n    const payload = {\r\n      user_id: this.props.user.data.uid,\r\n      tv_poster_path: tv.tv_poster_path,\r\n      tv_name: tv.tv_name,\r\n      tv_id: tv.tv_id,\r\n      season_id: tv.season_id,\r\n      season_number: tv.season_number,\r\n      season_name: tv.season_name,\r\n      episode_id: tv.id,\r\n      episode_season: tv.season_number,\r\n      episode_number: tv.episode_number,\r\n      episode_name: tv.name,\r\n    }\r\n    let {fadeAnimation} = this.state;\r\n    fadeAnimation[index] = true;\r\n    this.setState({fadeAnimation}, () => {\r\n      setTimeout(() => {\r\n        this.props.watchEpisode(payload)\r\n        fadeAnimation[index] = false;\r\n        this.setState({fadeAnimation})\r\n      }, 700);\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"card binger-wishlist-card\">\r\n        <div className=\"card-body\">\r\n          <span className=\"binger-text-strong binger-wishlist-title\">\r\n            Currently watching\r\n          </span>\r\n\r\n          <div className=\"row binger-flex-baseline\">\r\n            {this.props.user && this.props.user.currentlyWatching.map((tv, index) => (\r\n              <div className={`col-lg-3 ${this.state.fadeAnimation[index] ? 'fadeOut' : 'fadeIn'}`} key={index}>\r\n                <div className=\"binger-episode-hover-container\">\r\n                  <img src={`https://image.tmdb.org/t/p/w227_and_h127_bestv2${tv.still_path}`} alt=\"Avatar\" className=\"binger-episode-hover-image\" />\r\n                  <div className=\"binger-episode-hover-overlay\">\r\n                  <Button \r\n                    className=\"mr-4 binger-btn-blue\"\r\n                    style={{position: 'absolute', top: '35%', left: '30%'}}\r\n                    onButtonClick={() => this.handleEpisodeWatch(tv, index)}\r\n                    text=\"Watch\" />\r\n                  </div>\r\n                </div>\r\n                <span className=\"binger-tv-name\">{tv.tv_name}</span>\r\n                <span className=\"binger-episode-name\">{`(S${tv.season_number.toString().padStart(2, '0')} E${tv.episode_number.toString().padStart(2, '0')}) ${tv.name}`}</span>\r\n              </div>\r\n            ))}\r\n            <div className=\"col-lg-3 binger-flex-center\" style={{flexDirection: 'column', alignSelf: 'center'}}>\r\n              <Button \r\n                show={this.props.user.tvSeriesWishlist.length > 5}\r\n                //show={this.state.showButton[item.id] !== undefined ? this.state.showButton[item.id] : false}\r\n                //onButtonClick={() => this.props.removeTVSeriesFromWishlist(item.id, this.props.user.data.uid)}\r\n                //ref={`delete-${item.id}`}\r\n                text=\"View All\"\r\n                className=\"mr-4 binger-btn-blue\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentlyWatching: userActions.getCurrentlyWatching,\r\n  watchEpisode: userActions.watchEpisode,\r\n  // getMoviesWishlist: userActions.getMoviesWishlist,\r\n  // removeMovieFromWishlist: userActions.removeMovieFromWishlist,\r\n  // removeTVSeriesFromWishlist: userActions.removeTVSeriesFromWishlist,\r\n  // goToMoviePage: (id) => dispatch => dispatch(push(`/movie/${id}`)),\r\n\t// goToTVSeriesPage: (id) => dispatch => dispatch(push(`/tv/${id}`)),\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    tvseries: state.tvseries,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentlyWatching);\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { push } from 'react-router-redux'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'components/LayoutComponents';\r\nimport { userActions } from 'actions'\r\n\r\nclass WatchedMovies extends React.Component {\r\n\r\n  state = {\r\n    showButton: {},\r\n    fadeAnimation: false,\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.user.data && this.props.user.data.uid && !prevProps.user.data.uid) {\r\n      this.props.getCurrentlyWatching(this.props.user.data.uid).then(() => {\r\n        const fadeAnimation = this.props.user.currentlyWatching.map(item => false);\r\n        this.setState({fadeAnimation});\r\n      });\r\n    }\r\n  }\r\n\r\n  handleEpisodeWatch = (tv, index) => {\r\n    const payload = {\r\n      user_id: this.props.user.data.uid,\r\n      tv_poster_path: tv.tv_poster_path,\r\n      tv_name: tv.tv_name,\r\n      tv_id: tv.tv_id,\r\n      season_id: tv.season_id,\r\n      season_number: tv.season_number,\r\n      season_name: tv.season_name,\r\n      episode_id: tv.id,\r\n      episode_season: tv.season_number,\r\n      episode_number: tv.episode_number,\r\n      episode_name: tv.name,\r\n    }\r\n    let {fadeAnimation} = this.state;\r\n    fadeAnimation[index] = true;\r\n    this.setState({fadeAnimation}, () => {\r\n      setTimeout(() => {\r\n        this.props.watchEpisode(payload)\r\n        fadeAnimation[index] = false;\r\n        this.setState({fadeAnimation})\r\n      }, 700);\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"card binger-wishlist-card\">\r\n        <div className=\"card-body\">\r\n          <span className=\"binger-text-strong binger-wishlist-title\">\r\n            Currently watching\r\n          </span>\r\n\r\n          <div className=\"row binger-flex-baseline\">\r\n            {this.props.user && this.props.user.currentlyWatching.map((tv, index) => (\r\n              <div className={`col-lg-4 ${this.state.fadeAnimation[index] ? 'fadeOut' : 'fadeIn'}`} key={index}>\r\n                <div className=\"binger-episode-hover-container\">\r\n                  <img src={`https://image.tmdb.org/t/p/w227_and_h127_bestv2${tv.still_path}`} alt=\"Avatar\" className=\"binger-episode-hover-image\" />\r\n                  <div className=\"binger-episode-hover-overlay\">\r\n                  <Button \r\n                    className=\"mr-4 binger-btn-blue\"\r\n                    style={{position: 'absolute', top: '35%', left: '30%'}}\r\n                    onButtonClick={() => this.handleEpisodeWatch(tv, index)}\r\n                    text=\"Watch\" />\r\n                  </div>\r\n                </div>\r\n                <span className=\"binger-tv-name\">{tv.tv_name}</span>\r\n                <span className=\"binger-episode-name\">{`(S${tv.season_number.toString().padStart(2, '0')} E${tv.episode_number.toString().padStart(2, '0')}) ${tv.name}`}</span>\r\n              </div>\r\n            ))\r\n            \r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentlyWatching: userActions.getCurrentlyWatching,\r\n  watchEpisode: userActions.watchEpisode,\r\n  // getMoviesWishlist: userActions.getMoviesWishlist,\r\n  // removeMovieFromWishlist: userActions.removeMovieFromWishlist,\r\n  // removeTVSeriesFromWishlist: userActions.removeTVSeriesFromWishlist,\r\n  // goToMoviePage: (id) => dispatch => dispatch(push(`/movie/${id}`)),\r\n\t// goToTVSeriesPage: (id) => dispatch => dispatch(push(`/tv/${id}`)),\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    tvseries: state.tvseries,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchedMovies);\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { push } from 'react-router-redux'\r\nimport { connect } from 'react-redux'\r\nimport { Tabs, Tab, Button } from 'components/LayoutComponents';\r\nimport { userActions } from 'actions'\r\n\r\nclass Wishlist extends React.Component {\r\n\r\n  state = {\r\n    showButton: {}\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.user.data && this.props.user.data.uid && !prevProps.user.data.uid) {\r\n      this.props.getTVSeriesWishlist(this.props.user.data.uid);\r\n      this.props.getMoviesWishlist(this.props.user.data.uid);\r\n    }\r\n  }\r\n\r\n  showDeleteButton = (id) => {\r\n    var {showButton} = this.state;\r\n    showButton[id] = true;\r\n    this.setState({showButton});\r\n  }\r\n\r\n  hideDeleteButton = (id) => {\r\n    var {showButton} = this.state;\r\n    delete showButton[id];\r\n    this.setState({showButton});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card binger-wishlist-card\">\r\n        <div className=\"card-body\">\r\n          <span className=\"binger-text-strong binger-wishlist-title\">\r\n            Wishlist\r\n          </span>\r\n          <Tabs defaultActiveTab={1}>\r\n            <Tab label=\"TV Series\">\r\n              {this.props.user.tvSeriesWishlist.slice(0, 5).map(item => (\r\n                <div \r\n                  key={item.id} \r\n                  className=\"binger-wishlist-item\"\r\n                  onMouseEnter={() => this.showDeleteButton(item.id)}\r\n                  onMouseLeave={() => this.hideDeleteButton(item.id)}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-2\">\r\n                      <img src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${item.poster_path}`} alt=\"\" height=\"100\" width=\"67\"/>\r\n                    </div>\r\n                    <div className=\"col-lg-8\">\r\n                      <h3><strong>{item.title}</strong></h3>\r\n                      <p className=\"binger-lime\">Added on {moment(item.date).format(\"DD/MM/YYYY HH:mm\")}</p>\r\n                    </div>\r\n                    <div className=\"col-lg-2 binger-flex-center\">\r\n                      <Button \r\n                        show={this.state.showButton[item.id] !== undefined ? this.state.showButton[item.id] : false}\r\n                        onButtonClick={() => this.props.removeTVSeriesFromWishlist(item.id, this.props.user.data.uid)}\r\n                        ref={`delete-${item.id}`}\r\n                        className=\"mr-4 binger-btn-red\"\r\n                        icon=\"times\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <div className=\"binger-wishlist-item binger-flex-center\" style={{flexDirection: 'column'}}>\r\n                <Button \r\n                  show={this.props.user.tvSeriesWishlist.length > 5}\r\n                  //show={this.state.showButton[item.id] !== undefined ? this.state.showButton[item.id] : false}\r\n                  //onButtonClick={() => this.props.removeTVSeriesFromWishlist(item.id, this.props.user.data.uid)}\r\n                  //ref={`delete-${item.id}`}\r\n                  text=\"View All\"\r\n                  className=\"mr-4 binger-btn-blue\" />\r\n              </div>\r\n            </Tab>\r\n            <Tab label=\"Movies\">\r\n              {this.props.user.moviesWishlist.map(item => (\r\n                <div \r\n                  key={item.id} \r\n                  className=\"binger-wishlist-item\"\r\n                  onMouseEnter={() => this.showDeleteButton(item.id)}\r\n                  onMouseLeave={() => this.hideDeleteButton(item.id)}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-2\">\r\n                      <img src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${item.poster_path}`} alt=\"\" height=\"100\" width=\"67\"/>\r\n                    </div>\r\n                    <div className=\"col-lg-8\">\r\n                      <h3><strong>{item.title}</strong></h3>\r\n                      <p className=\"binger-lime\">Added on {moment(item.date).format(\"DD/MM/YYYY HH:mm\")}</p>\r\n                    </div>\r\n                    <div className=\"col-lg-2 binger-flex-center\">\r\n                      <Button \r\n                        show={this.state.showButton[item.id] !== undefined ? this.state.showButton[item.id] : false}\r\n                        onButtonClick={() => this.props.removeMovieFromWishlist(item.id, this.props.user.data.uid)}\r\n                        ref={`delete-${item.id}`}\r\n                        className=\"mr-4 binger-btn-red\"\r\n                        icon=\"times\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getTVSeriesWishlist: userActions.getTVSeriesWishlist,\r\n  getMoviesWishlist: userActions.getMoviesWishlist,\r\n  removeMovieFromWishlist: userActions.removeMovieFromWishlist,\r\n  removeTVSeriesFromWishlist: userActions.removeTVSeriesFromWishlist,\r\n  goToMoviePage: (id) => dispatch => dispatch(push(`/movie/${id}`)),\r\n\tgoToTVSeriesPage: (id) => dispatch => dispatch(push(`/tv/${id}`)),\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    tvseries: state.tvseries,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);\r\n","import React from 'react';\r\nimport { push } from 'react-router-redux'\r\nimport { connect } from 'react-redux'\r\nimport { ProgressBar} from 'components/LayoutComponents';\r\nimport CurrentlyWatching from 'components/BingerComponents/CurrentlyWatching';\r\nimport WatchedMovies from 'components/BingerComponents/WatchedMovies';\r\nimport Wishlist from 'components/BingerComponents/Wishlist';\r\n\r\nclass MainPage extends React.Component{\r\n\r\n  render() {\r\n    return (\r\n\t\t\t<div className=\"container binger-main-container\">\r\n\t      <div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t\t<Wishlist />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-lg-8\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<CurrentlyWatching />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<WatchedMovies />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* <div className=\"col-lg-2\">\r\n\t\t\t\t\t\t<Wishlist />\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\t\t\t\r\n\t\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t<div className=\"col-lg-8\">\r\n\t\t\t\t\t\t<span className=\"binger-text-strong\">\r\n\t\t\t\t\t\t\tPage under construction. Please use the search box above.\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h1><strong>Register Page</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>100%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar value={100} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t<h1><strong>Login Page</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>100%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar value={100} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t<h1><strong>Main Page</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>10%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar color=\"red\" value={10} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h1><strong>Movie Details Page</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>80%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar value={80} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h1><strong>TV Series Details Page</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>60%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar color=\"lime\" value={60} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h1><strong>Edit Profile Page</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>0%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar color=\"red\" value={0} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h1><strong>Navbar</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>50%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar color=\"lime\" value={50} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h1><strong>Wishlist Widget</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>0%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar color=\"blue\" value={0} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h1><strong>Currently Watching Widget</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>0%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar color=\"blue\" value={0} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h1><strong>Watched Widget</strong></h1>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"col-lg-5\">\r\n\t\t\t\t\t\t\t\t\t\t<h3><strong>0%</strong></h3>\r\n\t\t\t\t\t\t\t\t\t\t<ProgressBar color=\"blue\" value={0} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t        {/* <div className=\"col-md-6 col-sm-12\">\r\n\t          <CurrentlyWatching />\r\n\t        </div>\r\n\t        <div className=\"col-md-6 col-sm-12\">\r\n\t          <CurrentlyWatching />\r\n\t        </div>\r\n\t        <div className=\"col-md-6 col-sm-12\">\r\n\t          <CurrentlyWatching />\r\n\t        </div>\r\n\t        <div className=\"col-md-6 col-sm-12\">\r\n\t          <CurrentlyWatching />\r\n\t        </div> */}\r\n\t      </div>\r\n\t\t\t</div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tgoToRegister: () => dispatch => dispatch(push('/register'))\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(MainPage);\r\n","import React from 'react';\r\n//import { push } from 'react-router-redux'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment';\r\nimport { Button, Tag } from 'components/LayoutComponents';\r\nimport { moviesActions, userActions } from 'actions'\r\n\r\nclass MovieDetailsPage extends React.Component{\r\n\r\n  componentDidMount() {\r\n    this.props.getMovieDetails(this.props.match.params.id);\r\n    this.props.getMovieCast(this.props.match.params.id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.props.getMovieDetails(this.props.match.params.id);\r\n      this.props.getMovieCast(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.movieDetailsClear();\r\n  }\r\n\r\n  onTagSubmit = (tag) => {\r\n    this.props.addTagToMovie(tag, this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  onTagClose = (tag) => {\r\n    this.props.deleteTagFromMovie(tag, this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  watchMovie = () => {\r\n    const payload = {\r\n      timestamp: Date(),\r\n      poster_path: this.props.movies.viewMovieDetails.poster_path,\r\n      title: this.props.movies.viewMovieDetails.original_title,\r\n    }\r\n    this.props.watchMovie(payload, this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  unWatchMovie = () => {\r\n    this.props.unWatchMovie(this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  addToFavorite = () => {\r\n    const payload = {\r\n      poster_path: this.props.movies.viewMovieDetails.poster_path,\r\n      title: this.props.movies.viewMovieDetails.title,\r\n    }\r\n    this.props.addMovieToFavorite(payload, this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  removeFromFavorite = () => {\r\n    this.props.removeMovieFromFavorite(this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  addToWishlist = () => {\r\n    const payload = {\r\n      poster_path: this.props.movies.viewMovieDetails.poster_path,\r\n      id: this.props.movies.viewMovieDetails.id,\r\n      title: this.props.movies.viewMovieDetails.title,\r\n      date: Date()\r\n    }\r\n    this.props.addMovieToWishlist(payload, this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  removeFromWishlist = () => {\r\n    this.props.removeMovieFromWishlist(this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  render() {\r\n    const { viewMovieDetails, viewMovieCast } = this.props.movies;\r\n    return ( viewMovieDetails &&\r\n      <div className=\"content container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <div className=\"align-end\">\r\n              <img className=\"movie-poster\" src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${viewMovieDetails.poster_path}`} alt=\"\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-9\">\r\n            <div className=\"row binger-title-row\">\r\n              <div className=\"movie-title\">\r\n                {viewMovieDetails.original_title}\r\n                <span className=\"movie-year\">\r\n                  {moment(viewMovieDetails.release_date).format('YYYY')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"row binger-title-row\">\r\n              {viewMovieDetails.userData.watched &&\r\n                <Button \r\n                  className=\"mr-4 binger-btn-green\"\r\n                  onButtonClick={this.unWatchMovie}\r\n                  expandTextOnHover={true}\r\n                  icon=\"eye\"\r\n                  text=\"Watched\" /> ||\r\n                <Button \r\n                  className=\"mr-4 binger-btn-blue\"\r\n                  onButtonClick={this.watchMovie}\r\n                  expandTextOnHover={true}\r\n                  icon=\"eye-slash\"\r\n                  text=\"Not watched\" />\r\n              }\r\n              {viewMovieDetails.userData.favorite &&\r\n                <Button \r\n                  className=\"mr-4 binger-btn-green\"\r\n                  onButtonClick={this.removeFromFavorite}\r\n                  expandTextOnHover={true}\r\n                  icon=\"heart\"\r\n                  text=\"Added to Favorite\" /> ||\r\n                <Button \r\n                  className=\"mr-4 binger-btn-blue\"\r\n                  onButtonClick={this.addToFavorite}\r\n                  expandTextOnHover={true}\r\n                  icon=\"heart\"\r\n                  text=\"Add to Favorite\" />\r\n              }\r\n              {viewMovieDetails.userData.wishlist &&\r\n                <Button \r\n                  className=\"mr-4 binger-btn-green\"\r\n                  onButtonClick={this.removeFromWishlist}\r\n                  expandTextOnHover={true}\r\n                  icon=\"star\"\r\n                  text=\"In Wishlist\" /> ||\r\n                <Button\r\n                  className=\"mr-4 binger-btn-blue\"\r\n                  onButtonClick={this.addToWishlist}\r\n                  expandTextOnHover={true}\r\n                  icon=\"star\"\r\n                  text=\"Add to Wishlist\" />\r\n              }\r\n              { viewMovieDetails.userData.watched &&\r\n                <div className=\"binger-flex-center\">\r\n                  <span className=\"binger-text\"> You have watched this movie on {moment(viewMovieDetails.userData.watched.timestamp).format('DD/MM/YYYY')}</span>\r\n                </div>\r\n              }\r\n            </div>\r\n            <div className=\"row binger-title-row\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"row binger-flex-center\">\r\n                    <span className=\"binger-text-strong\">Tags</span>\r\n                    { viewMovieDetails.userData && viewMovieDetails.userData.tags && viewMovieDetails.userData.tags.map(tag => (\r\n                      <Tag\r\n                        text={tag.text}\r\n                        key={tag.uid}\r\n                        uid={tag.uid}\r\n                        closable={true}\r\n                        onTagClose={this.onTagClose}\r\n                        color={tag.color} />\r\n                      ))\r\n                    }\r\n                    <Tag \r\n                      type=\"add\"\r\n                      onTagSubmit={this.onTagSubmit}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card binger-actors-card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"row binger-flex-baseline\">\r\n\r\n                  {viewMovieCast && viewMovieCast.cast.slice(0,6).map((actor, index) => (\r\n                    <div key={index} className={`col-12 col-sm-6 col-md-4 col-lg-2 binger-actors-item`}>\r\n                        <img className=\"binger-actors-image\" src={`https://image.tmdb.org/t/p/w138_and_h175_face${actor.profile_path}`} alt=\"\"/>\r\n\r\n                        <span className=\"binger-actors-name\">{actor.name}</span>\r\n                        <span className=\"binger-actors-character\">{actor.character}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getMovieDetails: moviesActions.getMovieDetails,\r\n  getMovieCast: moviesActions.getMovieCast,\r\n  addTagToMovie: userActions.addTagToMovie,\r\n  deleteTagFromMovie: userActions.deleteTagFromMovie,\r\n  watchMovie: userActions.watchMovie,\r\n  unWatchMovie: userActions.unWatchMovie,\r\n  addMovieToFavorite: userActions.addMovieToFavorite,\r\n  removeMovieFromFavorite: userActions.removeMovieFromFavorite,\r\n  addMovieToWishlist: userActions.addMovieToWishlist,\r\n  removeMovieFromWishlist: userActions.removeMovieFromWishlist,\r\n  movieDetailsClear: moviesActions.movieDetailsClear,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  console.log(state);\r\n  return {\r\n    user: state.user,\r\n    movies: state.movies,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetailsPage);","import React from 'react';\r\n//import { push } from 'react-router-redux'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment';\r\nimport _ from 'lodash';\r\nimport { Button, Tag, Checkbox, Tabs, Tab, ProgressCircle } from 'components/LayoutComponents';\r\nimport { userActions, tvseriesActions } from 'actions'\r\n\r\nclass TVSeriesDetailsPage extends React.Component{\r\n\r\n  state = {\r\n    checked: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getTVSeriesDetails(this.props.match.params.id);\r\n    this.props.getTVSeriesCast(this.props.match.params.id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      this.props.getTVSeriesDetails(this.props.match.params.id);\r\n      this.props.getTVSeriesCast(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.tvseriesDetailsClear();\r\n  }\r\n\r\n  onTagSubmit = (tag) => {\r\n    this.props.addTagToTVSeries(tag, this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  onTagClose = (tag) => {\r\n    this.props.deleteTagFromTVSeries(tag, this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  addToWishlist = () => {\r\n    const payload = {\r\n      poster_path: this.props.tvseries.viewTVSeriesDetails.poster_path,\r\n      id: this.props.tvseries.viewTVSeriesDetails.id,\r\n      title: this.props.tvseries.viewTVSeriesDetails.name,\r\n      date: Date(),\r\n    }\r\n    this.props.addTVSeriesToWishlist(payload, this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  removeFromWishlist = () => {\r\n    this.props.removeTVSeriesFromWishlist(this.props.match.params.id, this.props.user.data.uid);\r\n  }\r\n\r\n  handleEpisodeCheckbox = (name, status, season, episode) => {\r\n    let slug = name.split('-');\r\n    const payload = {\r\n      tv_poster_path: this.props.tvseries.viewTVSeriesDetails.poster_path,\r\n      tv_name: this.props.tvseries.viewTVSeriesDetails.original_name,\r\n      user_id: this.props.user.data.uid,\r\n      tv_id: this.props.tvseries.viewTVSeriesDetails.id,\r\n      season_id: slug[0],\r\n      season_number: season.season_number,\r\n      season_name: season.name,\r\n      episode_id: slug[1],\r\n      episode_season: season.season_number,\r\n      episode_number: episode.episode_number,\r\n      episode_name: episode.name,\r\n    }\r\n\r\n    status === true ? this.props.watchEpisode(payload) : this.props.unWatchEpisode(payload);\r\n  }\r\n\r\n  handleSeasonCheckbox = (id, status) => {\r\n    this.props.tvseries.viewTVSeriesDetails.seasons.map(season => {\r\n      if (season.id === id) {\r\n        const payload = {\r\n          tv_poster_path: this.props.tvseries.viewTVSeriesDetails.poster_path,\r\n          tv_name: this.props.tvseries.viewTVSeriesDetails.original_name,\r\n          user_id: this.props.user.data.uid,\r\n          tv_id: this.props.tvseries.viewTVSeriesDetails.id,\r\n          season_id: season.id,\r\n          season_number: season.season_number,\r\n          season_name: season.name,\r\n          episodes: season.episodes,\r\n          episode_id: season.episodes[season.episodes.length-1].id,\r\n          episode_season: season.season_number,\r\n          episode_number: season.episodes[season.episodes.length-1].episode_number,\r\n          episode_name: season.episodes[season.episodes.length-1].name,\r\n        }\r\n        status === true ? this.props.watchSeason(payload) : this.props.unWatchSeason(payload);\r\n      }\r\n    })\r\n  }\r\n\r\n  getPercentageColor = (percentage) => {\r\n    if (percentage <= 10) {\r\n      return 'red'\r\n    } else if (percentage > 10 && percentage <=50) {\r\n      return 'orange'\r\n    } else if (percentage > 50 && percentage <=80) {\r\n      return 'yellow' //CREATE YELLOW!!!\r\n    } else return 'green'\r\n  }\r\n\r\n  render() {\r\n    const { viewTVSeriesDetails, viewTVSeriesCast } = this.props.tvseries;\r\n    return ( viewTVSeriesDetails &&\r\n      <div className=\"content container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <div className=\"align-end\">\r\n              <img className=\"movie-poster\" src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${viewTVSeriesDetails.poster_path}`} alt=\"\"/>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-9\">\r\n            <div className=\"row binger-title-row\">\r\n              <div className=\"movie-title\">\r\n                {viewTVSeriesDetails.original_name}\r\n                <span className=\"movie-year\">\r\n                  {moment(viewTVSeriesDetails.first_air_date).format('YYYY')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"row binger-title-row binger-flex-center\">\r\n              {viewTVSeriesDetails.isFavourite &&\r\n                <Button \r\n                  className=\"mr-4 binger-btn-green\"\r\n                  expandTextOnHover={true}\r\n                  icon=\"heart\"\r\n                  text=\"Added to Favorite\" /> ||\r\n                <Button \r\n                  className=\"mr-4 binger-btn-blue\"\r\n                  expandTextOnHover={true}\r\n                  icon=\"heart\"\r\n                  text=\"Add to Favorite\" />\r\n              }\r\n              {viewTVSeriesDetails.userData.wishlist &&\r\n                <Button \r\n                  className=\"mr-4 binger-btn-green\"\r\n                  onButtonClick={this.removeFromWishlist}\r\n                  expandTextOnHover={true}\r\n                  icon=\"star\"\r\n                  text=\"In Wishlist\" /> ||\r\n                <Button\r\n                  className=\"mr-4 binger-btn-blue\"\r\n                  onButtonClick={this.addToWishlist}\r\n                  expandTextOnHover={true}\r\n                  icon=\"star\"\r\n                  text=\"Add to Wishlist\" />\r\n              }\r\n              <ProgressCircle\r\n                strokeWidth=\"10\"\r\n                color={this.getPercentageColor(viewTVSeriesDetails.userData.totalWatched)}\r\n                percentage={viewTVSeriesDetails.userData.totalWatched}/>\r\n            </div>\r\n            <div className=\"row binger-title-row\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"row binger-flex-center\">\r\n                    <span className=\"binger-text-strong\">Tags</span>\r\n                    { viewTVSeriesDetails.userData && viewTVSeriesDetails.userData.tags && viewTVSeriesDetails.userData.tags.map(tag => (\r\n                      <Tag\r\n                        text={tag.text}\r\n                        key={tag.uid}\r\n                        uid={tag.uid}\r\n                        closable={true}\r\n                        onTagClose={this.onTagClose}\r\n                        color={tag.color} />\r\n                      ))\r\n                    }\r\n                    <Tag \r\n                      type=\"add\"\r\n                      onTagSubmit={this.onTagSubmit}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card binger-actors-card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"row binger-flex-baseline\">\r\n\r\n                  {viewTVSeriesCast && viewTVSeriesCast.cast.slice(0,6).map((actor, index) => (\r\n                    <div key={index} className={`col-12 col-sm-6 col-md-4 col-lg-2 binger-actors-item`}>\r\n                        <img className=\"binger-actors-image\" src={`https://image.tmdb.org/t/p/w138_and_h175_face${actor.profile_path}`} alt=\"\"/>\r\n\r\n                        <span className=\"binger-actors-name\">{actor.name}</span>\r\n                        <span className=\"binger-actors-character\">{actor.character}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card binger-actors-card\">\r\n              <div className=\"card-body\">\r\n                <Tabs\r\n                  defaultActiveTab={1}\r\n                >\r\n                  {viewTVSeriesDetails && viewTVSeriesDetails.seasons && viewTVSeriesDetails.seasons.map(season => (\r\n                    <Tab label={season.name} key={season.id}>\r\n                      <div className=\"binger-flex-center\" key={season.id}>\r\n                        <Checkbox\r\n                          onCheckboxChange={this.handleSeasonCheckbox}\r\n                          color=\"green\"\r\n                          name={season.id}\r\n                          checked={\r\n                            season.episodes.length === \r\n                            _.keys(viewTVSeriesDetails &&\r\n                            viewTVSeriesDetails.userData &&\r\n                            viewTVSeriesDetails.userData.watched &&\r\n                            viewTVSeriesDetails.userData.watched.content &&\r\n                            viewTVSeriesDetails.userData.watched.content[season.id] &&\r\n                            viewTVSeriesDetails.userData.watched.content[season.id].content).length}\r\n                        />\r\n                        <span className=\"binger-text-strong binger-green ml-5px\">I have seen the whole season!</span>\r\n                      </div>\r\n                      {season.episodes.map(episode => (\r\n                        <div className=\"binger-flex-center\" key={episode.id}>\r\n                          <Checkbox\r\n                            color=\"secondary\"\r\n                            onCheckboxChange={(name, checked) => this.handleEpisodeCheckbox(name, checked, season, episode)}\r\n                            name={`${season.id}-${episode.id}`}\r\n                            checked={\r\n                              viewTVSeriesDetails &&\r\n                              viewTVSeriesDetails.userData &&\r\n                              viewTVSeriesDetails.userData.watched &&\r\n                              viewTVSeriesDetails.userData.watched.content &&\r\n                              viewTVSeriesDetails.userData.watched.content[season.id] &&\r\n                              viewTVSeriesDetails.userData.watched.content[season.id].content &&\r\n                              viewTVSeriesDetails.userData.watched.content[season.id].content[episode.id]}\r\n                          />\r\n                          <span className=\"binger-text-strong ml-5px\">{episode.name}</span>\r\n                        </div>\r\n                      ))}\r\n                    </Tab>\r\n                  ))}\r\n                </Tabs>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getTVSeriesDetails: tvseriesActions.getTVSeriesDetails,\r\n  getTVSeriesCast: tvseriesActions.getTVSeriesCast,\r\n  getTVSeriesPercentage: tvseriesActions.getTVSeriesPercentage,\r\n  addTagToTVSeries: userActions.addTagToTVSeries,\r\n  deleteTagFromTVSeries: userActions.deleteTagFromTVSeries,\r\n  addTVSeriesToWishlist: userActions.addTVSeriesToWishlist,\r\n  removeTVSeriesFromWishlist: userActions.removeTVSeriesFromWishlist,\r\n  tvseriesDetailsClear: tvseriesActions.tvseriesDetailsClear,\r\n  watchEpisode: userActions.watchEpisode,\r\n  unWatchEpisode: userActions.unWatchEpisode,\r\n  watchSeason: userActions.watchSeason,\r\n  unWatchSeason: userActions.unWatchSeason,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n    tvseries: state.tvseries,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TVSeriesDetailsPage);","import React from 'react'\r\nimport { Switch } from 'react-router'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute} from './PublicRoute'\r\nimport LoginPage from 'pages/LoginPage'\r\nimport RegisterPage from 'pages/RegisterPage'\r\nimport ComponentsPage from 'pages/ComponentsPage'\r\nimport MainPage from 'pages/MainPage'\r\nimport MovieDetailsPage from 'pages/MovieDetailsPage'\r\nimport TVSeriesDetailsPage from 'pages/TVSeriesDetailsPage'\r\n\r\nconst routes = (\r\n  <div>\r\n    <Switch>\r\n      <PublicRoute exact path={'/'} component={LoginPage} />\r\n      <PublicRoute exact path={'/login'} component={LoginPage} />\r\n      <PublicRoute exact path={'/register'} component={RegisterPage} />\r\n      <PrivateRoute exact path={'/components'} component={ComponentsPage} />\r\n      <PrivateRoute exact path={'/main'} component={MainPage} />\r\n      <PrivateRoute exact path={'/movie/:id'} component={MovieDetailsPage} />\r\n      <PrivateRoute exact path={'/tv/:id'} component={TVSeriesDetailsPage} />\r\n    </Switch>\r\n  </div>\r\n)\r\n\r\nexport default routes\r\n","import React from 'react';\r\nimport { userActions, appActions } from './actions';\r\nimport { connect } from 'react-redux';\r\nimport Notification from 'components/LayoutComponents/Notification';\r\nimport routes from 'routes/routes';\r\n\r\nclass App extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.getCurrentUser()\r\n    console.log(\"0.1.14\");\r\n  }\r\n\r\n  render() {\r\n    return ( !this.props.isFetching ?\r\n      <div>\r\n        <Notification />\r\n        { routes }\r\n      </div> : null\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentUser: userActions.getCurrentUser,\r\n  setLoadingState: appActions.setLoadingState,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport 'resources/binger.scss'\r\nimport config from 'lib/config';\r\nimport configureStore, { history } from './configureStore'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport App from './App';\r\n\r\nimport firebase from 'firebase'\r\nvar firebaseConfig = {\r\n  apiKey: config.FIREBASE_API_KEY,\r\n  authDomain: \"binger-e4fea.firebaseapp.com\",\r\n  databaseURL: \"https://binger-e4fea.firebaseio.com\",\r\n  projectId: \"binger-e4fea\",\r\n  storageBucket: \"binger-e4fea.appspot.com\",\r\n  messagingSenderId: \"100930507189\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\n\r\nconst store = configureStore();\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <App />\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}